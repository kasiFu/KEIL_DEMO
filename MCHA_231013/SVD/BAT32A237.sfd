/*
 * ARM Limited (ARM) is supplying this software for use with Cortex-M
 * processor based microcontroller, but can be equally used for other
 * suitable processor architectures. This file can be freely distributed.
 * Modifications to this file shall be clearly marked.
 * 
 * THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 * @file     BAT32A237.sfd
 * @brief    CMSIS-SVD SFD File
 * @version  1.2
 * @date     26. May 2023
 * @note     Generated by SVDConv V3.3.39 on Friday, 26.05.2023 16:27:26
 *           from File 'BAT32A237.svd',
 *           last modified on Friday, 26.05.2023 08:21:10
 */




// ---------------------------  Register Item Address: MTB_POSITION  ------------------------------
// SVD Line: 92

unsigned int MTB_POSITION __AT (0x40019000);



// ----------------------------  Field Item: MTB_POSITION_POINTER  --------------------------------
// SVD Line: 99

//  <item> SFDITEM_FIELD__MTB_POSITION_POINTER
//    <name> POINTER </name>
//    <rw> 
//    <i> [Bits 31..3] RW (@ 0x40019000) POINTER </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_POSITION >> 3) & 0x1FFFFFFF), ((MTB_POSITION = (MTB_POSITION & ~(0x1FFFFFFFUL << 3 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFFFFF) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: MTB_POSITION_WRAP  ---------------------------------
// SVD Line: 105

//  <item> SFDITEM_FIELD__MTB_POSITION_WRAP
//    <name> WRAP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40019000) WRAP </i>
//    <check> 
//      <loc> ( (unsigned int) MTB_POSITION ) </loc>
//      <o.2..2> WRAP
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: MTB_POSITION  ----------------------------------
// SVD Line: 92

//  <rtree> SFDITEM_REG__MTB_POSITION
//    <name> POSITION </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019000) MTB Position Register </i>
//    <loc> ( (unsigned int)((MTB_POSITION >> 0) & 0xFFFFFFFF), ((MTB_POSITION = (MTB_POSITION & ~(0xFFFFFFFCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MTB_POSITION_POINTER </item>
//    <item> SFDITEM_FIELD__MTB_POSITION_WRAP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MTB_MASTER  -------------------------------
// SVD Line: 113

unsigned int MTB_MASTER __AT (0x40019004);



// --------------------------------  Field Item: MTB_MASTER_EN  -----------------------------------
// SVD Line: 120

//  <item> SFDITEM_FIELD__MTB_MASTER_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40019004) EN </i>
//    <check> 
//      <loc> ( (unsigned int) MTB_MASTER ) </loc>
//      <o.31..31> EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MTB_MASTER_HALTREQ  ---------------------------------
// SVD Line: 126

//  <item> SFDITEM_FIELD__MTB_MASTER_HALTREQ
//    <name> HALTREQ </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40019004) HALTREQ </i>
//    <check> 
//      <loc> ( (unsigned int) MTB_MASTER ) </loc>
//      <o.9..9> HALTREQ
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MTB_MASTER_RAMPRIV  ---------------------------------
// SVD Line: 132

//  <item> SFDITEM_FIELD__MTB_MASTER_RAMPRIV
//    <name> RAMPRIV </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40019004) RAMPRIV </i>
//    <check> 
//      <loc> ( (unsigned int) MTB_MASTER ) </loc>
//      <o.8..8> RAMPRIV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MTB_MASTER_SFRWPRIV  --------------------------------
// SVD Line: 138

//  <item> SFDITEM_FIELD__MTB_MASTER_SFRWPRIV
//    <name> SFRWPRIV </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40019004) SFRWPRIV </i>
//    <check> 
//      <loc> ( (unsigned int) MTB_MASTER ) </loc>
//      <o.7..7> SFRWPRIV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MTB_MASTER_TSTOPEN  ---------------------------------
// SVD Line: 144

//  <item> SFDITEM_FIELD__MTB_MASTER_TSTOPEN
//    <name> TSTOPEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40019004) TSTOPEN </i>
//    <check> 
//      <loc> ( (unsigned int) MTB_MASTER ) </loc>
//      <o.6..6> TSTOPEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MTB_MASTER_TSTARTEN  --------------------------------
// SVD Line: 150

//  <item> SFDITEM_FIELD__MTB_MASTER_TSTARTEN
//    <name> TSTARTEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40019004) TSTARTEN </i>
//    <check> 
//      <loc> ( (unsigned int) MTB_MASTER ) </loc>
//      <o.5..5> TSTARTEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: MTB_MASTER_MASK  ----------------------------------
// SVD Line: 156

//  <item> SFDITEM_FIELD__MTB_MASTER_MASK
//    <name> MASK </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40019004) MASK </i>
//    <edit> 
//      <loc> ( (unsigned char)((MTB_MASTER >> 0) & 0x1F), ((MTB_MASTER = (MTB_MASTER & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: MTB_MASTER  -----------------------------------
// SVD Line: 113

//  <rtree> SFDITEM_REG__MTB_MASTER
//    <name> MASTER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019004) MTB Master Register </i>
//    <loc> ( (unsigned int)((MTB_MASTER >> 0) & 0xFFFFFFFF), ((MTB_MASTER = (MTB_MASTER & ~(0x800003FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x800003FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MTB_MASTER_EN </item>
//    <item> SFDITEM_FIELD__MTB_MASTER_HALTREQ </item>
//    <item> SFDITEM_FIELD__MTB_MASTER_RAMPRIV </item>
//    <item> SFDITEM_FIELD__MTB_MASTER_SFRWPRIV </item>
//    <item> SFDITEM_FIELD__MTB_MASTER_TSTOPEN </item>
//    <item> SFDITEM_FIELD__MTB_MASTER_TSTARTEN </item>
//    <item> SFDITEM_FIELD__MTB_MASTER_MASK </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: MTB_FLOW  --------------------------------
// SVD Line: 165

unsigned int MTB_FLOW __AT (0x40019008);



// -----------------------------  Field Item: MTB_FLOW_WATERMARK  ---------------------------------
// SVD Line: 172

//  <item> SFDITEM_FIELD__MTB_FLOW_WATERMARK
//    <name> WATERMARK </name>
//    <rw> 
//    <i> [Bits 31..3] RW (@ 0x40019008) WATERMARK </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_FLOW >> 3) & 0x1FFFFFFF), ((MTB_FLOW = (MTB_FLOW & ~(0x1FFFFFFFUL << 3 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFFFFF) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: MTB_FLOW_AUTOHALT  ---------------------------------
// SVD Line: 178

//  <item> SFDITEM_FIELD__MTB_FLOW_AUTOHALT
//    <name> AUTOHALT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40019008) AUTOHALT </i>
//    <check> 
//      <loc> ( (unsigned int) MTB_FLOW ) </loc>
//      <o.1..1> AUTOHALT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MTB_FLOW_AUTOSTOP  ---------------------------------
// SVD Line: 184

//  <item> SFDITEM_FIELD__MTB_FLOW_AUTOSTOP
//    <name> AUTOSTOP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40019008) AUTOSTOP </i>
//    <check> 
//      <loc> ( (unsigned int) MTB_FLOW ) </loc>
//      <o.0..0> AUTOSTOP
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: MTB_FLOW  ------------------------------------
// SVD Line: 165

//  <rtree> SFDITEM_REG__MTB_FLOW
//    <name> FLOW </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019008) MTB Flow Register </i>
//    <loc> ( (unsigned int)((MTB_FLOW >> 0) & 0xFFFFFFFF), ((MTB_FLOW = (MTB_FLOW & ~(0xFFFFFFFBUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MTB_FLOW_WATERMARK </item>
//    <item> SFDITEM_FIELD__MTB_FLOW_AUTOHALT </item>
//    <item> SFDITEM_FIELD__MTB_FLOW_AUTOSTOP </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: MTB_BASE  --------------------------------
// SVD Line: 193

unsigned int MTB_BASE __AT (0x4001900C);



// ---------------------------------  Register Item: MTB_BASE  ------------------------------------
// SVD Line: 193

//  <item> SFDITEM_REG__MTB_BASE
//    <name> BASE </name>
//    <i> [Bits 31..0] RO (@ 0x4001900C) MTB Base Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_BASE >> 0) & 0xFFFFFFFF), ((MTB_BASE = (MTB_BASE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: MTB_LOCKACCESS  -----------------------------
// SVD Line: 202

unsigned int MTB_LOCKACCESS __AT (0x40019FB0);



// ------------------------------  Register Item: MTB_LOCKACCESS  ---------------------------------
// SVD Line: 202

//  <item> SFDITEM_REG__MTB_LOCKACCESS
//    <name> LOCKACCESS </name>
//    <i> [Bits 31..0] RW (@ 0x40019FB0) MTB Lock Access Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_LOCKACCESS >> 0) & 0xFFFFFFFF), ((MTB_LOCKACCESS = (MTB_LOCKACCESS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: MTB_LOCKSTATUS  -----------------------------
// SVD Line: 211

unsigned int MTB_LOCKSTATUS __AT (0x40019FB4);



// ------------------------------  Register Item: MTB_LOCKSTATUS  ---------------------------------
// SVD Line: 211

//  <item> SFDITEM_REG__MTB_LOCKSTATUS
//    <name> LOCKSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x40019FB4) MTB Lock Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_LOCKSTATUS >> 0) & 0xFFFFFFFF), ((MTB_LOCKSTATUS = (MTB_LOCKSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: MTB_AUTHSTATUS  -----------------------------
// SVD Line: 220

unsigned int MTB_AUTHSTATUS __AT (0x40019FB8);



// ------------------------------  Register Item: MTB_AUTHSTATUS  ---------------------------------
// SVD Line: 220

//  <item> SFDITEM_REG__MTB_AUTHSTATUS
//    <name> AUTHSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x40019FB8) MTB Authentication Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_AUTHSTATUS >> 0) & 0xFFFFFFFF), ((MTB_AUTHSTATUS = (MTB_AUTHSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: MTB_DEVARCH  -------------------------------
// SVD Line: 229

unsigned int MTB_DEVARCH __AT (0x40019FBC);



// -------------------------------  Register Item: MTB_DEVARCH  -----------------------------------
// SVD Line: 229

//  <item> SFDITEM_REG__MTB_DEVARCH
//    <name> DEVARCH </name>
//    <i> [Bits 31..0] RO (@ 0x40019FBC) MTB Device Architecture Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_DEVARCH >> 0) & 0xFFFFFFFF), ((MTB_DEVARCH = (MTB_DEVARCH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: MTB_DEVID  --------------------------------
// SVD Line: 238

unsigned int MTB_DEVID __AT (0x40019FC8);



// --------------------------------  Register Item: MTB_DEVID  ------------------------------------
// SVD Line: 238

//  <item> SFDITEM_REG__MTB_DEVID
//    <name> DEVID </name>
//    <i> [Bits 31..0] RO (@ 0x40019FC8) MTB Device Configuration Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_DEVID >> 0) & 0xFFFFFFFF), ((MTB_DEVID = (MTB_DEVID & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: MTB_DEVTYPE  -------------------------------
// SVD Line: 247

unsigned int MTB_DEVTYPE __AT (0x40019FCC);



// -------------------------------  Register Item: MTB_DEVTYPE  -----------------------------------
// SVD Line: 247

//  <item> SFDITEM_REG__MTB_DEVTYPE
//    <name> DEVTYPE </name>
//    <i> [Bits 31..0] RO (@ 0x40019FCC) MTB Device Type Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_DEVTYPE >> 0) & 0xFFFFFFFF), ((MTB_DEVTYPE = (MTB_DEVTYPE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: MTB_PID_PID_PID4  ----------------------------
// SVD Line: 256

unsigned int MTB_PID_PID_PID4 __AT (0x40019FD0);



// -----------------------------  Register Item: MTB_PID_PID_PID4  --------------------------------
// SVD Line: 256

//  <item> SFDITEM_REG__MTB_PID_PID_PID4
//    <name> PID4 </name>
//    <i> [Bits 31..0] RO (@ 0x40019FD0) CoreSight Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_PID_PID_PID4 >> 0) & 0xFFFFFFFF), ((MTB_PID_PID_PID4 = (MTB_PID_PID_PID4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: MTB_PID_PID_PID5  ----------------------------
// SVD Line: 256

unsigned int MTB_PID_PID_PID5 __AT (0x40019FD4);



// -----------------------------  Register Item: MTB_PID_PID_PID5  --------------------------------
// SVD Line: 256

//  <item> SFDITEM_REG__MTB_PID_PID_PID5
//    <name> PID5 </name>
//    <i> [Bits 31..0] RO (@ 0x40019FD4) CoreSight Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_PID_PID_PID5 >> 0) & 0xFFFFFFFF), ((MTB_PID_PID_PID5 = (MTB_PID_PID_PID5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: MTB_PID_PID_PID6  ----------------------------
// SVD Line: 256

unsigned int MTB_PID_PID_PID6 __AT (0x40019FD8);



// -----------------------------  Register Item: MTB_PID_PID_PID6  --------------------------------
// SVD Line: 256

//  <item> SFDITEM_REG__MTB_PID_PID_PID6
//    <name> PID6 </name>
//    <i> [Bits 31..0] RO (@ 0x40019FD8) CoreSight Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_PID_PID_PID6 >> 0) & 0xFFFFFFFF), ((MTB_PID_PID_PID6 = (MTB_PID_PID_PID6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: MTB_PID_PID_PID7  ----------------------------
// SVD Line: 256

unsigned int MTB_PID_PID_PID7 __AT (0x40019FDC);



// -----------------------------  Register Item: MTB_PID_PID_PID7  --------------------------------
// SVD Line: 256

//  <item> SFDITEM_REG__MTB_PID_PID_PID7
//    <name> PID7 </name>
//    <i> [Bits 31..0] RO (@ 0x40019FDC) CoreSight Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_PID_PID_PID7 >> 0) & 0xFFFFFFFF), ((MTB_PID_PID_PID7 = (MTB_PID_PID_PID7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: MTB_PID_PID_PID0  ----------------------------
// SVD Line: 267

unsigned int MTB_PID_PID_PID0 __AT (0x40019FE0);



// -----------------------------  Register Item: MTB_PID_PID_PID0  --------------------------------
// SVD Line: 267

//  <item> SFDITEM_REG__MTB_PID_PID_PID0
//    <name> PID0 </name>
//    <i> [Bits 31..0] RO (@ 0x40019FE0) CoreSight Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_PID_PID_PID0 >> 0) & 0xFFFFFFFF), ((MTB_PID_PID_PID0 = (MTB_PID_PID_PID0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: MTB_PID_PID_PID1  ----------------------------
// SVD Line: 267

unsigned int MTB_PID_PID_PID1 __AT (0x40019FE4);



// -----------------------------  Register Item: MTB_PID_PID_PID1  --------------------------------
// SVD Line: 267

//  <item> SFDITEM_REG__MTB_PID_PID_PID1
//    <name> PID1 </name>
//    <i> [Bits 31..0] RO (@ 0x40019FE4) CoreSight Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_PID_PID_PID1 >> 0) & 0xFFFFFFFF), ((MTB_PID_PID_PID1 = (MTB_PID_PID_PID1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: MTB_PID_PID_PID2  ----------------------------
// SVD Line: 267

unsigned int MTB_PID_PID_PID2 __AT (0x40019FE8);



// -----------------------------  Register Item: MTB_PID_PID_PID2  --------------------------------
// SVD Line: 267

//  <item> SFDITEM_REG__MTB_PID_PID_PID2
//    <name> PID2 </name>
//    <i> [Bits 31..0] RO (@ 0x40019FE8) CoreSight Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_PID_PID_PID2 >> 0) & 0xFFFFFFFF), ((MTB_PID_PID_PID2 = (MTB_PID_PID_PID2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: MTB_PID_PID_PID3  ----------------------------
// SVD Line: 267

unsigned int MTB_PID_PID_PID3 __AT (0x40019FEC);



// -----------------------------  Register Item: MTB_PID_PID_PID3  --------------------------------
// SVD Line: 267

//  <item> SFDITEM_REG__MTB_PID_PID_PID3
//    <name> PID3 </name>
//    <i> [Bits 31..0] RO (@ 0x40019FEC) CoreSight Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_PID_PID_PID3 >> 0) & 0xFFFFFFFF), ((MTB_PID_PID_PID3 = (MTB_PID_PID_PID3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: MTB_CID_CID_CID0  ----------------------------
// SVD Line: 278

unsigned int MTB_CID_CID_CID0 __AT (0x40019FF0);



// -----------------------------  Register Item: MTB_CID_CID_CID0  --------------------------------
// SVD Line: 278

//  <item> SFDITEM_REG__MTB_CID_CID_CID0
//    <name> CID0 </name>
//    <i> [Bits 31..0] RO (@ 0x40019FF0) CoreSight Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_CID_CID_CID0 >> 0) & 0xFFFFFFFF), ((MTB_CID_CID_CID0 = (MTB_CID_CID_CID0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: MTB_CID_CID_CID1  ----------------------------
// SVD Line: 278

unsigned int MTB_CID_CID_CID1 __AT (0x40019FF4);



// -----------------------------  Register Item: MTB_CID_CID_CID1  --------------------------------
// SVD Line: 278

//  <item> SFDITEM_REG__MTB_CID_CID_CID1
//    <name> CID1 </name>
//    <i> [Bits 31..0] RO (@ 0x40019FF4) CoreSight Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_CID_CID_CID1 >> 0) & 0xFFFFFFFF), ((MTB_CID_CID_CID1 = (MTB_CID_CID_CID1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: MTB_CID_CID_CID2  ----------------------------
// SVD Line: 278

unsigned int MTB_CID_CID_CID2 __AT (0x40019FF8);



// -----------------------------  Register Item: MTB_CID_CID_CID2  --------------------------------
// SVD Line: 278

//  <item> SFDITEM_REG__MTB_CID_CID_CID2
//    <name> CID2 </name>
//    <i> [Bits 31..0] RO (@ 0x40019FF8) CoreSight Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_CID_CID_CID2 >> 0) & 0xFFFFFFFF), ((MTB_CID_CID_CID2 = (MTB_CID_CID_CID2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: MTB_CID_CID_CID3  ----------------------------
// SVD Line: 278

unsigned int MTB_CID_CID_CID3 __AT (0x40019FFC);



// -----------------------------  Register Item: MTB_CID_CID_CID3  --------------------------------
// SVD Line: 278

//  <item> SFDITEM_REG__MTB_CID_CID_CID3
//    <name> CID3 </name>
//    <i> [Bits 31..0] RO (@ 0x40019FFC) CoreSight Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MTB_CID_CID_CID3 >> 0) & 0xFFFFFFFF), ((MTB_CID_CID_CID3 = (MTB_CID_CID_CID3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: MTB  --------------------------------------
// SVD Line: 76

//  <view> MTB
//    <name> MTB </name>
//    <item> SFDITEM_REG__MTB_POSITION </item>
//    <item> SFDITEM_REG__MTB_MASTER </item>
//    <item> SFDITEM_REG__MTB_FLOW </item>
//    <item> SFDITEM_REG__MTB_BASE </item>
//    <item> SFDITEM_REG__MTB_LOCKACCESS </item>
//    <item> SFDITEM_REG__MTB_LOCKSTATUS </item>
//    <item> SFDITEM_REG__MTB_AUTHSTATUS </item>
//    <item> SFDITEM_REG__MTB_DEVARCH </item>
//    <item> SFDITEM_REG__MTB_DEVID </item>
//    <item> SFDITEM_REG__MTB_DEVTYPE </item>
//    <item> SFDITEM_REG__MTB_PID_PID_PID4 </item>
//    <item> SFDITEM_REG__MTB_PID_PID_PID5 </item>
//    <item> SFDITEM_REG__MTB_PID_PID_PID6 </item>
//    <item> SFDITEM_REG__MTB_PID_PID_PID7 </item>
//    <item> SFDITEM_REG__MTB_PID_PID_PID0 </item>
//    <item> SFDITEM_REG__MTB_PID_PID_PID1 </item>
//    <item> SFDITEM_REG__MTB_PID_PID_PID2 </item>
//    <item> SFDITEM_REG__MTB_PID_PID_PID3 </item>
//    <item> SFDITEM_REG__MTB_CID_CID_CID0 </item>
//    <item> SFDITEM_REG__MTB_CID_CID_CID1 </item>
//    <item> SFDITEM_REG__MTB_CID_CID_CID2 </item>
//    <item> SFDITEM_REG__MTB_CID_CID_CID3 </item>
//  </view>
//  


// -----------------------------  Register Item Address: CGC_CMC  ---------------------------------
// SVD Line: 316

unsigned char CGC_CMC __AT (0x40020400);



// --------------------------------  Field Item: CGC_CMC_AMPH  ------------------------------------
// SVD Line: 327

//  <item> SFDITEM_FIELD__CGC_CMC_AMPH
//    <name> AMPH </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020400) Control of X1 clock oscillation frequency </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.0..0> AMPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CGC_CMC_AMPHS  -----------------------------------
// SVD Line: 335

//  <item> SFDITEM_FIELD__CGC_CMC_AMPHS
//    <name> AMPHS </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x40020400) Control of XT1 clock oscillation frequency </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_CMC >> 1) & 0x3), ((CGC_CMC = (CGC_CMC & ~(0x3UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CGC_CMC_OSCSELS  ----------------------------------
// SVD Line: 343

//  <item> SFDITEM_FIELD__CGC_CMC_OSCSELS
//    <name> OSCSELS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020400) Sub OSC Select </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.4..4> OSCSELS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CGC_CMC_EXCLKS  -----------------------------------
// SVD Line: 351

//  <item> SFDITEM_FIELD__CGC_CMC_EXCLKS
//    <name> EXCLKS </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020400) External Clock input mode </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.5..5> EXCLKS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CGC_CMC_OSCSEL  -----------------------------------
// SVD Line: 359

//  <item> SFDITEM_FIELD__CGC_CMC_OSCSEL
//    <name> OSCSEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020400) Main OSC Select </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.6..6> OSCSEL
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CGC_CMC_EXCLK  -----------------------------------
// SVD Line: 367

//  <item> SFDITEM_FIELD__CGC_CMC_EXCLK
//    <name> EXCLK </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020400) External Clock input mode </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.7..7> EXCLK
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: CGC_CMC  ------------------------------------
// SVD Line: 316

//  <rtree> SFDITEM_REG__CGC_CMC
//    <name> CMC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020400) Clock operaton Mode Control Register </i>
//    <loc> ( (unsigned char)((CGC_CMC >> 0) & 0xFF), ((CGC_CMC = (CGC_CMC & ~(0xF7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_CMC_AMPH </item>
//    <item> SFDITEM_FIELD__CGC_CMC_AMPHS </item>
//    <item> SFDITEM_FIELD__CGC_CMC_OSCSELS </item>
//    <item> SFDITEM_FIELD__CGC_CMC_EXCLKS </item>
//    <item> SFDITEM_FIELD__CGC_CMC_OSCSEL </item>
//    <item> SFDITEM_FIELD__CGC_CMC_EXCLK </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_CSC  ---------------------------------
// SVD Line: 378

unsigned char CGC_CSC __AT (0x40020401);



// -------------------------------  Field Item: CGC_CSC_HIOSTOP  ----------------------------------
// SVD Line: 389

//  <item> SFDITEM_FIELD__CGC_CSC_HIOSTOP
//    <name> HIOSTOP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020401) \nHigh-speed on-chip oscillator clock operation control\n0 : START = High-speed on-chip oscillator operating\n1 : STOP = High-speed on-chip oscillator stopped </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CSC ) </loc>
//      <o.0..0> HIOSTOP
//        <0=> 0: START = High-speed on-chip oscillator operating
//        <1=> 1: STOP = High-speed on-chip oscillator stopped
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_CSC_XTSTOP  -----------------------------------
// SVD Line: 409

//  <item> SFDITEM_FIELD__CGC_CSC_XTSTOP
//    <name> XTSTOP </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020401) \nSubsystem clock operation control\n0 : START = XT1 oscillator operating or External clock from EXCLKS pin is valid\n1 : STOP = XT1 oscillator stop or External clock from EXCLKS pin is invalid </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CSC ) </loc>
//      <o.6..6> XTSTOP
//        <0=> 0: START = XT1 oscillator operating or External clock from EXCLKS pin is valid
//        <1=> 1: STOP = XT1 oscillator stop or External clock from EXCLKS pin is invalid
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: CGC_CSC_MSTOP  -----------------------------------
// SVD Line: 429

//  <item> SFDITEM_FIELD__CGC_CSC_MSTOP
//    <name> MSTOP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020401) \nHigh-speed system clock operation control\n0 : START = X1 oscillator operating or External clock from EXCLK pin is valid\n1 : STOP = X1 oscillator stop or External clock from EXCLK pin is invalid </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CSC ) </loc>
//      <o.7..7> MSTOP
//        <0=> 0: START = X1 oscillator operating or External clock from EXCLK pin is valid
//        <1=> 1: STOP = X1 oscillator stop or External clock from EXCLK pin is invalid
//    </combo>
//  </item>
//  


// ---------------------------------  Register RTree: CGC_CSC  ------------------------------------
// SVD Line: 378

//  <rtree> SFDITEM_REG__CGC_CSC
//    <name> CSC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020401) Clock operation Status Register </i>
//    <loc> ( (unsigned char)((CGC_CSC >> 0) & 0xFF), ((CGC_CSC = (CGC_CSC & ~(0xC1UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xC1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_CSC_HIOSTOP </item>
//    <item> SFDITEM_FIELD__CGC_CSC_XTSTOP </item>
//    <item> SFDITEM_FIELD__CGC_CSC_MSTOP </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_OSTC  --------------------------------
// SVD Line: 452

unsigned char CGC_OSTC __AT (0x40020402);



// ---------------------------------  Register Item: CGC_OSTC  ------------------------------------
// SVD Line: 452

//  <item> SFDITEM_REG__CGC_OSTC
//    <name> OSTC </name>
//    <i> [Bits 7..0] RO (@ 0x40020402) Oscillation stabilization time counter status </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_OSTC >> 0) & 0xFFFFFFFF), ((CGC_OSTC = (CGC_OSTC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: CGC_OSTS  --------------------------------
// SVD Line: 463

unsigned char CGC_OSTS __AT (0x40020403);



// ---------------------------------  Register Item: CGC_OSTS  ------------------------------------
// SVD Line: 463

//  <item> SFDITEM_REG__CGC_OSTS
//    <name> OSTS </name>
//    <i> [Bits 7..0] RW (@ 0x40020403) Oscillation stabilization time select register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_OSTS >> 0) & 0xFFFFFFFF), ((CGC_OSTS = (CGC_OSTS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: CGC_CKC  ---------------------------------
// SVD Line: 474

unsigned char CGC_CKC __AT (0x40020404);



// --------------------------------  Field Item: CGC_CKC_MCM0  ------------------------------------
// SVD Line: 485

//  <item> SFDITEM_FIELD__CGC_CKC_MCM0
//    <name> MCM0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020404) \nMain system clock (fMAIN) operation control\n0 : fIH = Select the high-speed on-chip oscillator clock (fIH) as the main system clock (fMAIN)\n1 : fMX = Select the high-speed system clock (fMX) as the main system clock (fMAIN) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CKC ) </loc>
//      <o.4..4> MCM0
//        <0=> 0: fIH = Select the high-speed on-chip oscillator clock (fIH) as the main system clock (fMAIN)
//        <1=> 1: fMX = Select the high-speed system clock (fMX) as the main system clock (fMAIN)
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: CGC_CKC_MCS  ------------------------------------
// SVD Line: 505

//  <item> SFDITEM_FIELD__CGC_CKC_MCS
//    <name> MCS </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40020404) \nStatus of Main system clock (fMAIN)\n0 : fIH = High-speed on-chip oscillator clock (fIH)\n1 : fMX = High-speed system clock (fMX) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CKC ) </loc>
//      <o.5..5> MCS
//        <0=> 0: fIH = High-speed on-chip oscillator clock (fIH)
//        <1=> 1: fMX = High-speed system clock (fMX)
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: CGC_CKC_CSS  ------------------------------------
// SVD Line: 525

//  <item> SFDITEM_FIELD__CGC_CKC_CSS
//    <name> CSS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020404) \nSelection of CPU/peripheral hardware clock (fCLK)\n0 : fMAIN = Main system clock (fMAIN)\n1 : fSUB = Subsystem clock (fSUB) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CKC ) </loc>
//      <o.6..6> CSS
//        <0=> 0: fMAIN = Main system clock (fMAIN)
//        <1=> 1: fSUB = Subsystem clock (fSUB)
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: CGC_CKC_CLS  ------------------------------------
// SVD Line: 545

//  <item> SFDITEM_FIELD__CGC_CKC_CLS
//    <name> CLS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020404) \nStatus of CPU/peripheral hardware clock (fCLK)\n0 : fMAIN = Main system clock (fMAIN)\n1 : fSUB = Subsystem clock (fSUB) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CKC ) </loc>
//      <o.7..7> CLS
//        <0=> 0: fMAIN = Main system clock (fMAIN)
//        <1=> 1: fSUB = Subsystem clock (fSUB)
//    </combo>
//  </item>
//  


// ---------------------------------  Register RTree: CGC_CKC  ------------------------------------
// SVD Line: 474

//  <rtree> SFDITEM_REG__CGC_CKC
//    <name> CKC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020404) System clock control register </i>
//    <loc> ( (unsigned char)((CGC_CKC >> 0) & 0xFF), ((CGC_CKC = (CGC_CKC & ~(0x50UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x50) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_CKC_MCM0 </item>
//    <item> SFDITEM_FIELD__CGC_CKC_MCS </item>
//    <item> SFDITEM_FIELD__CGC_CKC_CSS </item>
//    <item> SFDITEM_FIELD__CGC_CKC_CLS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CGC_LOCKCTL  -------------------------------
// SVD Line: 568

unsigned char CGC_LOCKCTL __AT (0x40020405);



// -------------------------------  Register Item: CGC_LOCKCTL  -----------------------------------
// SVD Line: 568

//  <item> SFDITEM_REG__CGC_LOCKCTL
//    <name> LOCKCTL </name>
//    <i> [Bits 7..0] RW (@ 0x40020405) Lockup Watchdog timer enable register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_LOCKCTL >> 0) & 0xFFFFFFFF), ((CGC_LOCKCTL = (CGC_LOCKCTL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: CGC_PRCR  --------------------------------
// SVD Line: 577

unsigned char CGC_PRCR __AT (0x40020406);



// ---------------------------------  Register Item: CGC_PRCR  ------------------------------------
// SVD Line: 577

//  <item> SFDITEM_REG__CGC_PRCR
//    <name> PRCR </name>
//    <i> [Bits 7..0] RW (@ 0x40020406) Lockup Watchdog timer enable protect register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_PRCR >> 0) & 0xFFFFFFFF), ((CGC_PRCR = (CGC_PRCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: CGC_WDTCFG0  -------------------------------
// SVD Line: 586

unsigned char CGC_WDTCFG0 __AT (0x40020408);



// -------------------------------  Register Item: CGC_WDTCFG0  -----------------------------------
// SVD Line: 586

//  <item> SFDITEM_REG__CGC_WDTCFG0
//    <name> WDTCFG0 </name>
//    <i> [Bits 7..0] RW (@ 0x40020408) WDT Configeration 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_WDTCFG0 >> 0) & 0xFFFFFFFF), ((CGC_WDTCFG0 = (CGC_WDTCFG0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: CGC_WDTCFG1  -------------------------------
// SVD Line: 595

unsigned char CGC_WDTCFG1 __AT (0x40020409);



// -------------------------------  Register Item: CGC_WDTCFG1  -----------------------------------
// SVD Line: 595

//  <item> SFDITEM_REG__CGC_WDTCFG1
//    <name> WDTCFG1 </name>
//    <i> [Bits 7..0] RW (@ 0x40020409) WDT Configeration 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_WDTCFG1 >> 0) & 0xFFFFFFFF), ((CGC_WDTCFG1 = (CGC_WDTCFG1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: CGC_WDTCFG2  -------------------------------
// SVD Line: 604

unsigned char CGC_WDTCFG2 __AT (0x4002040A);



// -------------------------------  Register Item: CGC_WDTCFG2  -----------------------------------
// SVD Line: 604

//  <item> SFDITEM_REG__CGC_WDTCFG2
//    <name> WDTCFG2 </name>
//    <i> [Bits 7..0] RW (@ 0x4002040A) WDT Configeration 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_WDTCFG2 >> 0) & 0xFFFFFFFF), ((CGC_WDTCFG2 = (CGC_WDTCFG2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: CGC_WDTCFG3  -------------------------------
// SVD Line: 613

unsigned char CGC_WDTCFG3 __AT (0x4002040B);



// -------------------------------  Register Item: CGC_WDTCFG3  -----------------------------------
// SVD Line: 613

//  <item> SFDITEM_REG__CGC_WDTCFG3
//    <name> WDTCFG3 </name>
//    <i> [Bits 7..0] RW (@ 0x4002040B) WDT Configeration 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_WDTCFG3 >> 0) & 0xFFFFFFFF), ((CGC_WDTCFG3 = (CGC_WDTCFG3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: CGC_PER0  --------------------------------
// SVD Line: 622

unsigned char CGC_PER0 __AT (0x40020420);



// -------------------------------  Field Item: CGC_PER0_TM40EN  ----------------------------------
// SVD Line: 633

//  <item> SFDITEM_FIELD__CGC_PER0_TM40EN
//    <name> TM40EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020420) \nControl of the TM4 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.0..0> TM40EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_CAN0EN  ----------------------------------
// SVD Line: 652

//  <item> SFDITEM_FIELD__CGC_PER0_CAN0EN
//    <name> CAN0EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40020420) \nControl of the CAN input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.1..1> CAN0EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_SCI0EN  ----------------------------------
// SVD Line: 671

//  <item> SFDITEM_FIELD__CGC_PER0_SCI0EN
//    <name> SCI0EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020420) \nControl of the SCI0 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.2..2> SCI0EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_SCI1EN  ----------------------------------
// SVD Line: 690

//  <item> SFDITEM_FIELD__CGC_PER0_SCI1EN
//    <name> SCI1EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40020420) \nControl of the SCI1 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.3..3> SCI1EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CGC_PER0_IICA0EN  ----------------------------------
// SVD Line: 709

//  <item> SFDITEM_FIELD__CGC_PER0_IICA0EN
//    <name> IICA0EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020420) \nControl of the IICA0 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.4..4> IICA0EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_ADCEN  -----------------------------------
// SVD Line: 728

//  <item> SFDITEM_FIELD__CGC_PER0_ADCEN
//    <name> ADCEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020420) \nControl of the ADC input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.5..5> ADCEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_IRDAEN  ----------------------------------
// SVD Line: 747

//  <item> SFDITEM_FIELD__CGC_PER0_IRDAEN
//    <name> IRDAEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020420) \nControl of the IRDA input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.6..6> IRDAEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_RTCEN  -----------------------------------
// SVD Line: 766

//  <item> SFDITEM_FIELD__CGC_PER0_RTCEN
//    <name> RTCEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020420) \nControl of the RTC input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.7..7> RTCEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: CGC_PER0  ------------------------------------
// SVD Line: 622

//  <rtree> SFDITEM_REG__CGC_PER0
//    <name> PER0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020420) Peripheral enable register 0 </i>
//    <loc> ( (unsigned char)((CGC_PER0 >> 0) & 0xFF), ((CGC_PER0 = (CGC_PER0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_PER0_TM40EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_CAN0EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_SCI0EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_SCI1EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_IICA0EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_ADCEN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_IRDAEN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_RTCEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_PER1  --------------------------------
// SVD Line: 788

unsigned char CGC_PER1 __AT (0x4002081A);



// -------------------------------  Field Item: CGC_PER1_TMAEN  -----------------------------------
// SVD Line: 799

//  <item> SFDITEM_FIELD__CGC_PER1_TMAEN
//    <name> TMAEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002081A) \nControl of the TMA input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.0..0> TMAEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER1_TMCEN  -----------------------------------
// SVD Line: 818

//  <item> SFDITEM_FIELD__CGC_PER1_TMCEN
//    <name> TMCEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4002081A) \nControl of the TMC input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.1..1> TMCEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CGC_PER1_PWMOPEN  ----------------------------------
// SVD Line: 837

//  <item> SFDITEM_FIELD__CGC_PER1_PWMOPEN
//    <name> PWMOPEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4002081A) \nControl of the PWMOP input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.2..2> PWMOPEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER1_DMAEN  -----------------------------------
// SVD Line: 856

//  <item> SFDITEM_FIELD__CGC_PER1_DMAEN
//    <name> DMAEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4002081A) \nControl of the DMA input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.3..3> DMAEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER1_TMMEN  -----------------------------------
// SVD Line: 875

//  <item> SFDITEM_FIELD__CGC_PER1_TMMEN
//    <name> TMMEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4002081A) \nControl of the TMM input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.4..4> TMMEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CGC_PER1_PGACMPEN  ---------------------------------
// SVD Line: 894

//  <item> SFDITEM_FIELD__CGC_PER1_PGACMPEN
//    <name> PGACMPEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4002081A) \nControl of the PGACMP input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.5..5> PGACMPEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER1_TMBEN  -----------------------------------
// SVD Line: 913

//  <item> SFDITEM_FIELD__CGC_PER1_TMBEN
//    <name> TMBEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4002081A) \nControl of the TMB input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.6..6> TMBEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER1_DACEN  -----------------------------------
// SVD Line: 932

//  <item> SFDITEM_FIELD__CGC_PER1_DACEN
//    <name> DACEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4002081A) \nControl of the DAC input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.7..7> DACEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: CGC_PER1  ------------------------------------
// SVD Line: 788

//  <rtree> SFDITEM_REG__CGC_PER1
//    <name> PER1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4002081A) Peripheral enable register 1 </i>
//    <loc> ( (unsigned char)((CGC_PER1 >> 0) & 0xFF), ((CGC_PER1 = (CGC_PER1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_PER1_TMAEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_TMCEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_PWMOPEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_DMAEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_TMMEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_PGACMPEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_TMBEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_DACEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_OSMC  --------------------------------
// SVD Line: 954

unsigned char CGC_OSMC __AT (0x40020423);



// ------------------------------  Field Item: CGC_OSMC_WUTMMCK0  ---------------------------------
// SVD Line: 965

//  <item> SFDITEM_FIELD__CGC_OSMC_WUTMMCK0
//    <name> WUTMMCK0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020423) \nSelection of operation clock for real-time clock, 15-bit interval timer, and timer A\n0 : fSUB = The subsystem clock is selected as the operation clock for the real-time clock and the 15-bit interval timer.  The low-speed on-chip oscillator cannot be selected as the count source for timer A.\n1 : fIL = The low-speed on-chip oscillator clock is selected as the operation clock for the real-time clock and the 15-bit interval timer.  Either the low-speed on-chip oscillator or the subsystem clock can be selected as the count source for timer A. </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_OSMC ) </loc>
//      <o.4..4> WUTMMCK0
//        <0=> 0: fSUB = The subsystem clock is selected as the operation clock for the real-time clock and the 15-bit interval timer.  The low-speed on-chip oscillator cannot be selected as the count source for timer A.
//        <1=> 1: fIL = The low-speed on-chip oscillator clock is selected as the operation clock for the real-time clock and the 15-bit interval timer.  Either the low-speed on-chip oscillator or the subsystem clock can be selected as the count source for timer A.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_OSMC_RTCLPC  ----------------------------------
// SVD Line: 991

//  <item> SFDITEM_FIELD__CGC_OSMC_RTCLPC
//    <name> RTCLPC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020423) \nSetting in DEEPSLEEP mode or SLEEP mode while subsystem clock is selected as CPU clock\n0 : Enable = Enables supply of subsystem clock to peripheral function\n1 : Disable = Stops supply of subsystem clock to peripheral functions other than real-time clock and 15-bit interval timer. </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_OSMC ) </loc>
//      <o.7..7> RTCLPC
//        <0=> 0: Enable = Enables supply of subsystem clock to peripheral function
//        <1=> 1: Disable = Stops supply of subsystem clock to peripheral functions other than real-time clock and 15-bit interval timer.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: CGC_OSMC  ------------------------------------
// SVD Line: 954

//  <rtree> SFDITEM_REG__CGC_OSMC
//    <name> OSMC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020423) Subsystem clock supply mode control register </i>
//    <loc> ( (unsigned char)((CGC_OSMC >> 0) & 0xFF), ((CGC_OSMC = (CGC_OSMC & ~(0x90UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x90) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_OSMC_WUTMMCK0 </item>
//    <item> SFDITEM_FIELD__CGC_OSMC_RTCLPC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CGC_HOCODIV  -------------------------------
// SVD Line: 1014

unsigned char CGC_HOCODIV __AT (0x40021C20);



// -------------------------------  Register Item: CGC_HOCODIV  -----------------------------------
// SVD Line: 1014

//  <item> SFDITEM_REG__CGC_HOCODIV
//    <name> HOCODIV </name>
//    <i> [Bits 7..0] RW (@ 0x40021C20) High-speed on-chip oscillator frequency select register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_HOCODIV >> 0) & 0xFFFFFFFF), ((CGC_HOCODIV = (CGC_HOCODIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CGC_HIOTRM  -------------------------------
// SVD Line: 1025

unsigned char CGC_HIOTRM __AT (0x40021C00);



// --------------------------------  Register Item: CGC_HIOTRM  -----------------------------------
// SVD Line: 1025

//  <item> SFDITEM_REG__CGC_HIOTRM
//    <name> HIOTRM </name>
//    <i> [Bits 7..0] RW (@ 0x40021C00) High-speed on-chip oscillator trimming register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_HIOTRM >> 0) & 0xFFFFFFFF), ((CGC_HIOTRM = (CGC_HIOTRM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: CGC  --------------------------------------
// SVD Line: 293

//  <view> CGC
//    <name> CGC </name>
//    <item> SFDITEM_REG__CGC_CMC </item>
//    <item> SFDITEM_REG__CGC_CSC </item>
//    <item> SFDITEM_REG__CGC_OSTC </item>
//    <item> SFDITEM_REG__CGC_OSTS </item>
//    <item> SFDITEM_REG__CGC_CKC </item>
//    <item> SFDITEM_REG__CGC_LOCKCTL </item>
//    <item> SFDITEM_REG__CGC_PRCR </item>
//    <item> SFDITEM_REG__CGC_WDTCFG0 </item>
//    <item> SFDITEM_REG__CGC_WDTCFG1 </item>
//    <item> SFDITEM_REG__CGC_WDTCFG2 </item>
//    <item> SFDITEM_REG__CGC_WDTCFG3 </item>
//    <item> SFDITEM_REG__CGC_PER0 </item>
//    <item> SFDITEM_REG__CGC_PER1 </item>
//    <item> SFDITEM_REG__CGC_OSMC </item>
//    <item> SFDITEM_REG__CGC_HOCODIV </item>
//    <item> SFDITEM_REG__CGC_HIOTRM </item>
//  </view>
//  


// -----------------------------  Register Item Address: RST_RESF  --------------------------------
// SVD Line: 1056

unsigned char RST_RESF __AT (0x40020440);



// -------------------------------  Field Item: RST_RESF_LVIRF  -----------------------------------
// SVD Line: 1065

//  <item> SFDITEM_FIELD__RST_RESF_LVIRF
//    <name> LVIRF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40020440) \nInternal reset request by voltage detector\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.0..0> LVIRF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: RST_RESF_IAWRF  -----------------------------------
// SVD Line: 1084

//  <item> SFDITEM_FIELD__RST_RESF_IAWRF
//    <name> IAWRF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40020440) \nInternal reset request by illegal-memory access\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.1..1> IAWRF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: RST_RESF_RPERF  -----------------------------------
// SVD Line: 1103

//  <item> SFDITEM_FIELD__RST_RESF_RPERF
//    <name> RPERF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40020440) \nInternal reset request by RAM parity\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.2..2> RPERF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: RST_RESF_WDTRF  -----------------------------------
// SVD Line: 1122

//  <item> SFDITEM_FIELD__RST_RESF_WDTRF
//    <name> WDTRF </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40020440) \nInternal reset request by watchdog timer(WDT)\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.4..4> WDTRF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: RST_RESF_SYSRF  -----------------------------------
// SVD Line: 1141

//  <item> SFDITEM_FIELD__RST_RESF_SYSRF
//    <name> SYSRF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020440) \nInternal reset request by system reset request(AIRCR.SYSRESETREQ)\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.7..7> SYSRF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: RST_RESF  ------------------------------------
// SVD Line: 1056

//  <rtree> SFDITEM_REG__RST_RESF
//    <name> RESF </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40020440) Reset flag register </i>
//    <loc> ( (unsigned char)((RST_RESF >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__RST_RESF_LVIRF </item>
//    <item> SFDITEM_FIELD__RST_RESF_IAWRF </item>
//    <item> SFDITEM_FIELD__RST_RESF_RPERF </item>
//    <item> SFDITEM_FIELD__RST_RESF_WDTRF </item>
//    <item> SFDITEM_FIELD__RST_RESF_SYSRF </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RST  --------------------------------------
// SVD Line: 1039

//  <view> RST
//    <name> RST </name>
//    <item> SFDITEM_REG__RST_RESF </item>
//  </view>
//  


// -----------------------------  Register Item Address: LVD_LVIM  --------------------------------
// SVD Line: 1190

unsigned char LVD_LVIM __AT (0x40020441);



// --------------------------------  Field Item: LVD_LVIM_LVIF  -----------------------------------
// SVD Line: 1201

//  <item> SFDITEM_FIELD__LVD_LVIM_LVIF
//    <name> LVIF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40020441) \nVoltage detection flag\n0 : GE = Supply voltage (VDD) greater or equal to detection voltage (VLVD), or when LVD is off\n1 : LT = Supply voltage (VDD) less than detection voltage (VLVD) </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIM ) </loc>
//      <o.0..0> LVIF
//        <0=> 0: GE = Supply voltage (VDD) greater or equal to detection voltage (VLVD), or when LVD is off
//        <1=> 1: LT = Supply voltage (VDD) less than detection voltage (VLVD)
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: LVD_LVIM_LVIOMSK  ----------------------------------
// SVD Line: 1221

//  <item> SFDITEM_FIELD__LVD_LVIM_LVIOMSK
//    <name> LVIOMSK </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40020441) \nMask status flag of LVD output\n0 : Invalid = Mask of LVD output is invalid\n1 : Valid = Mask of LVD output is valid </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIM ) </loc>
//      <o.1..1> LVIOMSK
//        <0=> 0: Invalid = Mask of LVD output is invalid
//        <1=> 1: Valid = Mask of LVD output is valid
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: LVD_LVIM_LVISEN  ----------------------------------
// SVD Line: 1241

//  <item> SFDITEM_FIELD__LVD_LVIM_LVISEN
//    <name> LVISEN </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020441) \nEnable rewritting LVIS register\n0 : Disable = Disabling of rewriting the LVIS register\n1 : Enable = Enabling of rewriting the LVIS register </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIM ) </loc>
//      <o.7..7> LVISEN
//        <0=> 0: Disable = Disabling of rewriting the LVIS register
//        <1=> 1: Enable = Enabling of rewriting the LVIS register
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: LVD_LVIM  ------------------------------------
// SVD Line: 1190

//  <rtree> SFDITEM_REG__LVD_LVIM
//    <name> LVIM </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020441) Voltage detection register </i>
//    <loc> ( (unsigned char)((LVD_LVIM >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__LVD_LVIM_LVIF </item>
//    <item> SFDITEM_FIELD__LVD_LVIM_LVIOMSK </item>
//    <item> SFDITEM_FIELD__LVD_LVIM_LVISEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LVD_LVIS  --------------------------------
// SVD Line: 1264

unsigned char LVD_LVIS __AT (0x40020442);



// -------------------------------  Field Item: LVD_LVIS_LVILV  -----------------------------------
// SVD Line: 1275

//  <item> SFDITEM_FIELD__LVD_LVIS_LVILV
//    <name> LVILV </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020442) \nLVD detection level\n0 : High = High-voltage detection level (VLVDH)\n1 : Low = Low-voltage detection level (VLVDL or VLVD) </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIS ) </loc>
//      <o.0..0> LVILV
//        <0=> 0: High = High-voltage detection level (VLVDH)
//        <1=> 1: Low = Low-voltage detection level (VLVDL or VLVD)
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: LVD_LVIS_LVIMD  -----------------------------------
// SVD Line: 1295

//  <item> SFDITEM_FIELD__LVD_LVIS_LVIMD
//    <name> LVIMD </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020442) \nOperation mode of voltage detection\n0 : IRQ = interrupt mode\n1 : Reset = reset mode </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIS ) </loc>
//      <o.7..7> LVIMD
//        <0=> 0: IRQ = interrupt mode
//        <1=> 1: Reset = reset mode
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: LVD_LVIS  ------------------------------------
// SVD Line: 1264

//  <rtree> SFDITEM_REG__LVD_LVIS
//    <name> LVIS </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020442) Voltage detection level register </i>
//    <loc> ( (unsigned char)((LVD_LVIS >> 0) & 0xFF), ((LVD_LVIS = (LVD_LVIS & ~(0x81UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x81) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LVD_LVIS_LVILV </item>
//    <item> SFDITEM_FIELD__LVD_LVIS_LVIMD </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: LVD  --------------------------------------
// SVD Line: 1167

//  <view> LVD
//    <name> LVD </name>
//    <item> SFDITEM_REG__LVD_LVIM </item>
//    <item> SFDITEM_REG__LVD_LVIS </item>
//  </view>
//  


// -----------------------------  Register Item Address: PORT_PM0  --------------------------------
// SVD Line: 1337

unsigned char PORT_PM0 __AT (0x40040320);



// ---------------------------------  Register Item: PORT_PM0  ------------------------------------
// SVD Line: 1337

//  <item> SFDITEM_REG__PORT_PM0
//    <name> PM0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040320) Port mode register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM0 >> 0) & 0xFFFFFFFF), ((PORT_PM0 = (PORT_PM0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM1  --------------------------------
// SVD Line: 1346

unsigned char PORT_PM1 __AT (0x40040321);



// ---------------------------------  Register Item: PORT_PM1  ------------------------------------
// SVD Line: 1346

//  <item> SFDITEM_REG__PORT_PM1
//    <name> PM1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040321) Port mode register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM1 >> 0) & 0xFFFFFFFF), ((PORT_PM1 = (PORT_PM1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM2  --------------------------------
// SVD Line: 1355

unsigned char PORT_PM2 __AT (0x40040322);



// ---------------------------------  Register Item: PORT_PM2  ------------------------------------
// SVD Line: 1355

//  <item> SFDITEM_REG__PORT_PM2
//    <name> PM2 </name>
//    <i> [Bits 7..0] RW (@ 0x40040322) Port mode register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM2 >> 0) & 0xFFFFFFFF), ((PORT_PM2 = (PORT_PM2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM3  --------------------------------
// SVD Line: 1364

unsigned char PORT_PM3 __AT (0x40040323);



// ---------------------------------  Register Item: PORT_PM3  ------------------------------------
// SVD Line: 1364

//  <item> SFDITEM_REG__PORT_PM3
//    <name> PM3 </name>
//    <i> [Bits 7..0] RW (@ 0x40040323) Port mode register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM3 >> 0) & 0xFFFFFFFF), ((PORT_PM3 = (PORT_PM3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM4  --------------------------------
// SVD Line: 1373

unsigned char PORT_PM4 __AT (0x40040324);



// ---------------------------------  Register Item: PORT_PM4  ------------------------------------
// SVD Line: 1373

//  <item> SFDITEM_REG__PORT_PM4
//    <name> PM4 </name>
//    <i> [Bits 7..0] RW (@ 0x40040324) Port mode register 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM4 >> 0) & 0xFFFFFFFF), ((PORT_PM4 = (PORT_PM4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM5  --------------------------------
// SVD Line: 1382

unsigned char PORT_PM5 __AT (0x40040325);



// ---------------------------------  Register Item: PORT_PM5  ------------------------------------
// SVD Line: 1382

//  <item> SFDITEM_REG__PORT_PM5
//    <name> PM5 </name>
//    <i> [Bits 7..0] RW (@ 0x40040325) Port mode register 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM5 >> 0) & 0xFFFFFFFF), ((PORT_PM5 = (PORT_PM5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM6  --------------------------------
// SVD Line: 1391

unsigned char PORT_PM6 __AT (0x40040326);



// ---------------------------------  Register Item: PORT_PM6  ------------------------------------
// SVD Line: 1391

//  <item> SFDITEM_REG__PORT_PM6
//    <name> PM6 </name>
//    <i> [Bits 7..0] RW (@ 0x40040326) Port mode register 6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM6 >> 0) & 0xFFFFFFFF), ((PORT_PM6 = (PORT_PM6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM7  --------------------------------
// SVD Line: 1400

unsigned char PORT_PM7 __AT (0x40040327);



// ---------------------------------  Register Item: PORT_PM7  ------------------------------------
// SVD Line: 1400

//  <item> SFDITEM_REG__PORT_PM7
//    <name> PM7 </name>
//    <i> [Bits 7..0] RW (@ 0x40040327) Port mode register 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM7 >> 0) & 0xFFFFFFFF), ((PORT_PM7 = (PORT_PM7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PM12  --------------------------------
// SVD Line: 1409

unsigned char PORT_PM12 __AT (0x4004032C);



// --------------------------------  Register Item: PORT_PM12  ------------------------------------
// SVD Line: 1409

//  <item> SFDITEM_REG__PORT_PM12
//    <name> PM12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004032C) Port mode register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM12 >> 0) & 0xFFFFFFFF), ((PORT_PM12 = (PORT_PM12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PM13  --------------------------------
// SVD Line: 1418

unsigned char PORT_PM13 __AT (0x4004032D);



// --------------------------------  Register Item: PORT_PM13  ------------------------------------
// SVD Line: 1418

//  <item> SFDITEM_REG__PORT_PM13
//    <name> PM13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004032D) Port mode register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM13 >> 0) & 0xFFFFFFFF), ((PORT_PM13 = (PORT_PM13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PM14  --------------------------------
// SVD Line: 1427

unsigned char PORT_PM14 __AT (0x4004032E);



// --------------------------------  Register Item: PORT_PM14  ------------------------------------
// SVD Line: 1427

//  <item> SFDITEM_REG__PORT_PM14
//    <name> PM14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004032E) Port mode register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM14 >> 0) & 0xFFFFFFFF), ((PORT_PM14 = (PORT_PM14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P0  ---------------------------------
// SVD Line: 1436

unsigned char PORT_P0 __AT (0x40040300);



// ---------------------------------  Register Item: PORT_P0  -------------------------------------
// SVD Line: 1436

//  <item> SFDITEM_REG__PORT_P0
//    <name> P0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040300) Port register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P0 >> 0) & 0xFFFFFFFF), ((PORT_P0 = (PORT_P0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P1  ---------------------------------
// SVD Line: 1445

unsigned char PORT_P1 __AT (0x40040301);



// ---------------------------------  Register Item: PORT_P1  -------------------------------------
// SVD Line: 1445

//  <item> SFDITEM_REG__PORT_P1
//    <name> P1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040301) Port register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P1 >> 0) & 0xFFFFFFFF), ((PORT_P1 = (PORT_P1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P2  ---------------------------------
// SVD Line: 1454

unsigned char PORT_P2 __AT (0x40040302);



// ---------------------------------  Register Item: PORT_P2  -------------------------------------
// SVD Line: 1454

//  <item> SFDITEM_REG__PORT_P2
//    <name> P2 </name>
//    <i> [Bits 7..0] RW (@ 0x40040302) Port register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P2 >> 0) & 0xFFFFFFFF), ((PORT_P2 = (PORT_P2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P3  ---------------------------------
// SVD Line: 1463

unsigned char PORT_P3 __AT (0x40040303);



// ---------------------------------  Register Item: PORT_P3  -------------------------------------
// SVD Line: 1463

//  <item> SFDITEM_REG__PORT_P3
//    <name> P3 </name>
//    <i> [Bits 7..0] RW (@ 0x40040303) Port register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P3 >> 0) & 0xFFFFFFFF), ((PORT_P3 = (PORT_P3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P4  ---------------------------------
// SVD Line: 1472

unsigned char PORT_P4 __AT (0x40040304);



// ---------------------------------  Register Item: PORT_P4  -------------------------------------
// SVD Line: 1472

//  <item> SFDITEM_REG__PORT_P4
//    <name> P4 </name>
//    <i> [Bits 7..0] RW (@ 0x40040304) Port register 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P4 >> 0) & 0xFFFFFFFF), ((PORT_P4 = (PORT_P4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P5  ---------------------------------
// SVD Line: 1481

unsigned char PORT_P5 __AT (0x40040305);



// ---------------------------------  Register Item: PORT_P5  -------------------------------------
// SVD Line: 1481

//  <item> SFDITEM_REG__PORT_P5
//    <name> P5 </name>
//    <i> [Bits 7..0] RW (@ 0x40040305) Port register 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P5 >> 0) & 0xFFFFFFFF), ((PORT_P5 = (PORT_P5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P6  ---------------------------------
// SVD Line: 1490

unsigned char PORT_P6 __AT (0x40040306);



// ---------------------------------  Register Item: PORT_P6  -------------------------------------
// SVD Line: 1490

//  <item> SFDITEM_REG__PORT_P6
//    <name> P6 </name>
//    <i> [Bits 7..0] RW (@ 0x40040306) Port register 6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P6 >> 0) & 0xFFFFFFFF), ((PORT_P6 = (PORT_P6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P7  ---------------------------------
// SVD Line: 1499

unsigned char PORT_P7 __AT (0x40040307);



// ---------------------------------  Register Item: PORT_P7  -------------------------------------
// SVD Line: 1499

//  <item> SFDITEM_REG__PORT_P7
//    <name> P7 </name>
//    <i> [Bits 7..0] RW (@ 0x40040307) Port register 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P7 >> 0) & 0xFFFFFFFF), ((PORT_P7 = (PORT_P7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P12  --------------------------------
// SVD Line: 1508

unsigned char PORT_P12 __AT (0x4004030C);



// ---------------------------------  Register Item: PORT_P12  ------------------------------------
// SVD Line: 1508

//  <item> SFDITEM_REG__PORT_P12
//    <name> P12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004030C) Port register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P12 >> 0) & 0xFFFFFFFF), ((PORT_P12 = (PORT_P12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P13  --------------------------------
// SVD Line: 1516

unsigned char PORT_P13 __AT (0x4004030D);



// ---------------------------------  Register Item: PORT_P13  ------------------------------------
// SVD Line: 1516

//  <item> SFDITEM_REG__PORT_P13
//    <name> P13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004030D) Port register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P13 >> 0) & 0xFFFFFFFF), ((PORT_P13 = (PORT_P13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P14  --------------------------------
// SVD Line: 1525

unsigned char PORT_P14 __AT (0x4004030E);



// ---------------------------------  Register Item: PORT_P14  ------------------------------------
// SVD Line: 1525

//  <item> SFDITEM_REG__PORT_P14
//    <name> P14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004030E) Port register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P14 >> 0) & 0xFFFFFFFF), ((PORT_P14 = (PORT_P14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU0  --------------------------------
// SVD Line: 1534

unsigned char PORT_PU0 __AT (0x40040030);



// ---------------------------------  Register Item: PORT_PU0  ------------------------------------
// SVD Line: 1534

//  <item> SFDITEM_REG__PORT_PU0
//    <name> PU0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040030) Pull-up resistor option register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU0 >> 0) & 0xFFFFFFFF), ((PORT_PU0 = (PORT_PU0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU1  --------------------------------
// SVD Line: 1543

unsigned char PORT_PU1 __AT (0x40040031);



// ---------------------------------  Register Item: PORT_PU1  ------------------------------------
// SVD Line: 1543

//  <item> SFDITEM_REG__PORT_PU1
//    <name> PU1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040031) Pull-up resistor option register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU1 >> 0) & 0xFFFFFFFF), ((PORT_PU1 = (PORT_PU1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU3  --------------------------------
// SVD Line: 1552

unsigned char PORT_PU3 __AT (0x40040033);



// ---------------------------------  Register Item: PORT_PU3  ------------------------------------
// SVD Line: 1552

//  <item> SFDITEM_REG__PORT_PU3
//    <name> PU3 </name>
//    <i> [Bits 7..0] RW (@ 0x40040033) Pull-up resistor option register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU3 >> 0) & 0xFFFFFFFF), ((PORT_PU3 = (PORT_PU3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU4  --------------------------------
// SVD Line: 1561

unsigned char PORT_PU4 __AT (0x40040034);



// ---------------------------------  Register Item: PORT_PU4  ------------------------------------
// SVD Line: 1561

//  <item> SFDITEM_REG__PORT_PU4
//    <name> PU4 </name>
//    <i> [Bits 7..0] RW (@ 0x40040034) Pull-up resistor option register 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU4 >> 0) & 0xFFFFFFFF), ((PORT_PU4 = (PORT_PU4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU5  --------------------------------
// SVD Line: 1570

unsigned char PORT_PU5 __AT (0x40040035);



// ---------------------------------  Register Item: PORT_PU5  ------------------------------------
// SVD Line: 1570

//  <item> SFDITEM_REG__PORT_PU5
//    <name> PU5 </name>
//    <i> [Bits 7..0] RW (@ 0x40040035) Pull-up resistor option register 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU5 >> 0) & 0xFFFFFFFF), ((PORT_PU5 = (PORT_PU5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU7  --------------------------------
// SVD Line: 1579

unsigned char PORT_PU7 __AT (0x40040037);



// ---------------------------------  Register Item: PORT_PU7  ------------------------------------
// SVD Line: 1579

//  <item> SFDITEM_REG__PORT_PU7
//    <name> PU7 </name>
//    <i> [Bits 7..0] RW (@ 0x40040037) Pull-up resistor option register 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU7 >> 0) & 0xFFFFFFFF), ((PORT_PU7 = (PORT_PU7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PU12  --------------------------------
// SVD Line: 1588

unsigned char PORT_PU12 __AT (0x4004003C);



// --------------------------------  Register Item: PORT_PU12  ------------------------------------
// SVD Line: 1588

//  <item> SFDITEM_REG__PORT_PU12
//    <name> PU12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004003C) Pull-up resistor option register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU12 >> 0) & 0xFFFFFFFF), ((PORT_PU12 = (PORT_PU12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PU13  --------------------------------
// SVD Line: 1597

unsigned char PORT_PU13 __AT (0x4004003D);



// --------------------------------  Register Item: PORT_PU13  ------------------------------------
// SVD Line: 1597

//  <item> SFDITEM_REG__PORT_PU13
//    <name> PU13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004003D) Pull-up resistor option register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU13 >> 0) & 0xFFFFFFFF), ((PORT_PU13 = (PORT_PU13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PU14  --------------------------------
// SVD Line: 1606

unsigned char PORT_PU14 __AT (0x4004003E);



// --------------------------------  Register Item: PORT_PU14  ------------------------------------
// SVD Line: 1606

//  <item> SFDITEM_REG__PORT_PU14
//    <name> PU14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004003E) Pull-up resistor option register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU14 >> 0) & 0xFFFFFFFF), ((PORT_PU14 = (PORT_PU14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PIM0  --------------------------------
// SVD Line: 1615

unsigned char PORT_PIM0 __AT (0x40040040);



// --------------------------------  Register Item: PORT_PIM0  ------------------------------------
// SVD Line: 1615

//  <item> SFDITEM_REG__PORT_PIM0
//    <name> PIM0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040040) Port input mode register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PIM0 >> 0) & 0xFFFFFFFF), ((PORT_PIM0 = (PORT_PIM0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PIM1  --------------------------------
// SVD Line: 1624

unsigned char PORT_PIM1 __AT (0x40040041);



// --------------------------------  Register Item: PORT_PIM1  ------------------------------------
// SVD Line: 1624

//  <item> SFDITEM_REG__PORT_PIM1
//    <name> PIM1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040041) Port input mode register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PIM1 >> 0) & 0xFFFFFFFF), ((PORT_PIM1 = (PORT_PIM1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PIM3  --------------------------------
// SVD Line: 1633

unsigned char PORT_PIM3 __AT (0x40040043);



// --------------------------------  Register Item: PORT_PIM3  ------------------------------------
// SVD Line: 1633

//  <item> SFDITEM_REG__PORT_PIM3
//    <name> PIM3 </name>
//    <i> [Bits 7..0] RW (@ 0x40040043) Port input mode register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PIM3 >> 0) & 0xFFFFFFFF), ((PORT_PIM3 = (PORT_PIM3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PIM5  --------------------------------
// SVD Line: 1642

unsigned char PORT_PIM5 __AT (0x40040045);



// --------------------------------  Register Item: PORT_PIM5  ------------------------------------
// SVD Line: 1642

//  <item> SFDITEM_REG__PORT_PIM5
//    <name> PIM5 </name>
//    <i> [Bits 7..0] RW (@ 0x40040045) Port input mode register 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PIM5 >> 0) & 0xFFFFFFFF), ((PORT_PIM5 = (PORT_PIM5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PIM7  --------------------------------
// SVD Line: 1651

unsigned char PORT_PIM7 __AT (0x40040047);



// --------------------------------  Register Item: PORT_PIM7  ------------------------------------
// SVD Line: 1651

//  <item> SFDITEM_REG__PORT_PIM7
//    <name> PIM7 </name>
//    <i> [Bits 7..0] RW (@ 0x40040047) Port input mode register 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PIM7 >> 0) & 0xFFFFFFFF), ((PORT_PIM7 = (PORT_PIM7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM0  --------------------------------
// SVD Line: 1660

unsigned char PORT_POM0 __AT (0x40040050);



// --------------------------------  Register Item: PORT_POM0  ------------------------------------
// SVD Line: 1660

//  <item> SFDITEM_REG__PORT_POM0
//    <name> POM0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040050) Port output mode register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM0 >> 0) & 0xFFFFFFFF), ((PORT_POM0 = (PORT_POM0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM1  --------------------------------
// SVD Line: 1669

unsigned char PORT_POM1 __AT (0x40040051);



// --------------------------------  Register Item: PORT_POM1  ------------------------------------
// SVD Line: 1669

//  <item> SFDITEM_REG__PORT_POM1
//    <name> POM1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040051) Port output mode register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM1 >> 0) & 0xFFFFFFFF), ((PORT_POM1 = (PORT_POM1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM3  --------------------------------
// SVD Line: 1678

unsigned char PORT_POM3 __AT (0x40040053);



// --------------------------------  Register Item: PORT_POM3  ------------------------------------
// SVD Line: 1678

//  <item> SFDITEM_REG__PORT_POM3
//    <name> POM3 </name>
//    <i> [Bits 7..0] RW (@ 0x40040053) Port output mode register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM3 >> 0) & 0xFFFFFFFF), ((PORT_POM3 = (PORT_POM3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM5  --------------------------------
// SVD Line: 1687

unsigned char PORT_POM5 __AT (0x40040055);



// --------------------------------  Register Item: PORT_POM5  ------------------------------------
// SVD Line: 1687

//  <item> SFDITEM_REG__PORT_POM5
//    <name> POM5 </name>
//    <i> [Bits 7..0] RW (@ 0x40040055) Port output mode register 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM5 >> 0) & 0xFFFFFFFF), ((PORT_POM5 = (PORT_POM5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM7  --------------------------------
// SVD Line: 1696

unsigned char PORT_POM7 __AT (0x40040057);



// --------------------------------  Register Item: PORT_POM7  ------------------------------------
// SVD Line: 1696

//  <item> SFDITEM_REG__PORT_POM7
//    <name> POM7 </name>
//    <i> [Bits 7..0] RW (@ 0x40040057) Port output mode register 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM7 >> 0) & 0xFFFFFFFF), ((PORT_POM7 = (PORT_POM7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC0  --------------------------------
// SVD Line: 1705

unsigned char PORT_PMC0 __AT (0x40040060);



// --------------------------------  Register Item: PORT_PMC0  ------------------------------------
// SVD Line: 1705

//  <item> SFDITEM_REG__PORT_PMC0
//    <name> PMC0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040060) Port mode control register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC0 >> 0) & 0xFFFFFFFF), ((PORT_PMC0 = (PORT_PMC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC1  --------------------------------
// SVD Line: 1714

unsigned char PORT_PMC1 __AT (0x40040061);



// --------------------------------  Register Item: PORT_PMC1  ------------------------------------
// SVD Line: 1714

//  <item> SFDITEM_REG__PORT_PMC1
//    <name> PMC1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040061) Port mode control register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC1 >> 0) & 0xFFFFFFFF), ((PORT_PMC1 = (PORT_PMC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC2  --------------------------------
// SVD Line: 1723

unsigned char PORT_PMC2 __AT (0x40040062);



// --------------------------------  Register Item: PORT_PMC2  ------------------------------------
// SVD Line: 1723

//  <item> SFDITEM_REG__PORT_PMC2
//    <name> PMC2 </name>
//    <i> [Bits 7..0] RW (@ 0x40040062) Port mode control register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC2 >> 0) & 0xFFFFFFFF), ((PORT_PMC2 = (PORT_PMC2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC12  -------------------------------
// SVD Line: 1732

unsigned char PORT_PMC12 __AT (0x4004006C);



// --------------------------------  Register Item: PORT_PMC12  -----------------------------------
// SVD Line: 1732

//  <item> SFDITEM_REG__PORT_PMC12
//    <name> PMC12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004006C) Port mode control register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC12 >> 0) & 0xFFFFFFFF), ((PORT_PMC12 = (PORT_PMC12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC14  -------------------------------
// SVD Line: 1741

unsigned char PORT_PMC14 __AT (0x4004006E);



// --------------------------------  Register Item: PORT_PMC14  -----------------------------------
// SVD Line: 1741

//  <item> SFDITEM_REG__PORT_PMC14
//    <name> PMC14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004006E) Port mode control register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC14 >> 0) & 0xFFFFFFFF), ((PORT_PMC14 = (PORT_PMC14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PIOR0  -------------------------------
// SVD Line: 1750

unsigned char PORT_PIOR0 __AT (0x40040877);



// --------------------------------  Register Item: PORT_PIOR0  -----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_REG__PORT_PIOR0
//    <name> PIOR0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040877) Peripheral I/O redirection register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PIOR0 >> 0) & 0xFFFFFFFF), ((PORT_PIOR0 = (PORT_PIOR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PIOR1  -------------------------------
// SVD Line: 1759

unsigned char PORT_PIOR1 __AT (0x40040879);



// --------------------------------  Register Item: PORT_PIOR1  -----------------------------------
// SVD Line: 1759

//  <item> SFDITEM_REG__PORT_PIOR1
//    <name> PIOR1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040879) Peripheral I/O redirection register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PIOR1 >> 0) & 0xFFFFFFFF), ((PORT_PIOR1 = (PORT_PIOR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PIOR2  -------------------------------
// SVD Line: 1768

unsigned char PORT_PIOR2 __AT (0x40040875);



// --------------------------------  Register Item: PORT_PIOR2  -----------------------------------
// SVD Line: 1768

//  <item> SFDITEM_REG__PORT_PIOR2
//    <name> PIOR2 </name>
//    <i> [Bits 7..0] RW (@ 0x40040875) Peripheral I/O redirection register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PIOR2 >> 0) & 0xFFFFFFFF), ((PORT_PIOR2 = (PORT_PIOR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PIOR3  -------------------------------
// SVD Line: 1777

unsigned char PORT_PIOR3 __AT (0x4004087C);



// --------------------------------  Register Item: PORT_PIOR3  -----------------------------------
// SVD Line: 1777

//  <item> SFDITEM_REG__PORT_PIOR3
//    <name> PIOR3 </name>
//    <i> [Bits 7..0] RW (@ 0x4004087C) Peripheral I/O redirection register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PIOR3 >> 0) & 0xFFFFFFFF), ((PORT_PIOR3 = (PORT_PIOR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PMS  --------------------------------
// SVD Line: 1786

unsigned char PORT_PMS __AT (0x4004087B);



// ---------------------------------  Register Item: PORT_PMS  ------------------------------------
// SVD Line: 1786

//  <item> SFDITEM_REG__PORT_PMS
//    <name> PMS </name>
//    <i> [Bits 7..0] RW (@ 0x4004087B) Port mode select register </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMS >> 0) & 0xFFFFFFFF), ((PORT_PMS = (PORT_PMS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_GDIDIS  -------------------------------
// SVD Line: 1795

unsigned char PORT_GDIDIS __AT (0x4004087D);



// -------------------------------  Register Item: PORT_GDIDIS  -----------------------------------
// SVD Line: 1795

//  <item> SFDITEM_REG__PORT_GDIDIS
//    <name> GDIDIS </name>
//    <i> [Bits 7..0] RW (@ 0x4004087D) Global digital input disable register </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_GDIDIS >> 0) & 0xFFFFFFFF), ((PORT_GDIDIS = (PORT_GDIDIS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: PORT  -------------------------------------
// SVD Line: 1321

//  <view> PORT
//    <name> PORT </name>
//    <item> SFDITEM_REG__PORT_PM0 </item>
//    <item> SFDITEM_REG__PORT_PM1 </item>
//    <item> SFDITEM_REG__PORT_PM2 </item>
//    <item> SFDITEM_REG__PORT_PM3 </item>
//    <item> SFDITEM_REG__PORT_PM4 </item>
//    <item> SFDITEM_REG__PORT_PM5 </item>
//    <item> SFDITEM_REG__PORT_PM6 </item>
//    <item> SFDITEM_REG__PORT_PM7 </item>
//    <item> SFDITEM_REG__PORT_PM12 </item>
//    <item> SFDITEM_REG__PORT_PM13 </item>
//    <item> SFDITEM_REG__PORT_PM14 </item>
//    <item> SFDITEM_REG__PORT_P0 </item>
//    <item> SFDITEM_REG__PORT_P1 </item>
//    <item> SFDITEM_REG__PORT_P2 </item>
//    <item> SFDITEM_REG__PORT_P3 </item>
//    <item> SFDITEM_REG__PORT_P4 </item>
//    <item> SFDITEM_REG__PORT_P5 </item>
//    <item> SFDITEM_REG__PORT_P6 </item>
//    <item> SFDITEM_REG__PORT_P7 </item>
//    <item> SFDITEM_REG__PORT_P12 </item>
//    <item> SFDITEM_REG__PORT_P13 </item>
//    <item> SFDITEM_REG__PORT_P14 </item>
//    <item> SFDITEM_REG__PORT_PU0 </item>
//    <item> SFDITEM_REG__PORT_PU1 </item>
//    <item> SFDITEM_REG__PORT_PU3 </item>
//    <item> SFDITEM_REG__PORT_PU4 </item>
//    <item> SFDITEM_REG__PORT_PU5 </item>
//    <item> SFDITEM_REG__PORT_PU7 </item>
//    <item> SFDITEM_REG__PORT_PU12 </item>
//    <item> SFDITEM_REG__PORT_PU13 </item>
//    <item> SFDITEM_REG__PORT_PU14 </item>
//    <item> SFDITEM_REG__PORT_PIM0 </item>
//    <item> SFDITEM_REG__PORT_PIM1 </item>
//    <item> SFDITEM_REG__PORT_PIM3 </item>
//    <item> SFDITEM_REG__PORT_PIM5 </item>
//    <item> SFDITEM_REG__PORT_PIM7 </item>
//    <item> SFDITEM_REG__PORT_POM0 </item>
//    <item> SFDITEM_REG__PORT_POM1 </item>
//    <item> SFDITEM_REG__PORT_POM3 </item>
//    <item> SFDITEM_REG__PORT_POM5 </item>
//    <item> SFDITEM_REG__PORT_POM7 </item>
//    <item> SFDITEM_REG__PORT_PMC0 </item>
//    <item> SFDITEM_REG__PORT_PMC1 </item>
//    <item> SFDITEM_REG__PORT_PMC2 </item>
//    <item> SFDITEM_REG__PORT_PMC12 </item>
//    <item> SFDITEM_REG__PORT_PMC14 </item>
//    <item> SFDITEM_REG__PORT_PIOR0 </item>
//    <item> SFDITEM_REG__PORT_PIOR1 </item>
//    <item> SFDITEM_REG__PORT_PIOR2 </item>
//    <item> SFDITEM_REG__PORT_PIOR3 </item>
//    <item> SFDITEM_REG__PORT_PMS </item>
//    <item> SFDITEM_REG__PORT_GDIDIS </item>
//  </view>
//  


// ---------------------------  Register Item Address: DIV_DIVIDEND  ------------------------------
// SVD Line: 1830

unsigned int DIV_DIVIDEND __AT (0x40080000);



// -------------------------------  Register Item: DIV_DIVIDEND  ----------------------------------
// SVD Line: 1830

//  <item> SFDITEM_REG__DIV_DIVIDEND
//    <name> DIVIDEND </name>
//    <i> [Bits 31..0] RW (@ 0x40080000) Dividend register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DIV_DIVIDEND >> 0) & 0xFFFFFFFF), ((DIV_DIVIDEND = (DIV_DIVIDEND & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: DIV_DIVISOR  -------------------------------
// SVD Line: 1838

unsigned int DIV_DIVISOR __AT (0x40080004);



// -------------------------------  Register Item: DIV_DIVISOR  -----------------------------------
// SVD Line: 1838

//  <item> SFDITEM_REG__DIV_DIVISOR
//    <name> DIVISOR </name>
//    <i> [Bits 31..0] RW (@ 0x40080004) Divisor register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DIV_DIVISOR >> 0) & 0xFFFFFFFF), ((DIV_DIVISOR = (DIV_DIVISOR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: DIV_QUOTIENT  ------------------------------
// SVD Line: 1846

unsigned int DIV_QUOTIENT __AT (0x40080008);



// -------------------------------  Register Item: DIV_QUOTIENT  ----------------------------------
// SVD Line: 1846

//  <item> SFDITEM_REG__DIV_QUOTIENT
//    <name> QUOTIENT </name>
//    <i> [Bits 31..0] RO (@ 0x40080008) Quotient register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DIV_QUOTIENT >> 0) & 0xFFFFFFFF), ((DIV_QUOTIENT = (DIV_QUOTIENT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DIV_REMAINDER  ------------------------------
// SVD Line: 1855

unsigned int DIV_REMAINDER __AT (0x4008000C);



// ------------------------------  Register Item: DIV_REMAINDER  ----------------------------------
// SVD Line: 1855

//  <item> SFDITEM_REG__DIV_REMAINDER
//    <name> REMAINDER </name>
//    <i> [Bits 31..0] RO (@ 0x4008000C) Remainder register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DIV_REMAINDER >> 0) & 0xFFFFFFFF), ((DIV_REMAINDER = (DIV_REMAINDER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DIV_STATUS  -------------------------------
// SVD Line: 1864

unsigned int DIV_STATUS __AT (0x40080010);



// -------------------------------  Field Item: DIV_STATUS_BUSY  ----------------------------------
// SVD Line: 1873

//  <item> SFDITEM_FIELD__DIV_STATUS_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40080010) divider busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) DIV_STATUS ) </loc>
//      <o.8..8> BUSY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DIV_STATUS_DIVBYZERO  --------------------------------
// SVD Line: 1880

//  <item> SFDITEM_FIELD__DIV_STATUS_DIVBYZERO
//    <name> DIVBYZERO </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40080010) divider zero flag </i>
//    <check> 
//      <loc> ( (unsigned int) DIV_STATUS ) </loc>
//      <o.9..9> DIVBYZERO
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DIV_STATUS  -----------------------------------
// SVD Line: 1864

//  <rtree> SFDITEM_REG__DIV_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40080010) Status register </i>
//    <loc> ( (unsigned int)((DIV_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DIV_STATUS_BUSY </item>
//    <item> SFDITEM_FIELD__DIV_STATUS_DIVBYZERO </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: DIV  --------------------------------------
// SVD Line: 1808

//  <view> DIV
//    <name> DIV </name>
//    <item> SFDITEM_REG__DIV_DIVIDEND </item>
//    <item> SFDITEM_REG__DIV_DIVISOR </item>
//    <item> SFDITEM_REG__DIV_QUOTIENT </item>
//    <item> SFDITEM_REG__DIV_REMAINDER </item>
//    <item> SFDITEM_REG__DIV_STATUS </item>
//  </view>
//  


// -----------------------  Register Item Address: TM40_TCR0_TCR0_TCR00  --------------------------
// SVD Line: 1933

unsigned short TM40_TCR0_TCR0_TCR00 __AT (0x40041D80);



// ---------------------------  Register Item: TM40_TCR0_TCR0_TCR00  ------------------------------
// SVD Line: 1933

//  <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR00
//    <name> TCR00 </name>
//    <i> [Bits 15..0] RO (@ 0x40041D80) Timer count register 00 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TCR0_TCR0_TCR00 >> 0) & 0xFFFFFFFF), ((TM40_TCR0_TCR0_TCR00 = (TM40_TCR0_TCR0_TCR00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TCR0_TCR0_TCR01  --------------------------
// SVD Line: 1933

unsigned short TM40_TCR0_TCR0_TCR01 __AT (0x40041D82);



// ---------------------------  Register Item: TM40_TCR0_TCR0_TCR01  ------------------------------
// SVD Line: 1933

//  <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR01
//    <name> TCR01 </name>
//    <i> [Bits 15..0] RO (@ 0x40041D82) Timer count register 01 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TCR0_TCR0_TCR01 >> 0) & 0xFFFFFFFF), ((TM40_TCR0_TCR0_TCR01 = (TM40_TCR0_TCR0_TCR01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TCR0_TCR0_TCR02  --------------------------
// SVD Line: 1933

unsigned short TM40_TCR0_TCR0_TCR02 __AT (0x40041D84);



// ---------------------------  Register Item: TM40_TCR0_TCR0_TCR02  ------------------------------
// SVD Line: 1933

//  <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR02
//    <name> TCR02 </name>
//    <i> [Bits 15..0] RO (@ 0x40041D84) Timer count register 02 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TCR0_TCR0_TCR02 >> 0) & 0xFFFFFFFF), ((TM40_TCR0_TCR0_TCR02 = (TM40_TCR0_TCR0_TCR02 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TCR0_TCR0_TCR03  --------------------------
// SVD Line: 1933

unsigned short TM40_TCR0_TCR0_TCR03 __AT (0x40041D86);



// ---------------------------  Register Item: TM40_TCR0_TCR0_TCR03  ------------------------------
// SVD Line: 1933

//  <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR03
//    <name> TCR03 </name>
//    <i> [Bits 15..0] RO (@ 0x40041D86) Timer count register 03 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TCR0_TCR0_TCR03 >> 0) & 0xFFFFFFFF), ((TM40_TCR0_TCR0_TCR03 = (TM40_TCR0_TCR0_TCR03 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TM40_TMR00  -------------------------------
// SVD Line: 1945

unsigned short TM40_TMR00 __AT (0x40041D90);



// --------------------------------  Field Item: TM40_TMR00_MD  -----------------------------------
// SVD Line: 1954

//  <item> SFDITEM_FIELD__TM40_TMR00_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041D90) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR00 >> 0) & 0xF), ((TM40_TMR00 = (TM40_TMR00 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR00_CIS  -----------------------------------
// SVD Line: 1961

//  <item> SFDITEM_FIELD__TM40_TMR00_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40041D90) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR00 >> 6) & 0x3), ((TM40_TMR00 = (TM40_TMR00 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR00_STS  -----------------------------------
// SVD Line: 1968

//  <item> SFDITEM_FIELD__TM40_TMR00_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40041D90) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR00 >> 8) & 0x7), ((TM40_TMR00 = (TM40_TMR00 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR00_CCS  -----------------------------------
// SVD Line: 1975

//  <item> SFDITEM_FIELD__TM40_TMR00_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041D90) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR00 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR00_CKS  -----------------------------------
// SVD Line: 1982

//  <item> SFDITEM_FIELD__TM40_TMR00_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40041D90) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR00 >> 14) & 0x3), ((TM40_TMR00 = (TM40_TMR00 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TMR00  -----------------------------------
// SVD Line: 1945

//  <rtree> SFDITEM_REG__TM40_TMR00
//    <name> TMR00 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041D90) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM40_TMR00 >> 0) & 0xFFFF), ((TM40_TMR00 = (TM40_TMR00 & ~(0xD7CFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xD7CF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TMR00_MD </item>
//    <item> SFDITEM_FIELD__TM40_TMR00_CIS </item>
//    <item> SFDITEM_FIELD__TM40_TMR00_STS </item>
//    <item> SFDITEM_FIELD__TM40_TMR00_CCS </item>
//    <item> SFDITEM_FIELD__TM40_TMR00_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TMR01  -------------------------------
// SVD Line: 1992

unsigned short TM40_TMR01 __AT (0x40041D92);



// --------------------------------  Field Item: TM40_TMR01_MD  -----------------------------------
// SVD Line: 2001

//  <item> SFDITEM_FIELD__TM40_TMR01_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041D92) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR01 >> 0) & 0xF), ((TM40_TMR01 = (TM40_TMR01 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR01_CIS  -----------------------------------
// SVD Line: 2008

//  <item> SFDITEM_FIELD__TM40_TMR01_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40041D92) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR01 >> 6) & 0x3), ((TM40_TMR01 = (TM40_TMR01 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR01_STS  -----------------------------------
// SVD Line: 2015

//  <item> SFDITEM_FIELD__TM40_TMR01_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40041D92) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR01 >> 8) & 0x7), ((TM40_TMR01 = (TM40_TMR01 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM40_TMR01_SPLIT  ----------------------------------
// SVD Line: 2022

//  <item> SFDITEM_FIELD__TM40_TMR01_SPLIT
//    <name> SPLIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041D92) Selection of 8 or 16-bit timer operation for channels 1 and 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR01 ) </loc>
//      <o.11..11> SPLIT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR01_CCS  -----------------------------------
// SVD Line: 2029

//  <item> SFDITEM_FIELD__TM40_TMR01_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041D92) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR01 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR01_CKS  -----------------------------------
// SVD Line: 2036

//  <item> SFDITEM_FIELD__TM40_TMR01_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40041D92) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR01 >> 14) & 0x3), ((TM40_TMR01 = (TM40_TMR01 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TMR01  -----------------------------------
// SVD Line: 1992

//  <rtree> SFDITEM_REG__TM40_TMR01
//    <name> TMR01 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041D92) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM40_TMR01 >> 0) & 0xFFFF), ((TM40_TMR01 = (TM40_TMR01 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TMR01_MD </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_CIS </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_STS </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_SPLIT </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_CCS </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TMR02  -------------------------------
// SVD Line: 2046

unsigned short TM40_TMR02 __AT (0x40041D94);



// --------------------------------  Field Item: TM40_TMR02_MD  -----------------------------------
// SVD Line: 2055

//  <item> SFDITEM_FIELD__TM40_TMR02_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041D94) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR02 >> 0) & 0xF), ((TM40_TMR02 = (TM40_TMR02 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR02_CIS  -----------------------------------
// SVD Line: 2062

//  <item> SFDITEM_FIELD__TM40_TMR02_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40041D94) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR02 >> 6) & 0x3), ((TM40_TMR02 = (TM40_TMR02 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR02_STS  -----------------------------------
// SVD Line: 2069

//  <item> SFDITEM_FIELD__TM40_TMR02_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40041D94) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR02 >> 8) & 0x7), ((TM40_TMR02 = (TM40_TMR02 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM40_TMR02_MASTER  ---------------------------------
// SVD Line: 2076

//  <item> SFDITEM_FIELD__TM40_TMR02_MASTER
//    <name> MASTER </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041D94) Selection between using channel n independently or simultaneously with another channel (as a slave or master) </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR02 ) </loc>
//      <o.11..11> MASTER
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR02_CCS  -----------------------------------
// SVD Line: 2083

//  <item> SFDITEM_FIELD__TM40_TMR02_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041D94) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR02 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR02_CKS  -----------------------------------
// SVD Line: 2090

//  <item> SFDITEM_FIELD__TM40_TMR02_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40041D94) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR02 >> 14) & 0x3), ((TM40_TMR02 = (TM40_TMR02 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TMR02  -----------------------------------
// SVD Line: 2046

//  <rtree> SFDITEM_REG__TM40_TMR02
//    <name> TMR02 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041D94) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM40_TMR02 >> 0) & 0xFFFF), ((TM40_TMR02 = (TM40_TMR02 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TMR02_MD </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_CIS </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_STS </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_MASTER </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_CCS </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TMR03  -------------------------------
// SVD Line: 2100

unsigned short TM40_TMR03 __AT (0x40041D96);



// --------------------------------  Field Item: TM40_TMR03_MD  -----------------------------------
// SVD Line: 2109

//  <item> SFDITEM_FIELD__TM40_TMR03_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041D96) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR03 >> 0) & 0xF), ((TM40_TMR03 = (TM40_TMR03 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR03_CIS  -----------------------------------
// SVD Line: 2116

//  <item> SFDITEM_FIELD__TM40_TMR03_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40041D96) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR03 >> 6) & 0x3), ((TM40_TMR03 = (TM40_TMR03 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR03_STS  -----------------------------------
// SVD Line: 2123

//  <item> SFDITEM_FIELD__TM40_TMR03_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40041D96) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR03 >> 8) & 0x7), ((TM40_TMR03 = (TM40_TMR03 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM40_TMR03_SPLIT  ----------------------------------
// SVD Line: 2130

//  <item> SFDITEM_FIELD__TM40_TMR03_SPLIT
//    <name> SPLIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041D96) Selection of 8 or 16-bit timer operation for channels 1 and 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR03 ) </loc>
//      <o.11..11> SPLIT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR03_CCS  -----------------------------------
// SVD Line: 2137

//  <item> SFDITEM_FIELD__TM40_TMR03_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041D96) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR03 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR03_CKS  -----------------------------------
// SVD Line: 2144

//  <item> SFDITEM_FIELD__TM40_TMR03_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40041D96) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR03 >> 14) & 0x3), ((TM40_TMR03 = (TM40_TMR03 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TMR03  -----------------------------------
// SVD Line: 2100

//  <rtree> SFDITEM_REG__TM40_TMR03
//    <name> TMR03 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041D96) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM40_TMR03 >> 0) & 0xFFFF), ((TM40_TMR03 = (TM40_TMR03 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TMR03_MD </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_CIS </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_STS </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_SPLIT </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_CCS </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TSR00  -------------------------------
// SVD Line: 2154

unsigned short TM40_TSR00 __AT (0x40041DA0);



// -------------------------------  Field Item: TM40_TSR00_OVF  -----------------------------------
// SVD Line: 2163

//  <item> SFDITEM_FIELD__TM40_TSR00_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DA0) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TSR00 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TSR00  -----------------------------------
// SVD Line: 2154

//  <rtree> SFDITEM_REG__TM40_TSR00
//    <name> TSR00 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DA0) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM40_TSR00 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TSR00_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TSR01  -------------------------------
// SVD Line: 2172

unsigned short TM40_TSR01 __AT (0x40041DA2);



// -------------------------------  Field Item: TM40_TSR01_OVF  -----------------------------------
// SVD Line: 2163

//  <item> SFDITEM_FIELD__TM40_TSR01_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DA2) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TSR01 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TSR01  -----------------------------------
// SVD Line: 2172

//  <rtree> SFDITEM_REG__TM40_TSR01
//    <name> TSR01 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DA2) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM40_TSR01 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TSR01_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TSR02  -------------------------------
// SVD Line: 2178

unsigned short TM40_TSR02 __AT (0x40041DA4);



// -------------------------------  Field Item: TM40_TSR02_OVF  -----------------------------------
// SVD Line: 2163

//  <item> SFDITEM_FIELD__TM40_TSR02_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DA4) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TSR02 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TSR02  -----------------------------------
// SVD Line: 2178

//  <rtree> SFDITEM_REG__TM40_TSR02
//    <name> TSR02 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DA4) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM40_TSR02 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TSR02_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TSR03  -------------------------------
// SVD Line: 2184

unsigned short TM40_TSR03 __AT (0x40041DA6);



// -------------------------------  Field Item: TM40_TSR03_OVF  -----------------------------------
// SVD Line: 2163

//  <item> SFDITEM_FIELD__TM40_TSR03_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DA6) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TSR03 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TSR03  -----------------------------------
// SVD Line: 2184

//  <rtree> SFDITEM_REG__TM40_TSR03
//    <name> TSR03 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DA6) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM40_TSR03 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TSR03_OVF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM40_TE0  --------------------------------
// SVD Line: 2190

unsigned short TM40_TE0 __AT (0x40041DB0);



// --------------------------------  Field Item: TM40_TE0_TE00  -----------------------------------
// SVD Line: 2199

//  <item> SFDITEM_FIELD__TM40_TE0_TE00
//    <name> TE00 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DB0) Indication of operation enable/stop status of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.0..0> TE00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TE0_TE01  -----------------------------------
// SVD Line: 2205

//  <item> SFDITEM_FIELD__TM40_TE0_TE01
//    <name> TE01 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041DB0) Indication of operation enable/stop status of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.1..1> TE01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TE0_TE02  -----------------------------------
// SVD Line: 2211

//  <item> SFDITEM_FIELD__TM40_TE0_TE02
//    <name> TE02 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041DB0) Indication of operation enable/stop status of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.2..2> TE02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TE0_TE03  -----------------------------------
// SVD Line: 2217

//  <item> SFDITEM_FIELD__TM40_TE0_TE03
//    <name> TE03 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40041DB0) Indication of operation enable/stop status of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.3..3> TE03
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TE0_TEH01  -----------------------------------
// SVD Line: 2223

//  <item> SFDITEM_FIELD__TM40_TE0_TEH01
//    <name> TEH01 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40041DB0) Indication of whether operation of the higher 8-bit timer is enabled or stopped when channel 1 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.9..9> TEH01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TE0_TEH03  -----------------------------------
// SVD Line: 2229

//  <item> SFDITEM_FIELD__TM40_TE0_TEH03
//    <name> TEH03 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40041DB0) Indication of whether operation of the higher 8-bit timer is enabled or stopped when channel 3 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.11..11> TEH03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TE0  ------------------------------------
// SVD Line: 2190

//  <rtree> SFDITEM_REG__TM40_TE0
//    <name> TE0 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DB0) Timer channel enable status register m </i>
//    <loc> ( (unsigned short)((TM40_TE0 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TE0_TE00 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TE01 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TE02 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TE03 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TEH01 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TEH03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM40_TS0  --------------------------------
// SVD Line: 2238

unsigned short TM40_TS0 __AT (0x40041DB2);



// --------------------------------  Field Item: TM40_TS0_TS00  -----------------------------------
// SVD Line: 2247

//  <item> SFDITEM_FIELD__TM40_TS0_TS00
//    <name> TS00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041DB2) Operation enable (start) trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.0..0> TS00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TS0_TS01  -----------------------------------
// SVD Line: 2253

//  <item> SFDITEM_FIELD__TM40_TS0_TS01
//    <name> TS01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DB2) Operation enable (start) trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.1..1> TS01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TS0_TS02  -----------------------------------
// SVD Line: 2259

//  <item> SFDITEM_FIELD__TM40_TS0_TS02
//    <name> TS02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DB2) Operation enable (start) trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.2..2> TS02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TS0_TS03  -----------------------------------
// SVD Line: 2265

//  <item> SFDITEM_FIELD__TM40_TS0_TS03
//    <name> TS03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DB2) Operation enable (start) trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.3..3> TS03
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TS0_TSH01  -----------------------------------
// SVD Line: 2271

//  <item> SFDITEM_FIELD__TM40_TS0_TSH01
//    <name> TSH01 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40041DB2) Trigger to enable operation (start operation) of the higher 8-bit timer when channel 1 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.9..9> TSH01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TS0_TSH03  -----------------------------------
// SVD Line: 2277

//  <item> SFDITEM_FIELD__TM40_TS0_TSH03
//    <name> TSH03 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041DB2) Trigger to enable operation (start operation) of the higher 8-bit timer when channel 3 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.11..11> TSH03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TS0  ------------------------------------
// SVD Line: 2238

//  <rtree> SFDITEM_REG__TM40_TS0
//    <name> TS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DB2) Timer channel start register 0 </i>
//    <loc> ( (unsigned short)((TM40_TS0 >> 0) & 0xFFFF), ((TM40_TS0 = (TM40_TS0 & ~(0xA0FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xA0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TS0_TS00 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TS01 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TS02 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TS03 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TSH01 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TSH03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM40_TT0  --------------------------------
// SVD Line: 2286

unsigned short TM40_TT0 __AT (0x40041DB4);



// --------------------------------  Field Item: TM40_TT0_TT00  -----------------------------------
// SVD Line: 2295

//  <item> SFDITEM_FIELD__TM40_TT0_TT00
//    <name> TT00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041DB4) Operation stop trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.0..0> TT00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TT0_TT01  -----------------------------------
// SVD Line: 2301

//  <item> SFDITEM_FIELD__TM40_TT0_TT01
//    <name> TT01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DB4) Operation stop trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.1..1> TT01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TT0_TT02  -----------------------------------
// SVD Line: 2307

//  <item> SFDITEM_FIELD__TM40_TT0_TT02
//    <name> TT02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DB4) Operation stop trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.2..2> TT02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TT0_TT03  -----------------------------------
// SVD Line: 2313

//  <item> SFDITEM_FIELD__TM40_TT0_TT03
//    <name> TT03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DB4) Operation stop trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.3..3> TT03
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TT0_TTH01  -----------------------------------
// SVD Line: 2319

//  <item> SFDITEM_FIELD__TM40_TT0_TTH01
//    <name> TTH01 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40041DB4) Trigger to stop operation of the higher 8-bit timer when channel 1 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.9..9> TTH01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TT0_TTH03  -----------------------------------
// SVD Line: 2325

//  <item> SFDITEM_FIELD__TM40_TT0_TTH03
//    <name> TTH03 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041DB4) Trigger to stop operation of the higher 8-bit timer when channel 3 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.11..11> TTH03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TT0  ------------------------------------
// SVD Line: 2286

//  <rtree> SFDITEM_REG__TM40_TT0
//    <name> TT0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DB4) Timer channel stop register 0 </i>
//    <loc> ( (unsigned short)((TM40_TT0 >> 0) & 0xFFFF), ((TM40_TT0 = (TM40_TT0 & ~(0xA0FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xA0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TT0_TT00 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TT01 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TT02 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TT03 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TTH01 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TTH03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TPS0  --------------------------------
// SVD Line: 2334

unsigned short TM40_TPS0 __AT (0x40041DB6);



// -------------------------------  Field Item: TM40_TPS0_PRS00  ----------------------------------
// SVD Line: 2343

//  <item> SFDITEM_FIELD__TM40_TPS0_PRS00
//    <name> PRS00 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041DB6) Prescaler 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TPS0 >> 0) & 0xF), ((TM40_TPS0 = (TM40_TPS0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TPS0_PRS01  ----------------------------------
// SVD Line: 2349

//  <item> SFDITEM_FIELD__TM40_TPS0_PRS01
//    <name> PRS01 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40041DB6) Prescaler 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TPS0 >> 4) & 0xF), ((TM40_TPS0 = (TM40_TPS0 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TPS0_PRS02  ----------------------------------
// SVD Line: 2355

//  <item> SFDITEM_FIELD__TM40_TPS0_PRS02
//    <name> PRS02 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40041DB6) Prescaler 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TPS0 >> 8) & 0x3), ((TM40_TPS0 = (TM40_TPS0 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TPS0_PRS03  ----------------------------------
// SVD Line: 2361

//  <item> SFDITEM_FIELD__TM40_TPS0_PRS03
//    <name> PRS03 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40041DB6) Prescaler 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TPS0 >> 12) & 0x3), ((TM40_TPS0 = (TM40_TPS0 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TPS0  -----------------------------------
// SVD Line: 2334

//  <rtree> SFDITEM_REG__TM40_TPS0
//    <name> TPS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DB6) Timer clock select register 0 </i>
//    <loc> ( (unsigned short)((TM40_TPS0 >> 0) & 0xFFFF), ((TM40_TPS0 = (TM40_TPS0 & ~(0x33FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x33FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TPS0_PRS00 </item>
//    <item> SFDITEM_FIELD__TM40_TPS0_PRS01 </item>
//    <item> SFDITEM_FIELD__TM40_TPS0_PRS02 </item>
//    <item> SFDITEM_FIELD__TM40_TPS0_PRS03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM40_TO0  --------------------------------
// SVD Line: 2370

unsigned short TM40_TO0 __AT (0x40041DB8);



// --------------------------------  Field Item: TM40_TO0_TO00  -----------------------------------
// SVD Line: 2379

//  <item> SFDITEM_FIELD__TM40_TO0_TO00
//    <name> TO00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041DB8) Timer output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TO0 ) </loc>
//      <o.0..0> TO00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TO0_TO01  -----------------------------------
// SVD Line: 2385

//  <item> SFDITEM_FIELD__TM40_TO0_TO01
//    <name> TO01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DB8) Timer output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TO0 ) </loc>
//      <o.1..1> TO01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TO0_TO02  -----------------------------------
// SVD Line: 2391

//  <item> SFDITEM_FIELD__TM40_TO0_TO02
//    <name> TO02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DB8) Timer output of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TO0 ) </loc>
//      <o.2..2> TO02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TO0_TO03  -----------------------------------
// SVD Line: 2397

//  <item> SFDITEM_FIELD__TM40_TO0_TO03
//    <name> TO03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DB8) Timer output of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TO0 ) </loc>
//      <o.3..3> TO03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TO0  ------------------------------------
// SVD Line: 2370

//  <rtree> SFDITEM_REG__TM40_TO0
//    <name> TO0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DB8) Timer output register 0 </i>
//    <loc> ( (unsigned short)((TM40_TO0 >> 0) & 0xFFFF), ((TM40_TO0 = (TM40_TO0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TO0_TO00 </item>
//    <item> SFDITEM_FIELD__TM40_TO0_TO01 </item>
//    <item> SFDITEM_FIELD__TM40_TO0_TO02 </item>
//    <item> SFDITEM_FIELD__TM40_TO0_TO03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TOE0  --------------------------------
// SVD Line: 2406

unsigned short TM40_TOE0 __AT (0x40041DBA);



// -------------------------------  Field Item: TM40_TOE0_TOE00  ----------------------------------
// SVD Line: 2415

//  <item> SFDITEM_FIELD__TM40_TOE0_TOE00
//    <name> TOE00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041DBA) Timer output enable of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOE0 ) </loc>
//      <o.0..0> TOE00
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOE0_TOE01  ----------------------------------
// SVD Line: 2421

//  <item> SFDITEM_FIELD__TM40_TOE0_TOE01
//    <name> TOE01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DBA) Timer output enable of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOE0 ) </loc>
//      <o.1..1> TOE01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOE0_TOE02  ----------------------------------
// SVD Line: 2427

//  <item> SFDITEM_FIELD__TM40_TOE0_TOE02
//    <name> TOE02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DBA) Timer output enable of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOE0 ) </loc>
//      <o.2..2> TOE02
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOE0_TOE03  ----------------------------------
// SVD Line: 2433

//  <item> SFDITEM_FIELD__TM40_TOE0_TOE03
//    <name> TOE03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DBA) Timer output enable of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOE0 ) </loc>
//      <o.3..3> TOE03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TOE0  -----------------------------------
// SVD Line: 2406

//  <rtree> SFDITEM_REG__TM40_TOE0
//    <name> TOE0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DBA) Timer output enable register 0 </i>
//    <loc> ( (unsigned short)((TM40_TOE0 >> 0) & 0xFFFF), ((TM40_TOE0 = (TM40_TOE0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TOE0_TOE00 </item>
//    <item> SFDITEM_FIELD__TM40_TOE0_TOE01 </item>
//    <item> SFDITEM_FIELD__TM40_TOE0_TOE02 </item>
//    <item> SFDITEM_FIELD__TM40_TOE0_TOE03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TOL0  --------------------------------
// SVD Line: 2442

unsigned short TM40_TOL0 __AT (0x40041DBC);



// -------------------------------  Field Item: TM40_TOL0_TOL01  ----------------------------------
// SVD Line: 2451

//  <item> SFDITEM_FIELD__TM40_TOL0_TOL01
//    <name> TOL01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DBC) Control of timer output level of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOL0 ) </loc>
//      <o.1..1> TOL01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOL0_TOL02  ----------------------------------
// SVD Line: 2457

//  <item> SFDITEM_FIELD__TM40_TOL0_TOL02
//    <name> TOL02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DBC) Control of timer output level of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOL0 ) </loc>
//      <o.2..2> TOL02
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOL0_TOL03  ----------------------------------
// SVD Line: 2463

//  <item> SFDITEM_FIELD__TM40_TOL0_TOL03
//    <name> TOL03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DBC) Control of timer output level of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOL0 ) </loc>
//      <o.3..3> TOL03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TOL0  -----------------------------------
// SVD Line: 2442

//  <rtree> SFDITEM_REG__TM40_TOL0
//    <name> TOL0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DBC) Timer output level register 0 </i>
//    <loc> ( (unsigned short)((TM40_TOL0 >> 0) & 0xFFFF), ((TM40_TOL0 = (TM40_TOL0 & ~(0xEUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TOL0_TOL01 </item>
//    <item> SFDITEM_FIELD__TM40_TOL0_TOL02 </item>
//    <item> SFDITEM_FIELD__TM40_TOL0_TOL03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TOM0  --------------------------------
// SVD Line: 2472

unsigned short TM40_TOM0 __AT (0x40041DBE);



// -------------------------------  Field Item: TM40_TOM0_TOM01  ----------------------------------
// SVD Line: 2481

//  <item> SFDITEM_FIELD__TM40_TOM0_TOM01
//    <name> TOM01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DBE) Control of timer output mode of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOM0 ) </loc>
//      <o.1..1> TOM01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOM0_TOM02  ----------------------------------
// SVD Line: 2487

//  <item> SFDITEM_FIELD__TM40_TOM0_TOM02
//    <name> TOM02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DBE) Control of timer output mode of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOM0 ) </loc>
//      <o.2..2> TOM02
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOM0_TOM03  ----------------------------------
// SVD Line: 2493

//  <item> SFDITEM_FIELD__TM40_TOM0_TOM03
//    <name> TOM03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DBE) Control of timer output mode of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOM0 ) </loc>
//      <o.3..3> TOM03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TOM0  -----------------------------------
// SVD Line: 2472

//  <rtree> SFDITEM_REG__TM40_TOM0
//    <name> TOM0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DBE) Timer output mode register 0 </i>
//    <loc> ( (unsigned short)((TM40_TOM0 >> 0) & 0xFFFF), ((TM40_TOM0 = (TM40_TOM0 & ~(0xEUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TOM0_TOM01 </item>
//    <item> SFDITEM_FIELD__TM40_TOM0_TOM02 </item>
//    <item> SFDITEM_FIELD__TM40_TOM0_TOM03 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: TM40_TDR0_TDR0_TDR00  --------------------------
// SVD Line: 2502

unsigned short TM40_TDR0_TDR0_TDR00 __AT (0x40041F18);



// ---------------------------  Register Item: TM40_TDR0_TDR0_TDR00  ------------------------------
// SVD Line: 2502

//  <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR00
//    <name> TDR00 </name>
//    <i> [Bits 15..0] RW (@ 0x40041F18) Timer data register 00 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TDR0_TDR0_TDR00 >> 0) & 0xFFFFFFFF), ((TM40_TDR0_TDR0_TDR00 = (TM40_TDR0_TDR0_TDR00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TDR0_TDR0_TDR01  --------------------------
// SVD Line: 2502

unsigned short TM40_TDR0_TDR0_TDR01 __AT (0x40041F1A);



// ---------------------------  Register Item: TM40_TDR0_TDR0_TDR01  ------------------------------
// SVD Line: 2502

//  <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR01
//    <name> TDR01 </name>
//    <i> [Bits 15..0] RW (@ 0x40041F1A) Timer data register 01 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TDR0_TDR0_TDR01 >> 0) & 0xFFFFFFFF), ((TM40_TDR0_TDR0_TDR01 = (TM40_TDR0_TDR0_TDR01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TDR0_TDR0_TDR02  --------------------------
// SVD Line: 2514

unsigned short TM40_TDR0_TDR0_TDR02 __AT (0x40041F64);



// ---------------------------  Register Item: TM40_TDR0_TDR0_TDR02  ------------------------------
// SVD Line: 2514

//  <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR02
//    <name> TDR02 </name>
//    <i> [Bits 15..0] RW (@ 0x40041F64) Timer data register 02 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TDR0_TDR0_TDR02 >> 0) & 0xFFFFFFFF), ((TM40_TDR0_TDR0_TDR02 = (TM40_TDR0_TDR0_TDR02 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TDR0_TDR0_TDR03  --------------------------
// SVD Line: 2514

unsigned short TM40_TDR0_TDR0_TDR03 __AT (0x40041F66);



// ---------------------------  Register Item: TM40_TDR0_TDR0_TDR03  ------------------------------
// SVD Line: 2514

//  <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR03
//    <name> TDR03 </name>
//    <i> [Bits 15..0] RW (@ 0x40041F66) Timer data register 03 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TDR0_TDR0_TDR03 >> 0) & 0xFFFFFFFF), ((TM40_TDR0_TDR0_TDR03 = (TM40_TDR0_TDR0_TDR03 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM40_TDR01L  -------------------------------
// SVD Line: 2526

unsigned char TM40_TDR01L __AT (0x40041F1A);



// -------------------------------  Register Item: TM40_TDR01L  -----------------------------------
// SVD Line: 2526

//  <item> SFDITEM_REG__TM40_TDR01L
//    <name> TDR01L </name>
//    <i> [Bits 7..0] RW (@ 0x40041F1A) Timer data lower register 01 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TDR01L >> 0) & 0xFFFFFFFF), ((TM40_TDR01L = (TM40_TDR01L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM40_TDR01H  -------------------------------
// SVD Line: 2534

unsigned char TM40_TDR01H __AT (0x40041F1B);



// -------------------------------  Register Item: TM40_TDR01H  -----------------------------------
// SVD Line: 2534

//  <item> SFDITEM_REG__TM40_TDR01H
//    <name> TDR01H </name>
//    <i> [Bits 7..0] RW (@ 0x40041F1B) Timer data higher register 01 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TDR01H >> 0) & 0xFFFFFFFF), ((TM40_TDR01H = (TM40_TDR01H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM40_TDR03L  -------------------------------
// SVD Line: 2542

unsigned char TM40_TDR03L __AT (0x40041F66);



// -------------------------------  Register Item: TM40_TDR03L  -----------------------------------
// SVD Line: 2542

//  <item> SFDITEM_REG__TM40_TDR03L
//    <name> TDR03L </name>
//    <i> [Bits 7..0] RW (@ 0x40041F66) Timer data lower register 03 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TDR03L >> 0) & 0xFFFFFFFF), ((TM40_TDR03L = (TM40_TDR03L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM40_TDR03H  -------------------------------
// SVD Line: 2550

unsigned char TM40_TDR03H __AT (0x40041F67);



// -------------------------------  Register Item: TM40_TDR03H  -----------------------------------
// SVD Line: 2550

//  <item> SFDITEM_REG__TM40_TDR03H
//    <name> TDR03H </name>
//    <i> [Bits 7..0] RW (@ 0x40041F67) Timer data higher register 03 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TDR03H >> 0) & 0xFFFFFFFF), ((TM40_TDR03H = (TM40_TDR03H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: TM40  -------------------------------------
// SVD Line: 1893

//  <view> TM40
//    <name> TM40 </name>
//    <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR00 </item>
//    <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR01 </item>
//    <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR02 </item>
//    <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR03 </item>
//    <item> SFDITEM_REG__TM40_TMR00 </item>
//    <item> SFDITEM_REG__TM40_TMR01 </item>
//    <item> SFDITEM_REG__TM40_TMR02 </item>
//    <item> SFDITEM_REG__TM40_TMR03 </item>
//    <item> SFDITEM_REG__TM40_TSR00 </item>
//    <item> SFDITEM_REG__TM40_TSR01 </item>
//    <item> SFDITEM_REG__TM40_TSR02 </item>
//    <item> SFDITEM_REG__TM40_TSR03 </item>
//    <item> SFDITEM_REG__TM40_TE0 </item>
//    <item> SFDITEM_REG__TM40_TS0 </item>
//    <item> SFDITEM_REG__TM40_TT0 </item>
//    <item> SFDITEM_REG__TM40_TPS0 </item>
//    <item> SFDITEM_REG__TM40_TO0 </item>
//    <item> SFDITEM_REG__TM40_TOE0 </item>
//    <item> SFDITEM_REG__TM40_TOL0 </item>
//    <item> SFDITEM_REG__TM40_TOM0 </item>
//    <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR00 </item>
//    <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR01 </item>
//    <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR02 </item>
//    <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR03 </item>
//    <item> SFDITEM_REG__TM40_TDR01L </item>
//    <item> SFDITEM_REG__TM40_TDR01H </item>
//    <item> SFDITEM_REG__TM40_TDR03L </item>
//    <item> SFDITEM_REG__TM40_TDR03H </item>
//  </view>
//  


// ----------------------------  Register Item Address: TMA_TACR0  --------------------------------
// SVD Line: 2584

unsigned char TMA_TACR0 __AT (0x40042240);



// ------------------------------  Field Item: TMA_TACR0_TSTART  ----------------------------------
// SVD Line: 2593

//  <item> SFDITEM_FIELD__TMA_TACR0_TSTART
//    <name> TSTART </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042240) Timer count start </i>
//    <check> 
//      <loc> ( (unsigned char) TMA_TACR0 ) </loc>
//      <o.0..0> TSTART
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMA_TACR0_TCSTF  ----------------------------------
// SVD Line: 2599

//  <item> SFDITEM_FIELD__TMA_TACR0_TCSTF
//    <name> TCSTF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042240) Timer count status flag </i>
//    <check> 
//      <loc> ( (unsigned char) TMA_TACR0 ) </loc>
//      <o.1..1> TCSTF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMA_TACR0_TSTOP  ----------------------------------
// SVD Line: 2605

//  <item> SFDITEM_FIELD__TMA_TACR0_TSTOP
//    <name> TSTOP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042240) Timer count forced stop </i>
//    <check> 
//      <loc> ( (unsigned char) TMA_TACR0 ) </loc>
//      <o.2..2> TSTOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMA_TACR0_TEDGF  ----------------------------------
// SVD Line: 2611

//  <item> SFDITEM_FIELD__TMA_TACR0_TEDGF
//    <name> TEDGF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042240) Active edge flag </i>
//    <check> 
//      <loc> ( (unsigned char) TMA_TACR0 ) </loc>
//      <o.4..4> TEDGF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMA_TACR0_TUNDF  ----------------------------------
// SVD Line: 2617

//  <item> SFDITEM_FIELD__TMA_TACR0_TUNDF
//    <name> TUNDF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042240) Timer underflow flag </i>
//    <check> 
//      <loc> ( (unsigned char) TMA_TACR0 ) </loc>
//      <o.5..5> TUNDF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMA_TACR0  -----------------------------------
// SVD Line: 2584

//  <rtree> SFDITEM_REG__TMA_TACR0
//    <name> TACR0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042240) Timer control register 0 </i>
//    <loc> ( (unsigned char)((TMA_TACR0 >> 0) & 0xFF), ((TMA_TACR0 = (TMA_TACR0 & ~(0x37UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x37) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMA_TACR0_TSTART </item>
//    <item> SFDITEM_FIELD__TMA_TACR0_TCSTF </item>
//    <item> SFDITEM_FIELD__TMA_TACR0_TSTOP </item>
//    <item> SFDITEM_FIELD__TMA_TACR0_TEDGF </item>
//    <item> SFDITEM_FIELD__TMA_TACR0_TUNDF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMA_TAIOC0  -------------------------------
// SVD Line: 2626

unsigned char TMA_TAIOC0 __AT (0x40042241);



// -----------------------------  Field Item: TMA_TAIOC0_TEDGSEL  ---------------------------------
// SVD Line: 2635

//  <item> SFDITEM_FIELD__TMA_TAIOC0_TEDGSEL
//    <name> TEDGSEL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042241) I/O polarity switch </i>
//    <check> 
//      <loc> ( (unsigned char) TMA_TAIOC0 ) </loc>
//      <o.0..0> TEDGSEL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMA_TAIOC0_TOENA  ----------------------------------
// SVD Line: 2641

//  <item> SFDITEM_FIELD__TMA_TAIOC0_TOENA
//    <name> TOENA </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042241) TAO output enable </i>
//    <check> 
//      <loc> ( (unsigned char) TMA_TAIOC0 ) </loc>
//      <o.2..2> TOENA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMA_TAIOC0_TIPF  ----------------------------------
// SVD Line: 2647

//  <item> SFDITEM_FIELD__TMA_TAIOC0_TIPF
//    <name> TIPF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40042241) TAIO input filter select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMA_TAIOC0 >> 4) & 0x3), ((TMA_TAIOC0 = (TMA_TAIOC0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TMA_TAIOC0_TIOGT  ----------------------------------
// SVD Line: 2653

//  <item> SFDITEM_FIELD__TMA_TAIOC0_TIOGT
//    <name> TIOGT </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40042241) TAIO count control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMA_TAIOC0 >> 6) & 0x3), ((TMA_TAIOC0 = (TMA_TAIOC0 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TMA_TAIOC0  -----------------------------------
// SVD Line: 2626

//  <rtree> SFDITEM_REG__TMA_TAIOC0
//    <name> TAIOC0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042241) Timer I/O control register 0 </i>
//    <loc> ( (unsigned char)((TMA_TAIOC0 >> 0) & 0xFF), ((TMA_TAIOC0 = (TMA_TAIOC0 & ~(0xF5UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF5) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMA_TAIOC0_TEDGSEL </item>
//    <item> SFDITEM_FIELD__TMA_TAIOC0_TOENA </item>
//    <item> SFDITEM_FIELD__TMA_TAIOC0_TIPF </item>
//    <item> SFDITEM_FIELD__TMA_TAIOC0_TIOGT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMA_TAMR0  --------------------------------
// SVD Line: 2662

unsigned char TMA_TAMR0 __AT (0x40042242);



// -------------------------------  Field Item: TMA_TAMR0_TMOD  -----------------------------------
// SVD Line: 2671

//  <item> SFDITEM_FIELD__TMA_TAMR0_TMOD
//    <name> TMOD </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40042242) Operation mode select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMA_TAMR0 >> 0) & 0x7), ((TMA_TAMR0 = (TMA_TAMR0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TMA_TAMR0_TEDGPL  ----------------------------------
// SVD Line: 2677

//  <item> SFDITEM_FIELD__TMA_TAMR0_TEDGPL
//    <name> TEDGPL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042242) TAIO edge polarity select </i>
//    <check> 
//      <loc> ( (unsigned char) TMA_TAMR0 ) </loc>
//      <o.3..3> TEDGPL
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TMA_TAMR0_TCK  -----------------------------------
// SVD Line: 2683

//  <item> SFDITEM_FIELD__TMA_TAMR0_TCK
//    <name> TCK </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40042242) Timer count source select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMA_TAMR0 >> 4) & 0x7), ((TMA_TAMR0 = (TMA_TAMR0 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TMA_TAMR0  -----------------------------------
// SVD Line: 2662

//  <rtree> SFDITEM_REG__TMA_TAMR0
//    <name> TAMR0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042242) Timer mode register 0 </i>
//    <loc> ( (unsigned char)((TMA_TAMR0 >> 0) & 0xFF), ((TMA_TAMR0 = (TMA_TAMR0 & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMA_TAMR0_TMOD </item>
//    <item> SFDITEM_FIELD__TMA_TAMR0_TEDGPL </item>
//    <item> SFDITEM_FIELD__TMA_TAMR0_TCK </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMA_TAISR0  -------------------------------
// SVD Line: 2692

unsigned char TMA_TAISR0 __AT (0x40042243);



// -----------------------------  Field Item: TMA_TAISR0_RCCPSEL  ---------------------------------
// SVD Line: 2701

//  <item> SFDITEM_FIELD__TMA_TAISR0_RCCPSEL
//    <name> RCCPSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40042243) Timer output signal select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMA_TAISR0 >> 0) & 0x7), ((TMA_TAISR0 = (TMA_TAISR0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TMA_TAISR0  -----------------------------------
// SVD Line: 2692

//  <rtree> SFDITEM_REG__TMA_TAISR0
//    <name> TAISR0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042243) Timer event pin select register 0 </i>
//    <loc> ( (unsigned char)((TMA_TAISR0 >> 0) & 0xFF), ((TMA_TAISR0 = (TMA_TAISR0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMA_TAISR0_RCCPSEL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TMA_TA0  ---------------------------------
// SVD Line: 2710

unsigned short TMA_TA0 __AT (0x40042300);



// ---------------------------------  Register Item: TMA_TA0  -------------------------------------
// SVD Line: 2710

//  <item> SFDITEM_REG__TMA_TA0
//    <name> TA0 </name>
//    <i> [Bits 15..0] RW (@ 0x40042300) Timer counter register 0 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMA_TA0 >> 0) & 0xFFFFFFFF), ((TMA_TA0 = (TMA_TA0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: TMA  --------------------------------------
// SVD Line: 2562

//  <view> TMA
//    <name> TMA </name>
//    <item> SFDITEM_REG__TMA_TACR0 </item>
//    <item> SFDITEM_REG__TMA_TAIOC0 </item>
//    <item> SFDITEM_REG__TMA_TAMR0 </item>
//    <item> SFDITEM_REG__TMA_TAISR0 </item>
//    <item> SFDITEM_REG__TMA_TA0 </item>
//  </view>
//  


// -----------------------------  Register Item Address: TMB_TBMR  --------------------------------
// SVD Line: 2745

unsigned char TMB_TBMR __AT (0x40042650);



// -------------------------------  Field Item: TMB_TBMR_TBPWM  -----------------------------------
// SVD Line: 2754

//  <item> SFDITEM_FIELD__TMB_TBMR_TBPWM
//    <name> TBPWM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042650) PWM mode select </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBMR ) </loc>
//      <o.0..0> TBPWM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMB_TBMR_TBMDF  -----------------------------------
// SVD Line: 2760

//  <item> SFDITEM_FIELD__TMB_TBMR_TBMDF
//    <name> TBMDF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042650) Phase counting mode select </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBMR ) </loc>
//      <o.1..1> TBMDF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMB_TBMR_TBDFA  -----------------------------------
// SVD Line: 2766

//  <item> SFDITEM_FIELD__TMB_TBMR_TBDFA
//    <name> TBDFA </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042650) Digital filer function select for TBIO0 pin </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBMR ) </loc>
//      <o.2..2> TBDFA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMB_TBMR_TBDFB  -----------------------------------
// SVD Line: 2772

//  <item> SFDITEM_FIELD__TMB_TBMR_TBDFB
//    <name> TBDFB </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042650) Digital filer function select for TBIO1 pin </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBMR ) </loc>
//      <o.3..3> TBDFB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMB_TBMR_TBDFCK  ----------------------------------
// SVD Line: 2778

//  <item> SFDITEM_FIELD__TMB_TBMR_TBDFCK
//    <name> TBDFCK </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40042650) Digital filter function clock select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMB_TBMR >> 4) & 0x3), ((TMB_TBMR = (TMB_TBMR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBMR_TBELCICE  ---------------------------------
// SVD Line: 2784

//  <item> SFDITEM_FIELD__TMB_TBMR_TBELCICE
//    <name> TBELCICE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40042650) EVENTC input capture request select </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBMR ) </loc>
//      <o.6..6> TBELCICE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBMR_TBSTART  ----------------------------------
// SVD Line: 2790

//  <item> SFDITEM_FIELD__TMB_TBMR_TBSTART
//    <name> TBSTART </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042650) Timer count start </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBMR ) </loc>
//      <o.7..7> TBSTART
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMB_TBMR  ------------------------------------
// SVD Line: 2745

//  <rtree> SFDITEM_REG__TMB_TBMR
//    <name> TBMR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042650) Timer mode register </i>
//    <loc> ( (unsigned char)((TMB_TBMR >> 0) & 0xFF), ((TMB_TBMR = (TMB_TBMR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMB_TBMR_TBPWM </item>
//    <item> SFDITEM_FIELD__TMB_TBMR_TBMDF </item>
//    <item> SFDITEM_FIELD__TMB_TBMR_TBDFA </item>
//    <item> SFDITEM_FIELD__TMB_TBMR_TBDFB </item>
//    <item> SFDITEM_FIELD__TMB_TBMR_TBDFCK </item>
//    <item> SFDITEM_FIELD__TMB_TBMR_TBELCICE </item>
//    <item> SFDITEM_FIELD__TMB_TBMR_TBSTART </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMB_TBCNTC  -------------------------------
// SVD Line: 2799

unsigned char TMB_TBCNTC __AT (0x40042651);



// ------------------------------  Field Item: TMB_TBCNTC_CNTEN0  ---------------------------------
// SVD Line: 2808

//  <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN0
//    <name> CNTEN0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042651) counter enable 0 </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBCNTC ) </loc>
//      <o.0..0> CNTEN0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBCNTC_CNTEN1  ---------------------------------
// SVD Line: 2814

//  <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN1
//    <name> CNTEN1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042651) counter enable 1 </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBCNTC ) </loc>
//      <o.1..1> CNTEN1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBCNTC_CNTEN2  ---------------------------------
// SVD Line: 2820

//  <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN2
//    <name> CNTEN2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042651) counter enable 2 </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBCNTC ) </loc>
//      <o.2..2> CNTEN2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBCNTC_CNTEN3  ---------------------------------
// SVD Line: 2826

//  <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN3
//    <name> CNTEN3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042651) counter enable 3 </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBCNTC ) </loc>
//      <o.3..3> CNTEN3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBCNTC_CNTEN4  ---------------------------------
// SVD Line: 2832

//  <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN4
//    <name> CNTEN4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042651) counter enable 4 </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBCNTC ) </loc>
//      <o.4..4> CNTEN4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBCNTC_CNTEN5  ---------------------------------
// SVD Line: 2838

//  <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN5
//    <name> CNTEN5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042651) counter enable 5 </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBCNTC ) </loc>
//      <o.5..5> CNTEN5
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBCNTC_CNTEN6  ---------------------------------
// SVD Line: 2844

//  <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN6
//    <name> CNTEN6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40042651) counter enable 6 </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBCNTC ) </loc>
//      <o.6..6> CNTEN6
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBCNTC_CNTEN7  ---------------------------------
// SVD Line: 2850

//  <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN7
//    <name> CNTEN7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042651) counter enable 7 </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBCNTC ) </loc>
//      <o.7..7> CNTEN7
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TMB_TBCNTC  -----------------------------------
// SVD Line: 2799

//  <rtree> SFDITEM_REG__TMB_TBCNTC
//    <name> TBCNTC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042651) Timer count control register </i>
//    <loc> ( (unsigned char)((TMB_TBCNTC >> 0) & 0xFF), ((TMB_TBCNTC = (TMB_TBCNTC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN0 </item>
//    <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN1 </item>
//    <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN2 </item>
//    <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN3 </item>
//    <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN4 </item>
//    <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN5 </item>
//    <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN6 </item>
//    <item> SFDITEM_FIELD__TMB_TBCNTC_CNTEN7 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TMB_TBCR  --------------------------------
// SVD Line: 2859

unsigned char TMB_TBCR __AT (0x40042652);



// -------------------------------  Field Item: TMB_TBCR_TBTCK  -----------------------------------
// SVD Line: 2868

//  <item> SFDITEM_FIELD__TMB_TBCR_TBTCK
//    <name> TBTCK </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40042652) Count source select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMB_TBCR >> 0) & 0x7), ((TMB_TBCR = (TMB_TBCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMB_TBCR_TBCKEG  ----------------------------------
// SVD Line: 2874

//  <item> SFDITEM_FIELD__TMB_TBCR_TBCKEG
//    <name> TBCKEG </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x40042652) External clock active edge select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMB_TBCR >> 3) & 0x3), ((TMB_TBCR = (TMB_TBCR & ~(0x3UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMB_TBCR_TBCCLR  ----------------------------------
// SVD Line: 2880

//  <item> SFDITEM_FIELD__TMB_TBCR_TBCCLR
//    <name> TBCCLR </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40042652) TB register clear source select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMB_TBCR >> 5) & 0x3), ((TMB_TBCR = (TMB_TBCR & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TMB_TBCR  ------------------------------------
// SVD Line: 2859

//  <rtree> SFDITEM_REG__TMB_TBCR
//    <name> TBCR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042652) Timer control register </i>
//    <loc> ( (unsigned char)((TMB_TBCR >> 0) & 0xFF), ((TMB_TBCR = (TMB_TBCR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMB_TBCR_TBTCK </item>
//    <item> SFDITEM_FIELD__TMB_TBCR_TBCKEG </item>
//    <item> SFDITEM_FIELD__TMB_TBCR_TBCCLR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMB_TBIER  --------------------------------
// SVD Line: 2889

unsigned char TMB_TBIER __AT (0x40042653);



// ------------------------------  Field Item: TMB_TBIER_TBIMIEA  ---------------------------------
// SVD Line: 2898

//  <item> SFDITEM_FIELD__TMB_TBIER_TBIMIEA
//    <name> TBIMIEA </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042653) Input-capture/compare-match interrupt enable A </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBIER ) </loc>
//      <o.0..0> TBIMIEA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBIER_TBIMIEB  ---------------------------------
// SVD Line: 2904

//  <item> SFDITEM_FIELD__TMB_TBIER_TBIMIEB
//    <name> TBIMIEB </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042653) Input-capture/compare-match interrupt enable B </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBIER ) </loc>
//      <o.1..1> TBIMIEB
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBIER_TBUDIE  ----------------------------------
// SVD Line: 2910

//  <item> SFDITEM_FIELD__TMB_TBIER_TBUDIE
//    <name> TBUDIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042653) Underflow interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBIER ) </loc>
//      <o.2..2> TBUDIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBIER_TBOVIE  ----------------------------------
// SVD Line: 2916

//  <item> SFDITEM_FIELD__TMB_TBIER_TBOVIE
//    <name> TBOVIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042653) Overflow interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBIER ) </loc>
//      <o.3..3> TBOVIE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMB_TBIER  -----------------------------------
// SVD Line: 2889

//  <rtree> SFDITEM_REG__TMB_TBIER
//    <name> TBIER </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042653) Timer interrupt enable register </i>
//    <loc> ( (unsigned char)((TMB_TBIER >> 0) & 0xFF), ((TMB_TBIER = (TMB_TBIER & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMB_TBIER_TBIMIEA </item>
//    <item> SFDITEM_FIELD__TMB_TBIER_TBIMIEB </item>
//    <item> SFDITEM_FIELD__TMB_TBIER_TBUDIE </item>
//    <item> SFDITEM_FIELD__TMB_TBIER_TBOVIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TMB_TBSR  --------------------------------
// SVD Line: 2925

unsigned char TMB_TBSR __AT (0x40042654);



// -------------------------------  Field Item: TMB_TBSR_TBIMFA  ----------------------------------
// SVD Line: 2934

//  <item> SFDITEM_FIELD__TMB_TBSR_TBIMFA
//    <name> TBIMFA </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042654) Input-capture/compare-match flag A </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBSR ) </loc>
//      <o.0..0> TBIMFA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMB_TBSR_TBIMFB  ----------------------------------
// SVD Line: 2940

//  <item> SFDITEM_FIELD__TMB_TBSR_TBIMFB
//    <name> TBIMFB </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042654) Input-capture/compare-match flag B </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBSR ) </loc>
//      <o.1..1> TBIMFB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMB_TBSR_TBUDF  -----------------------------------
// SVD Line: 2946

//  <item> SFDITEM_FIELD__TMB_TBSR_TBUDF
//    <name> TBUDF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042654) Underflow flag </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBSR ) </loc>
//      <o.2..2> TBUDF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMB_TBSR_TBOVF  -----------------------------------
// SVD Line: 2952

//  <item> SFDITEM_FIELD__TMB_TBSR_TBOVF
//    <name> TBOVF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042654) Overflow flag </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBSR ) </loc>
//      <o.3..3> TBOVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMB_TBSR_TBDIRF  ----------------------------------
// SVD Line: 2958

//  <item> SFDITEM_FIELD__TMB_TBSR_TBDIRF
//    <name> TBDIRF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042654) Count direction flag </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBSR ) </loc>
//      <o.4..4> TBDIRF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMB_TBSR  ------------------------------------
// SVD Line: 2925

//  <rtree> SFDITEM_REG__TMB_TBSR
//    <name> TBSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042654) Timer status enable register </i>
//    <loc> ( (unsigned char)((TMB_TBSR >> 0) & 0xFF), ((TMB_TBSR = (TMB_TBSR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMB_TBSR_TBIMFA </item>
//    <item> SFDITEM_FIELD__TMB_TBSR_TBIMFB </item>
//    <item> SFDITEM_FIELD__TMB_TBSR_TBUDF </item>
//    <item> SFDITEM_FIELD__TMB_TBSR_TBOVF </item>
//    <item> SFDITEM_FIELD__TMB_TBSR_TBDIRF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMB_TBIOR  --------------------------------
// SVD Line: 2967

unsigned char TMB_TBIOR __AT (0x40042655);



// -------------------------------  Field Item: TMB_TBIOR_TBIOA  ----------------------------------
// SVD Line: 2976

//  <item> SFDITEM_FIELD__TMB_TBIOR_TBIOA
//    <name> TBIOA </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40042655) TBGRA mode select and control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMB_TBIOR >> 0) & 0x7), ((TMB_TBIOR = (TMB_TBIOR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBIOR_TBBUFA  ----------------------------------
// SVD Line: 2982

//  <item> SFDITEM_FIELD__TMB_TBIOR_TBBUFA
//    <name> TBBUFA </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042655) TBGRC register function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBIOR ) </loc>
//      <o.3..3> TBBUFA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMB_TBIOR_TBIOB  ----------------------------------
// SVD Line: 2988

//  <item> SFDITEM_FIELD__TMB_TBIOR_TBIOB
//    <name> TBIOB </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40042655) TBGRB mode select and control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMB_TBIOR >> 4) & 0x7), ((TMB_TBIOR = (TMB_TBIOR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TMB_TBIOR_TBBUFB  ----------------------------------
// SVD Line: 2994

//  <item> SFDITEM_FIELD__TMB_TBIOR_TBBUFB
//    <name> TBBUFB </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042655) TBGRD register function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMB_TBIOR ) </loc>
//      <o.7..7> TBBUFB
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMB_TBIOR  -----------------------------------
// SVD Line: 2967

//  <rtree> SFDITEM_REG__TMB_TBIOR
//    <name> TBIOR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042655) Timer I/O control register </i>
//    <loc> ( (unsigned char)((TMB_TBIOR >> 0) & 0xFF), ((TMB_TBIOR = (TMB_TBIOR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMB_TBIOR_TBIOA </item>
//    <item> SFDITEM_FIELD__TMB_TBIOR_TBBUFA </item>
//    <item> SFDITEM_FIELD__TMB_TBIOR_TBIOB </item>
//    <item> SFDITEM_FIELD__TMB_TBIOR_TBBUFB </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: TMB_TB  ---------------------------------
// SVD Line: 3002

unsigned short TMB_TB __AT (0x40042656);



// ----------------------------------  Register Item: TMB_TB  -------------------------------------
// SVD Line: 3002

//  <item> SFDITEM_REG__TMB_TB
//    <name> TB </name>
//    <i> [Bits 15..0] RW (@ 0x40042656) Timer counter register </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMB_TB >> 0) & 0xFFFFFFFF), ((TMB_TB = (TMB_TB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TMB_TBGR_TBGR_TBGRA  ---------------------------
// SVD Line: 3011

unsigned short TMB_TBGR_TBGR_TBGRA __AT (0x40042658);



// ---------------------------  Register Item: TMB_TBGR_TBGR_TBGRA  -------------------------------
// SVD Line: 3011

//  <item> SFDITEM_REG__TMB_TBGR_TBGR_TBGRA
//    <name> TBGRA </name>
//    <i> [Bits 15..0] RW (@ 0x40042658) Timer general register A </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMB_TBGR_TBGR_TBGRA >> 0) & 0xFFFFFFFF), ((TMB_TBGR_TBGR_TBGRA = (TMB_TBGR_TBGR_TBGRA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TMB_TBGR_TBGR_TBGRB  ---------------------------
// SVD Line: 3011

unsigned short TMB_TBGR_TBGR_TBGRB __AT (0x4004265A);



// ---------------------------  Register Item: TMB_TBGR_TBGR_TBGRB  -------------------------------
// SVD Line: 3011

//  <item> SFDITEM_REG__TMB_TBGR_TBGR_TBGRB
//    <name> TBGRB </name>
//    <i> [Bits 15..0] RW (@ 0x4004265A) Timer general register B </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMB_TBGR_TBGR_TBGRB >> 0) & 0xFFFFFFFF), ((TMB_TBGR_TBGR_TBGRB = (TMB_TBGR_TBGR_TBGRB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TMB_TBGR_TBGR_TBGRC  ---------------------------
// SVD Line: 3011

unsigned short TMB_TBGR_TBGR_TBGRC __AT (0x4004265C);



// ---------------------------  Register Item: TMB_TBGR_TBGR_TBGRC  -------------------------------
// SVD Line: 3011

//  <item> SFDITEM_REG__TMB_TBGR_TBGR_TBGRC
//    <name> TBGRC </name>
//    <i> [Bits 15..0] RW (@ 0x4004265C) Timer general register C </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMB_TBGR_TBGR_TBGRC >> 0) & 0xFFFFFFFF), ((TMB_TBGR_TBGR_TBGRC = (TMB_TBGR_TBGR_TBGRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TMB_TBGR_TBGR_TBGRD  ---------------------------
// SVD Line: 3011

unsigned short TMB_TBGR_TBGR_TBGRD __AT (0x4004265E);



// ---------------------------  Register Item: TMB_TBGR_TBGR_TBGRD  -------------------------------
// SVD Line: 3011

//  <item> SFDITEM_REG__TMB_TBGR_TBGR_TBGRD
//    <name> TBGRD </name>
//    <i> [Bits 15..0] RW (@ 0x4004265E) Timer general register D </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMB_TBGR_TBGR_TBGRD >> 0) & 0xFFFFFFFF), ((TMB_TBGR_TBGR_TBGRD = (TMB_TBGR_TBGR_TBGRD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: TMB  --------------------------------------
// SVD Line: 2723

//  <view> TMB
//    <name> TMB </name>
//    <item> SFDITEM_REG__TMB_TBMR </item>
//    <item> SFDITEM_REG__TMB_TBCNTC </item>
//    <item> SFDITEM_REG__TMB_TBCR </item>
//    <item> SFDITEM_REG__TMB_TBIER </item>
//    <item> SFDITEM_REG__TMB_TBSR </item>
//    <item> SFDITEM_REG__TMB_TBIOR </item>
//    <item> SFDITEM_REG__TMB_TB </item>
//    <item> SFDITEM_REG__TMB_TBGR_TBGR_TBGRA </item>
//    <item> SFDITEM_REG__TMB_TBGR_TBGR_TBGRB </item>
//    <item> SFDITEM_REG__TMB_TBGR_TBGR_TBGRC </item>
//    <item> SFDITEM_REG__TMB_TBGR_TBGR_TBGRD </item>
//  </view>
//  


// ------------------------------  Register Item Address: TMC_TC  ---------------------------------
// SVD Line: 3049

unsigned short TMC_TC __AT (0x40042C50);



// ----------------------------------  Register Item: TMC_TC  -------------------------------------
// SVD Line: 3049

//  <item> SFDITEM_REG__TMC_TC
//    <name> TC </name>
//    <i> [Bits 15..0] RW (@ 0x40042C50) Timer counter register </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMC_TC >> 0) & 0xFFFFFFFF), ((TMC_TC = (TMC_TC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TMC_TCBUF  --------------------------------
// SVD Line: 3058

unsigned short TMC_TCBUF __AT (0x40042C52);



// --------------------------------  Register Item: TMC_TCBUF  ------------------------------------
// SVD Line: 3058

//  <item> SFDITEM_REG__TMC_TCBUF
//    <name> TCBUF </name>
//    <i> [Bits 15..0] RW (@ 0x40042C52) Timer count buffer register </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMC_TCBUF >> 0) & 0xFFFFFFFF), ((TMC_TCBUF = (TMC_TCBUF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TMC_TCCR1  --------------------------------
// SVD Line: 3067

unsigned char TMC_TCCR1 __AT (0x40042C54);



// -------------------------------  Field Item: TMC_TCCR1_OVIE  -----------------------------------
// SVD Line: 3076

//  <item> SFDITEM_FIELD__TMC_TCCR1_OVIE
//    <name> OVIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042C54) Enables overflow interrupt </i>
//    <check> 
//      <loc> ( (unsigned char) TMC_TCCR1 ) </loc>
//      <o.0..0> OVIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMC_TCCR1_TM_TRIG  ---------------------------------
// SVD Line: 3082

//  <item> SFDITEM_FIELD__TMC_TCCR1_TM_TRIG
//    <name> TM_TRIG </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042C54) Selects a hardware start trigger from timer M </i>
//    <check> 
//      <loc> ( (unsigned char) TMC_TCCR1 ) </loc>
//      <o.1..1> TM_TRIG
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TMC_TCCR1_TRIG_MD_HW  --------------------------------
// SVD Line: 3088

//  <item> SFDITEM_FIELD__TMC_TCCR1_TRIG_MD_HW
//    <name> TRIG_MD_HW </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042C54) Selects operation in a count mode selected by a trigger from timer M </i>
//    <check> 
//      <loc> ( (unsigned char) TMC_TCCR1 ) </loc>
//      <o.2..2> TRIG_MD_HW
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TMC_TCCR1_TRIG_MD_SW  --------------------------------
// SVD Line: 3094

//  <item> SFDITEM_FIELD__TMC_TCCR1_TRIG_MD_SW
//    <name> TRIG_MD_SW </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042C54) Signal for enabling TC counter reset by software </i>
//    <check> 
//      <loc> ( (unsigned char) TMC_TCCR1 ) </loc>
//      <o.3..3> TRIG_MD_SW
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TMC_TCCR1_START_MD  ---------------------------------
// SVD Line: 3100

//  <item> SFDITEM_FIELD__TMC_TCCR1_START_MD
//    <name> START_MD </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042C54) Selects count start source </i>
//    <check> 
//      <loc> ( (unsigned char) TMC_TCCR1 ) </loc>
//      <o.4..4> START_MD
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TMC_TCCR1_TCK  -----------------------------------
// SVD Line: 3106

//  <item> SFDITEM_FIELD__TMC_TCCR1_TCK
//    <name> TCK </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40042C54) Selects count source </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMC_TCCR1 >> 5) & 0x7), ((TMC_TCCR1 = (TMC_TCCR1 & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TMC_TCCR1  -----------------------------------
// SVD Line: 3067

//  <rtree> SFDITEM_REG__TMC_TCCR1
//    <name> TCCR1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042C54) Timer control register 1 </i>
//    <loc> ( (unsigned char)((TMC_TCCR1 >> 0) & 0xFF), ((TMC_TCCR1 = (TMC_TCCR1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMC_TCCR1_OVIE </item>
//    <item> SFDITEM_FIELD__TMC_TCCR1_TM_TRIG </item>
//    <item> SFDITEM_FIELD__TMC_TCCR1_TRIG_MD_HW </item>
//    <item> SFDITEM_FIELD__TMC_TCCR1_TRIG_MD_SW </item>
//    <item> SFDITEM_FIELD__TMC_TCCR1_START_MD </item>
//    <item> SFDITEM_FIELD__TMC_TCCR1_TCK </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMC_TCCR2  --------------------------------
// SVD Line: 3115

unsigned char TMC_TCCR2 __AT (0x40042C55);



// ------------------------------  Field Item: TMC_TCCR2_TSTART  ----------------------------------
// SVD Line: 3124

//  <item> SFDITEM_FIELD__TMC_TCCR2_TSTART
//    <name> TSTART </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042C55) counter start </i>
//    <check> 
//      <loc> ( (unsigned char) TMC_TCCR2 ) </loc>
//      <o.0..0> TSTART
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TMC_TCCR2_CMP1_TCR  ---------------------------------
// SVD Line: 3130

//  <item> SFDITEM_FIELD__TMC_TCCR2_CMP1_TCR
//    <name> CMP1_TCR </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x40042C55) Selects operation to be performed when a trigger is generated from comparator 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMC_TCCR2 >> 1) & 0x3), ((TMC_TCCR2 = (TMC_TCCR2 & ~(0x3UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TMC_TCCR2  -----------------------------------
// SVD Line: 3115

//  <rtree> SFDITEM_REG__TMC_TCCR2
//    <name> TCCR2 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042C55) Timer control register 2 </i>
//    <loc> ( (unsigned char)((TMC_TCCR2 >> 0) & 0xFF), ((TMC_TCCR2 = (TMC_TCCR2 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMC_TCCR2_TSTART </item>
//    <item> SFDITEM_FIELD__TMC_TCCR2_CMP1_TCR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TMC_TCSR  --------------------------------
// SVD Line: 3139

unsigned char TMC_TCSR __AT (0x40042C56);



// -------------------------------  Field Item: TMC_TCSR_TCOVF  -----------------------------------
// SVD Line: 3148

//  <item> SFDITEM_FIELD__TMC_TCSR_TCOVF
//    <name> TCOVF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042C56) Overflow status of TC counter </i>
//    <check> 
//      <loc> ( (unsigned char) TMC_TCSR ) </loc>
//      <o.0..0> TCOVF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TMC_TCSR_TCSB  -----------------------------------
// SVD Line: 3154

//  <item> SFDITEM_FIELD__TMC_TCSR_TCSB
//    <name> TCSB </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042C56) Counter status flag </i>
//    <check> 
//      <loc> ( (unsigned char) TMC_TCSR ) </loc>
//      <o.1..1> TCSB
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMC_TCSR  ------------------------------------
// SVD Line: 3139

//  <rtree> SFDITEM_REG__TMC_TCSR
//    <name> TCSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042C56) Timer status register </i>
//    <loc> ( (unsigned char)((TMC_TCSR >> 0) & 0xFF), ((TMC_TCSR = (TMC_TCSR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMC_TCSR_TCOVF </item>
//    <item> SFDITEM_FIELD__TMC_TCSR_TCSB </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: TMC  --------------------------------------
// SVD Line: 3027

//  <view> TMC
//    <name> TMC </name>
//    <item> SFDITEM_REG__TMC_TC </item>
//    <item> SFDITEM_REG__TMC_TCBUF </item>
//    <item> SFDITEM_REG__TMC_TCCR1 </item>
//    <item> SFDITEM_REG__TMC_TCCR2 </item>
//    <item> SFDITEM_REG__TMC_TCSR </item>
//  </view>
//  


// ----------------------------  Register Item Address: TMM_TMELC  --------------------------------
// SVD Line: 3195

unsigned char TMM_TMELC __AT (0x40042A60);



// ------------------------------  Field Item: TMM_TMELC_ELCICE0  ---------------------------------
// SVD Line: 3204

//  <item> SFDITEM_FIELD__TMM_TMELC_ELCICE0
//    <name> ELCICE0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A60) ELC event input 0 select for timer M input capture D0 </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMELC ) </loc>
//      <o.0..0> ELCICE0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMELC_ELCOBE0  ---------------------------------
// SVD Line: 3210

//  <item> SFDITEM_FIELD__TMM_TMELC_ELCOBE0
//    <name> ELCOBE0 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042A60) ELC event input 0 enable for timer M pulse output forced cutoff </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMELC ) </loc>
//      <o.1..1> ELCOBE0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMELC_ELCICE1  ---------------------------------
// SVD Line: 3216

//  <item> SFDITEM_FIELD__TMM_TMELC_ELCICE1
//    <name> ELCICE1 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042A60) ELC event input 1 select for timer M input capture D1 </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMELC ) </loc>
//      <o.4..4> ELCICE1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMELC_ELCOBE1  ---------------------------------
// SVD Line: 3222

//  <item> SFDITEM_FIELD__TMM_TMELC_ELCOBE1
//    <name> ELCOBE1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042A60) ELC event input 1 enable for timer M pulse output forced cutoff </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMELC ) </loc>
//      <o.5..5> ELCOBE1
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMM_TMELC  -----------------------------------
// SVD Line: 3195

//  <rtree> SFDITEM_REG__TMM_TMELC
//    <name> TMELC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A60) Timer ELC register </i>
//    <loc> ( (unsigned char)((TMM_TMELC >> 0) & 0xFF), ((TMM_TMELC = (TMM_TMELC & ~(0x33UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x33) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMELC_ELCICE0 </item>
//    <item> SFDITEM_FIELD__TMM_TMELC_ELCOBE0 </item>
//    <item> SFDITEM_FIELD__TMM_TMELC_ELCICE1 </item>
//    <item> SFDITEM_FIELD__TMM_TMELC_ELCOBE1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMSTR  --------------------------------
// SVD Line: 3230

unsigned char TMM_TMSTR __AT (0x40042A63);



// ------------------------------  Field Item: TMM_TMSTR_TSTART0  ---------------------------------
// SVD Line: 3239

//  <item> SFDITEM_FIELD__TMM_TMSTR_TSTART0
//    <name> TSTART0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A63) TM0 count start flag </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSTR ) </loc>
//      <o.0..0> TSTART0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMSTR_TSTART1  ---------------------------------
// SVD Line: 3245

//  <item> SFDITEM_FIELD__TMM_TMSTR_TSTART1
//    <name> TSTART1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042A63) TM1 count start flag </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSTR ) </loc>
//      <o.1..1> TSTART1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMSTR_CSEL0  ----------------------------------
// SVD Line: 3251

//  <item> SFDITEM_FIELD__TMM_TMSTR_CSEL0
//    <name> CSEL0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042A63) TM0 count operation select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSTR ) </loc>
//      <o.2..2> CSEL0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMSTR_CSEL1  ----------------------------------
// SVD Line: 3257

//  <item> SFDITEM_FIELD__TMM_TMSTR_CSEL1
//    <name> CSEL1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042A63) TM1 count operation select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSTR ) </loc>
//      <o.3..3> CSEL1
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMM_TMSTR  -----------------------------------
// SVD Line: 3230

//  <rtree> SFDITEM_REG__TMM_TMSTR
//    <name> TMSTR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A63) Timer start register </i>
//    <loc> ( (unsigned char)((TMM_TMSTR >> 0) & 0xFF), ((TMM_TMSTR = (TMM_TMSTR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMSTR_TSTART0 </item>
//    <item> SFDITEM_FIELD__TMM_TMSTR_TSTART1 </item>
//    <item> SFDITEM_FIELD__TMM_TMSTR_CSEL0 </item>
//    <item> SFDITEM_FIELD__TMM_TMSTR_CSEL1 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TMM_TMMR  --------------------------------
// SVD Line: 3265

unsigned char TMM_TMMR __AT (0x40042A64);



// -------------------------------  Field Item: TMM_TMMR_TMSYNC  ----------------------------------
// SVD Line: 3274

//  <item> SFDITEM_FIELD__TMM_TMMR_TMSYNC
//    <name> TMSYNC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A64) TMs synchronous </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMMR ) </loc>
//      <o.0..0> TMSYNC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMMR_TMBFC0  ----------------------------------
// SVD Line: 3280

//  <item> SFDITEM_FIELD__TMM_TMMR_TMBFC0
//    <name> TMBFC0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042A64) TMGRC0 register function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMMR ) </loc>
//      <o.4..4> TMBFC0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMMR_TMBFD0  ----------------------------------
// SVD Line: 3286

//  <item> SFDITEM_FIELD__TMM_TMMR_TMBFD0
//    <name> TMBFD0 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042A64) TMGRD0 register function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMMR ) </loc>
//      <o.5..5> TMBFD0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMMR_TMBFC1  ----------------------------------
// SVD Line: 3292

//  <item> SFDITEM_FIELD__TMM_TMMR_TMBFC1
//    <name> TMBFC1 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40042A64) TMGRC1 register function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMMR ) </loc>
//      <o.6..6> TMBFC1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMMR_TMBFD1  ----------------------------------
// SVD Line: 3298

//  <item> SFDITEM_FIELD__TMM_TMMR_TMBFD1
//    <name> TMBFD1 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042A64) TMGRD1 register function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMMR ) </loc>
//      <o.7..7> TMBFD1
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMM_TMMR  ------------------------------------
// SVD Line: 3265

//  <rtree> SFDITEM_REG__TMM_TMMR
//    <name> TMMR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A64) Timer mode register </i>
//    <loc> ( (unsigned char)((TMM_TMMR >> 0) & 0xFF), ((TMM_TMMR = (TMM_TMMR & ~(0xF1UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMMR_TMSYNC </item>
//    <item> SFDITEM_FIELD__TMM_TMMR_TMBFC0 </item>
//    <item> SFDITEM_FIELD__TMM_TMMR_TMBFD0 </item>
//    <item> SFDITEM_FIELD__TMM_TMMR_TMBFC1 </item>
//    <item> SFDITEM_FIELD__TMM_TMMR_TMBFD1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMPMR  --------------------------------
// SVD Line: 3307

unsigned char TMM_TMPMR __AT (0x40042A65);



// ------------------------------  Field Item: TMM_TMPMR_TMPWMB0  ---------------------------------
// SVD Line: 3316

//  <item> SFDITEM_FIELD__TMM_TMPMR_TMPWMB0
//    <name> TMPWMB0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A65) PWM function of TMIOB0 select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMPMR ) </loc>
//      <o.0..0> TMPWMB0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMPMR_TMPWMC0  ---------------------------------
// SVD Line: 3322

//  <item> SFDITEM_FIELD__TMM_TMPMR_TMPWMC0
//    <name> TMPWMC0 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042A65) PWM function of TMIOC0 select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMPMR ) </loc>
//      <o.1..1> TMPWMC0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMPMR_TMPWMD0  ---------------------------------
// SVD Line: 3328

//  <item> SFDITEM_FIELD__TMM_TMPMR_TMPWMD0
//    <name> TMPWMD0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042A65) PWM function of TMIOD0 select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMPMR ) </loc>
//      <o.2..2> TMPWMD0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMPMR_TMPWMB1  ---------------------------------
// SVD Line: 3334

//  <item> SFDITEM_FIELD__TMM_TMPMR_TMPWMB1
//    <name> TMPWMB1 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042A65) PWM function of TMIOB1 select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMPMR ) </loc>
//      <o.4..4> TMPWMB1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMPMR_TMPWMC1  ---------------------------------
// SVD Line: 3340

//  <item> SFDITEM_FIELD__TMM_TMPMR_TMPWMC1
//    <name> TMPWMC1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042A65) PWM function of TMIOC1 select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMPMR ) </loc>
//      <o.5..5> TMPWMC1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMPMR_TMPWMD1  ---------------------------------
// SVD Line: 3346

//  <item> SFDITEM_FIELD__TMM_TMPMR_TMPWMD1
//    <name> TMPWMD1 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40042A65) PWM function of TMIOD1 select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMPMR ) </loc>
//      <o.6..6> TMPWMD1
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMM_TMPMR  -----------------------------------
// SVD Line: 3307

//  <rtree> SFDITEM_REG__TMM_TMPMR
//    <name> TMPMR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A65) PWM function select register </i>
//    <loc> ( (unsigned char)((TMM_TMPMR >> 0) & 0xFF), ((TMM_TMPMR = (TMM_TMPMR & ~(0x77UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x77) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMPMR_TMPWMB0 </item>
//    <item> SFDITEM_FIELD__TMM_TMPMR_TMPWMC0 </item>
//    <item> SFDITEM_FIELD__TMM_TMPMR_TMPWMD0 </item>
//    <item> SFDITEM_FIELD__TMM_TMPMR_TMPWMB1 </item>
//    <item> SFDITEM_FIELD__TMM_TMPMR_TMPWMC1 </item>
//    <item> SFDITEM_FIELD__TMM_TMPMR_TMPWMD1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMFCR  --------------------------------
// SVD Line: 3355

unsigned char TMM_TMFCR __AT (0x40042A66);



// --------------------------------  Field Item: TMM_TMFCR_CMD  -----------------------------------
// SVD Line: 3364

//  <item> SFDITEM_FIELD__TMM_TMFCR_CMD
//    <name> CMD </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40042A66) Combination mode select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMFCR >> 0) & 0x3), ((TMM_TMFCR = (TMM_TMFCR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMFCR_OLS0  -----------------------------------
// SVD Line: 3370

//  <item> SFDITEM_FIELD__TMM_TMFCR_OLS0
//    <name> OLS0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042A66) Phase output level select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMFCR ) </loc>
//      <o.2..2> OLS0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMFCR_OLS1  -----------------------------------
// SVD Line: 3376

//  <item> SFDITEM_FIELD__TMM_TMFCR_OLS1
//    <name> OLS1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042A66) Counter-Phase output level select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMFCR ) </loc>
//      <o.3..3> OLS1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMFCR_STCLK  ----------------------------------
// SVD Line: 3382

//  <item> SFDITEM_FIELD__TMM_TMFCR_STCLK
//    <name> STCLK </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40042A66) External clock input select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMFCR ) </loc>
//      <o.6..6> STCLK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMFCR_PWM3  -----------------------------------
// SVD Line: 3388

//  <item> SFDITEM_FIELD__TMM_TMFCR_PWM3
//    <name> PWM3 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042A66) PWM3 mode select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMFCR ) </loc>
//      <o.7..7> PWM3
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMM_TMFCR  -----------------------------------
// SVD Line: 3355

//  <rtree> SFDITEM_REG__TMM_TMFCR
//    <name> TMFCR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A66) Timer function control register </i>
//    <loc> ( (unsigned char)((TMM_TMFCR >> 0) & 0xFF), ((TMM_TMFCR = (TMM_TMFCR & ~(0xCFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMFCR_CMD </item>
//    <item> SFDITEM_FIELD__TMM_TMFCR_OLS0 </item>
//    <item> SFDITEM_FIELD__TMM_TMFCR_OLS1 </item>
//    <item> SFDITEM_FIELD__TMM_TMFCR_STCLK </item>
//    <item> SFDITEM_FIELD__TMM_TMFCR_PWM3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMOER1  -------------------------------
// SVD Line: 3397

unsigned char TMM_TMOER1 __AT (0x40042A67);



// -------------------------------  Field Item: TMM_TMOER1_EA0  -----------------------------------
// SVD Line: 3406

//  <item> SFDITEM_FIELD__TMM_TMOER1_EA0
//    <name> EA0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A67) TMIOA0 output disable </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOER1 ) </loc>
//      <o.0..0> EA0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOER1_EB0  -----------------------------------
// SVD Line: 3412

//  <item> SFDITEM_FIELD__TMM_TMOER1_EB0
//    <name> EB0 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042A67) TMIOB0 output disable </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOER1 ) </loc>
//      <o.1..1> EB0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOER1_EC0  -----------------------------------
// SVD Line: 3418

//  <item> SFDITEM_FIELD__TMM_TMOER1_EC0
//    <name> EC0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042A67) TMIOC0 output disable </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOER1 ) </loc>
//      <o.2..2> EC0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOER1_ED0  -----------------------------------
// SVD Line: 3424

//  <item> SFDITEM_FIELD__TMM_TMOER1_ED0
//    <name> ED0 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042A67) TMIOD0 output disable </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOER1 ) </loc>
//      <o.3..3> ED0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOER1_EA1  -----------------------------------
// SVD Line: 3430

//  <item> SFDITEM_FIELD__TMM_TMOER1_EA1
//    <name> EA1 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042A67) TMIOA1 output disable </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOER1 ) </loc>
//      <o.4..4> EA1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOER1_EB1  -----------------------------------
// SVD Line: 3436

//  <item> SFDITEM_FIELD__TMM_TMOER1_EB1
//    <name> EB1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042A67) TMIOB1 output disable </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOER1 ) </loc>
//      <o.5..5> EB1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOER1_EC1  -----------------------------------
// SVD Line: 3442

//  <item> SFDITEM_FIELD__TMM_TMOER1_EC1
//    <name> EC1 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40042A67) TMIOC1 output disable </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOER1 ) </loc>
//      <o.6..6> EC1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOER1_ED1  -----------------------------------
// SVD Line: 3448

//  <item> SFDITEM_FIELD__TMM_TMOER1_ED1
//    <name> ED1 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042A67) TMIOD1 output disable </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOER1 ) </loc>
//      <o.7..7> ED1
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TMM_TMOER1  -----------------------------------
// SVD Line: 3397

//  <rtree> SFDITEM_REG__TMM_TMOER1
//    <name> TMOER1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A67) Timer output master enable register 1 </i>
//    <loc> ( (unsigned char)((TMM_TMOER1 >> 0) & 0xFF), ((TMM_TMOER1 = (TMM_TMOER1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMOER1_EA0 </item>
//    <item> SFDITEM_FIELD__TMM_TMOER1_EB0 </item>
//    <item> SFDITEM_FIELD__TMM_TMOER1_EC0 </item>
//    <item> SFDITEM_FIELD__TMM_TMOER1_ED0 </item>
//    <item> SFDITEM_FIELD__TMM_TMOER1_EA1 </item>
//    <item> SFDITEM_FIELD__TMM_TMOER1_EB1 </item>
//    <item> SFDITEM_FIELD__TMM_TMOER1_EC1 </item>
//    <item> SFDITEM_FIELD__TMM_TMOER1_ED1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMOER2  -------------------------------
// SVD Line: 3457

unsigned char TMM_TMOER2 __AT (0x40042A68);



// -----------------------------  Field Item: TMM_TMOER2_TMSHUTS  ---------------------------------
// SVD Line: 3466

//  <item> SFDITEM_FIELD__TMM_TMOER2_TMSHUTS
//    <name> TMSHUTS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A68) Forced cutoff flag </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOER2 ) </loc>
//      <o.0..0> TMSHUTS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMOER2_TMPTO  ----------------------------------
// SVD Line: 3472

//  <item> SFDITEM_FIELD__TMM_TMOER2_TMPTO
//    <name> TMPTO </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042A68) INTP0 pin of pulse output forced cutoff signal input enabled </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOER2 ) </loc>
//      <o.7..7> TMPTO
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TMM_TMOER2  -----------------------------------
// SVD Line: 3457

//  <rtree> SFDITEM_REG__TMM_TMOER2
//    <name> TMOER2 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A68) Timer output master enable register 2 </i>
//    <loc> ( (unsigned char)((TMM_TMOER2 >> 0) & 0xFF), ((TMM_TMOER2 = (TMM_TMOER2 & ~(0x81UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x81) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMOER2_TMSHUTS </item>
//    <item> SFDITEM_FIELD__TMM_TMOER2_TMPTO </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMOCR  --------------------------------
// SVD Line: 3481

unsigned char TMM_TMOCR __AT (0x40042A69);



// -------------------------------  Field Item: TMM_TMOCR_TOA0  -----------------------------------
// SVD Line: 3490

//  <item> SFDITEM_FIELD__TMM_TMOCR_TOA0
//    <name> TOA0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A69) TMIOA0 initial output level select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOCR ) </loc>
//      <o.0..0> TOA0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOCR_TOB0  -----------------------------------
// SVD Line: 3496

//  <item> SFDITEM_FIELD__TMM_TMOCR_TOB0
//    <name> TOB0 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042A69) TMIOB0 initial output level select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOCR ) </loc>
//      <o.1..1> TOB0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOCR_TOC0  -----------------------------------
// SVD Line: 3502

//  <item> SFDITEM_FIELD__TMM_TMOCR_TOC0
//    <name> TOC0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042A69) TMIOC0 initial output level select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOCR ) </loc>
//      <o.2..2> TOC0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOCR_TOD0  -----------------------------------
// SVD Line: 3508

//  <item> SFDITEM_FIELD__TMM_TMOCR_TOD0
//    <name> TOD0 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042A69) TMIOD0 initial output level select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOCR ) </loc>
//      <o.3..3> TOD0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOCR_TOA1  -----------------------------------
// SVD Line: 3514

//  <item> SFDITEM_FIELD__TMM_TMOCR_TOA1
//    <name> TOA1 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042A69) TMIOA1 initial output level select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOCR ) </loc>
//      <o.4..4> TOA1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOCR_TOB1  -----------------------------------
// SVD Line: 3520

//  <item> SFDITEM_FIELD__TMM_TMOCR_TOB1
//    <name> TOB1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042A69) TMIOB1 initial output level select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOCR ) </loc>
//      <o.5..5> TOB1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOCR_TOC1  -----------------------------------
// SVD Line: 3526

//  <item> SFDITEM_FIELD__TMM_TMOCR_TOC1
//    <name> TOC1 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40042A69) TMIOC1 initial output level select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOCR ) </loc>
//      <o.6..6> TOC1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMOCR_TOD1  -----------------------------------
// SVD Line: 3532

//  <item> SFDITEM_FIELD__TMM_TMOCR_TOD1
//    <name> TOD1 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042A69) TMIOD1 initial output level select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMOCR ) </loc>
//      <o.7..7> TOD1
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMM_TMOCR  -----------------------------------
// SVD Line: 3481

//  <rtree> SFDITEM_REG__TMM_TMOCR
//    <name> TMOCR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A69) Timer output control register </i>
//    <loc> ( (unsigned char)((TMM_TMOCR >> 0) & 0xFF), ((TMM_TMOCR = (TMM_TMOCR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMOCR_TOA0 </item>
//    <item> SFDITEM_FIELD__TMM_TMOCR_TOB0 </item>
//    <item> SFDITEM_FIELD__TMM_TMOCR_TOC0 </item>
//    <item> SFDITEM_FIELD__TMM_TMOCR_TOD0 </item>
//    <item> SFDITEM_FIELD__TMM_TMOCR_TOA1 </item>
//    <item> SFDITEM_FIELD__TMM_TMOCR_TOB1 </item>
//    <item> SFDITEM_FIELD__TMM_TMOCR_TOC1 </item>
//    <item> SFDITEM_FIELD__TMM_TMOCR_TOD1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMDF0  --------------------------------
// SVD Line: 3541

unsigned char TMM_TMDF0 __AT (0x40042A6A);



// --------------------------------  Field Item: TMM_TMDF0_DFA  -----------------------------------
// SVD Line: 3550

//  <item> SFDITEM_FIELD__TMM_TMDF0_DFA
//    <name> DFA </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A6A) TMIOAi pin digital filter function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMDF0 ) </loc>
//      <o.0..0> DFA
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TMM_TMDF0_DFB  -----------------------------------
// SVD Line: 3556

//  <item> SFDITEM_FIELD__TMM_TMDF0_DFB
//    <name> DFB </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042A6A) TMIOBi pin digital filter function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMDF0 ) </loc>
//      <o.1..1> DFB
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TMM_TMDF0_DFC  -----------------------------------
// SVD Line: 3562

//  <item> SFDITEM_FIELD__TMM_TMDF0_DFC
//    <name> DFC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042A6A) TMIOCi pin digital filter function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMDF0 ) </loc>
//      <o.2..2> DFC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TMM_TMDF0_DFD  -----------------------------------
// SVD Line: 3568

//  <item> SFDITEM_FIELD__TMM_TMDF0_DFD
//    <name> DFD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042A6A) TMIODi pin digital filter function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMDF0 ) </loc>
//      <o.3..3> DFD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMDF0_DFCK  -----------------------------------
// SVD Line: 3574

//  <item> SFDITEM_FIELD__TMM_TMDF0_DFCK
//    <name> DFCK </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40042A6A) Clock select for digital filter function </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMDF0 >> 6) & 0x3), ((TMM_TMDF0 = (TMM_TMDF0 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TMM_TMDF0  -----------------------------------
// SVD Line: 3541

//  <rtree> SFDITEM_REG__TMM_TMDF0
//    <name> TMDF0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A6A) Digital filter function select register 0 </i>
//    <loc> ( (unsigned char)((TMM_TMDF0 >> 0) & 0xFF), ((TMM_TMDF0 = (TMM_TMDF0 & ~(0xCFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMDF0_DFA </item>
//    <item> SFDITEM_FIELD__TMM_TMDF0_DFB </item>
//    <item> SFDITEM_FIELD__TMM_TMDF0_DFC </item>
//    <item> SFDITEM_FIELD__TMM_TMDF0_DFD </item>
//    <item> SFDITEM_FIELD__TMM_TMDF0_DFCK </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMDF1  --------------------------------
// SVD Line: 3583

unsigned char TMM_TMDF1 __AT (0x40042A6B);



// --------------------------------  Field Item: TMM_TMDF1_DFA  -----------------------------------
// SVD Line: 3550

//  <item> SFDITEM_FIELD__TMM_TMDF1_DFA
//    <name> DFA </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A6B) TMIOAi pin digital filter function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMDF1 ) </loc>
//      <o.0..0> DFA
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TMM_TMDF1_DFB  -----------------------------------
// SVD Line: 3556

//  <item> SFDITEM_FIELD__TMM_TMDF1_DFB
//    <name> DFB </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042A6B) TMIOBi pin digital filter function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMDF1 ) </loc>
//      <o.1..1> DFB
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TMM_TMDF1_DFC  -----------------------------------
// SVD Line: 3562

//  <item> SFDITEM_FIELD__TMM_TMDF1_DFC
//    <name> DFC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042A6B) TMIOCi pin digital filter function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMDF1 ) </loc>
//      <o.2..2> DFC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TMM_TMDF1_DFD  -----------------------------------
// SVD Line: 3568

//  <item> SFDITEM_FIELD__TMM_TMDF1_DFD
//    <name> DFD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042A6B) TMIODi pin digital filter function select </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMDF1 ) </loc>
//      <o.3..3> DFD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMDF1_DFCK  -----------------------------------
// SVD Line: 3574

//  <item> SFDITEM_FIELD__TMM_TMDF1_DFCK
//    <name> DFCK </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40042A6B) Clock select for digital filter function </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMDF1 >> 6) & 0x3), ((TMM_TMDF1 = (TMM_TMDF1 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TMM_TMDF1  -----------------------------------
// SVD Line: 3583

//  <rtree> SFDITEM_REG__TMM_TMDF1
//    <name> TMDF1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A6B) Digital filter function select register 1 </i>
//    <loc> ( (unsigned char)((TMM_TMDF1 >> 0) & 0xFF), ((TMM_TMDF1 = (TMM_TMDF1 & ~(0xCFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMDF1_DFA </item>
//    <item> SFDITEM_FIELD__TMM_TMDF1_DFB </item>
//    <item> SFDITEM_FIELD__TMM_TMDF1_DFC </item>
//    <item> SFDITEM_FIELD__TMM_TMDF1_DFD </item>
//    <item> SFDITEM_FIELD__TMM_TMDF1_DFCK </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMCR0  --------------------------------
// SVD Line: 3589

unsigned char TMM_TMCR0 __AT (0x40042A70);



// --------------------------------  Field Item: TMM_TMCR0_TCK  -----------------------------------
// SVD Line: 3598

//  <item> SFDITEM_FIELD__TMM_TMCR0_TCK
//    <name> TCK </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40042A70) Count source select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMCR0 >> 0) & 0x7), ((TMM_TMCR0 = (TMM_TMCR0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMCR0_CKEG  -----------------------------------
// SVD Line: 3604

//  <item> SFDITEM_FIELD__TMM_TMCR0_CKEG
//    <name> CKEG </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x40042A70) External clock edge select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMCR0 >> 3) & 0x3), ((TMM_TMCR0 = (TMM_TMCR0 & ~(0x3UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMCR0_CCLR  -----------------------------------
// SVD Line: 3610

//  <item> SFDITEM_FIELD__TMM_TMCR0_CCLR
//    <name> CCLR </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40042A70) TMi counter clear select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMCR0 >> 5) & 0x7), ((TMM_TMCR0 = (TMM_TMCR0 & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TMM_TMCR0  -----------------------------------
// SVD Line: 3589

//  <rtree> SFDITEM_REG__TMM_TMCR0
//    <name> TMCR0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A70) Timer control register 0 </i>
//    <loc> ( (unsigned char)((TMM_TMCR0 >> 0) & 0xFF), ((TMM_TMCR0 = (TMM_TMCR0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMCR0_TCK </item>
//    <item> SFDITEM_FIELD__TMM_TMCR0_CKEG </item>
//    <item> SFDITEM_FIELD__TMM_TMCR0_CCLR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMCR1  --------------------------------
// SVD Line: 3619

unsigned char TMM_TMCR1 __AT (0x40042A80);



// --------------------------------  Field Item: TMM_TMCR1_TCK  -----------------------------------
// SVD Line: 3598

//  <item> SFDITEM_FIELD__TMM_TMCR1_TCK
//    <name> TCK </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40042A80) Count source select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMCR1 >> 0) & 0x7), ((TMM_TMCR1 = (TMM_TMCR1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMCR1_CKEG  -----------------------------------
// SVD Line: 3604

//  <item> SFDITEM_FIELD__TMM_TMCR1_CKEG
//    <name> CKEG </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x40042A80) External clock edge select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMCR1 >> 3) & 0x3), ((TMM_TMCR1 = (TMM_TMCR1 & ~(0x3UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMCR1_CCLR  -----------------------------------
// SVD Line: 3610

//  <item> SFDITEM_FIELD__TMM_TMCR1_CCLR
//    <name> CCLR </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40042A80) TMi counter clear select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMCR1 >> 5) & 0x7), ((TMM_TMCR1 = (TMM_TMCR1 & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TMM_TMCR1  -----------------------------------
// SVD Line: 3619

//  <rtree> SFDITEM_REG__TMM_TMCR1
//    <name> TMCR1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A80) Timer control register 1 </i>
//    <loc> ( (unsigned char)((TMM_TMCR1 >> 0) & 0xFF), ((TMM_TMCR1 = (TMM_TMCR1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMCR1_TCK </item>
//    <item> SFDITEM_FIELD__TMM_TMCR1_CKEG </item>
//    <item> SFDITEM_FIELD__TMM_TMCR1_CCLR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TMM_TMIORA0  -------------------------------
// SVD Line: 3625

unsigned char TMM_TMIORA0 __AT (0x40042A71);



// -------------------------------  Field Item: TMM_TMIORA0_IOA  ----------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__TMM_TMIORA0_IOA
//    <name> IOA </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40042A71) TMGRA mode control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMIORA0 >> 0) & 0x7), ((TMM_TMIORA0 = (TMM_TMIORA0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMIORA0_IOB  ----------------------------------
// SVD Line: 3640

//  <item> SFDITEM_FIELD__TMM_TMIORA0_IOB
//    <name> IOB </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40042A71) TMGRB mode control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMIORA0 >> 4) & 0x7), ((TMM_TMIORA0 = (TMM_TMIORA0 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TMM_TMIORA0  ----------------------------------
// SVD Line: 3625

//  <rtree> SFDITEM_REG__TMM_TMIORA0
//    <name> TMIORA0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A71) Timer I/O control register A0 </i>
//    <loc> ( (unsigned char)((TMM_TMIORA0 >> 0) & 0xFF), ((TMM_TMIORA0 = (TMM_TMIORA0 & ~(0x77UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x77) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMIORA0_IOA </item>
//    <item> SFDITEM_FIELD__TMM_TMIORA0_IOB </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TMM_TMIORA1  -------------------------------
// SVD Line: 3649

unsigned char TMM_TMIORA1 __AT (0x40042A81);



// -------------------------------  Field Item: TMM_TMIORA1_IOA  ----------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__TMM_TMIORA1_IOA
//    <name> IOA </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40042A81) TMGRA mode control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMIORA1 >> 0) & 0x7), ((TMM_TMIORA1 = (TMM_TMIORA1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMIORA1_IOB  ----------------------------------
// SVD Line: 3640

//  <item> SFDITEM_FIELD__TMM_TMIORA1_IOB
//    <name> IOB </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40042A81) TMGRB mode control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMIORA1 >> 4) & 0x7), ((TMM_TMIORA1 = (TMM_TMIORA1 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TMM_TMIORA1  ----------------------------------
// SVD Line: 3649

//  <rtree> SFDITEM_REG__TMM_TMIORA1
//    <name> TMIORA1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A81) Timer I/O control register A1 </i>
//    <loc> ( (unsigned char)((TMM_TMIORA1 >> 0) & 0xFF), ((TMM_TMIORA1 = (TMM_TMIORA1 & ~(0x77UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x77) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMIORA1_IOA </item>
//    <item> SFDITEM_FIELD__TMM_TMIORA1_IOB </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TMM_TMIORC0  -------------------------------
// SVD Line: 3655

unsigned char TMM_TMIORC0 __AT (0x40042A72);



// -------------------------------  Field Item: TMM_TMIORC0_IOC  ----------------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__TMM_TMIORC0_IOC
//    <name> IOC </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042A72) TMGRC mode control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMIORC0 >> 0) & 0xF), ((TMM_TMIORC0 = (TMM_TMIORC0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMIORC0_IOD  ----------------------------------
// SVD Line: 3670

//  <item> SFDITEM_FIELD__TMM_TMIORC0_IOD
//    <name> IOD </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40042A72) TMGRD mode control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMIORC0 >> 4) & 0xF), ((TMM_TMIORC0 = (TMM_TMIORC0 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TMM_TMIORC0  ----------------------------------
// SVD Line: 3655

//  <rtree> SFDITEM_REG__TMM_TMIORC0
//    <name> TMIORC0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A72) Timer I/O control register C0 </i>
//    <loc> ( (unsigned char)((TMM_TMIORC0 >> 0) & 0xFF), ((TMM_TMIORC0 = (TMM_TMIORC0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMIORC0_IOC </item>
//    <item> SFDITEM_FIELD__TMM_TMIORC0_IOD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TMM_TMIORC1  -------------------------------
// SVD Line: 3679

unsigned char TMM_TMIORC1 __AT (0x40042A82);



// -------------------------------  Field Item: TMM_TMIORC1_IOC  ----------------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__TMM_TMIORC1_IOC
//    <name> IOC </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042A82) TMGRC mode control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMIORC1 >> 0) & 0xF), ((TMM_TMIORC1 = (TMM_TMIORC1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMIORC1_IOD  ----------------------------------
// SVD Line: 3670

//  <item> SFDITEM_FIELD__TMM_TMIORC1_IOD
//    <name> IOD </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40042A82) TMGRD mode control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_TMIORC1 >> 4) & 0xF), ((TMM_TMIORC1 = (TMM_TMIORC1 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TMM_TMIORC1  ----------------------------------
// SVD Line: 3679

//  <rtree> SFDITEM_REG__TMM_TMIORC1
//    <name> TMIORC1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A82) Timer I/O control register C1 </i>
//    <loc> ( (unsigned char)((TMM_TMIORC1 >> 0) & 0xFF), ((TMM_TMIORC1 = (TMM_TMIORC1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMIORC1_IOC </item>
//    <item> SFDITEM_FIELD__TMM_TMIORC1_IOD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMSR0  --------------------------------
// SVD Line: 3685

unsigned char TMM_TMSR0 __AT (0x40042A73);



// -------------------------------  Field Item: TMM_TMSR0_IMFA  -----------------------------------
// SVD Line: 3694

//  <item> SFDITEM_FIELD__TMM_TMSR0_IMFA
//    <name> IMFA </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A73) Input capture/compare match flag A </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSR0 ) </loc>
//      <o.0..0> IMFA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMSR0_IMFB  -----------------------------------
// SVD Line: 3700

//  <item> SFDITEM_FIELD__TMM_TMSR0_IMFB
//    <name> IMFB </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042A73) Input capture/compare match flag B </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSR0 ) </loc>
//      <o.1..1> IMFB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMSR0_IMFC  -----------------------------------
// SVD Line: 3706

//  <item> SFDITEM_FIELD__TMM_TMSR0_IMFC
//    <name> IMFC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042A73) Input capture/compare match flag C </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSR0 ) </loc>
//      <o.2..2> IMFC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMSR0_IMFD  -----------------------------------
// SVD Line: 3712

//  <item> SFDITEM_FIELD__TMM_TMSR0_IMFD
//    <name> IMFD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042A73) Input capture/compare match flag D </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSR0 ) </loc>
//      <o.3..3> IMFD
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TMM_TMSR0_OVF  -----------------------------------
// SVD Line: 3718

//  <item> SFDITEM_FIELD__TMM_TMSR0_OVF
//    <name> OVF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042A73) Overflow flag </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSR0 ) </loc>
//      <o.4..4> OVF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMM_TMSR0  -----------------------------------
// SVD Line: 3685

//  <rtree> SFDITEM_REG__TMM_TMSR0
//    <name> TMSR0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A73) Timer status register 0 </i>
//    <loc> ( (unsigned char)((TMM_TMSR0 >> 0) & 0xFF), ((TMM_TMSR0 = (TMM_TMSR0 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMSR0_IMFA </item>
//    <item> SFDITEM_FIELD__TMM_TMSR0_IMFB </item>
//    <item> SFDITEM_FIELD__TMM_TMSR0_IMFC </item>
//    <item> SFDITEM_FIELD__TMM_TMSR0_IMFD </item>
//    <item> SFDITEM_FIELD__TMM_TMSR0_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMSR1  --------------------------------
// SVD Line: 3727

unsigned char TMM_TMSR1 __AT (0x40042A83);



// -------------------------------  Field Item: TMM_TMSR1_IMFA  -----------------------------------
// SVD Line: 3694

//  <item> SFDITEM_FIELD__TMM_TMSR1_IMFA
//    <name> IMFA </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A83) Input capture/compare match flag A </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSR1 ) </loc>
//      <o.0..0> IMFA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMSR1_IMFB  -----------------------------------
// SVD Line: 3700

//  <item> SFDITEM_FIELD__TMM_TMSR1_IMFB
//    <name> IMFB </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042A83) Input capture/compare match flag B </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSR1 ) </loc>
//      <o.1..1> IMFB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMSR1_IMFC  -----------------------------------
// SVD Line: 3706

//  <item> SFDITEM_FIELD__TMM_TMSR1_IMFC
//    <name> IMFC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042A83) Input capture/compare match flag C </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSR1 ) </loc>
//      <o.2..2> IMFC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMSR1_IMFD  -----------------------------------
// SVD Line: 3712

//  <item> SFDITEM_FIELD__TMM_TMSR1_IMFD
//    <name> IMFD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042A83) Input capture/compare match flag D </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSR1 ) </loc>
//      <o.3..3> IMFD
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TMM_TMSR1_OVF  -----------------------------------
// SVD Line: 3718

//  <item> SFDITEM_FIELD__TMM_TMSR1_OVF
//    <name> OVF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042A83) Overflow flag </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSR1 ) </loc>
//      <o.4..4> OVF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TMM_TMSR1_UDF  -----------------------------------
// SVD Line: 3734

//  <item> SFDITEM_FIELD__TMM_TMSR1_UDF
//    <name> UDF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042A83) Underflow flag </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMSR1 ) </loc>
//      <o.5..5> UDF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMM_TMSR1  -----------------------------------
// SVD Line: 3727

//  <rtree> SFDITEM_REG__TMM_TMSR1
//    <name> TMSR1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A83) Timer status register 1 </i>
//    <loc> ( (unsigned char)((TMM_TMSR1 >> 0) & 0xFF), ((TMM_TMSR1 = (TMM_TMSR1 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMSR1_IMFA </item>
//    <item> SFDITEM_FIELD__TMM_TMSR1_IMFB </item>
//    <item> SFDITEM_FIELD__TMM_TMSR1_IMFC </item>
//    <item> SFDITEM_FIELD__TMM_TMSR1_IMFD </item>
//    <item> SFDITEM_FIELD__TMM_TMSR1_OVF </item>
//    <item> SFDITEM_FIELD__TMM_TMSR1_UDF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMIER0  -------------------------------
// SVD Line: 3742

unsigned char TMM_TMIER0 __AT (0x40042A74);



// ------------------------------  Field Item: TMM_TMIER0_IMIEA  ----------------------------------
// SVD Line: 3751

//  <item> SFDITEM_FIELD__TMM_TMIER0_IMIEA
//    <name> IMIEA </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A74) Input capture/compare match interrupt enable A </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMIER0 ) </loc>
//      <o.0..0> IMIEA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMIER0_IMIEB  ----------------------------------
// SVD Line: 3757

//  <item> SFDITEM_FIELD__TMM_TMIER0_IMIEB
//    <name> IMIEB </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042A74) Input capture/compare match interrupt enable B </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMIER0 ) </loc>
//      <o.1..1> IMIEB
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMIER0_IMIEC  ----------------------------------
// SVD Line: 3763

//  <item> SFDITEM_FIELD__TMM_TMIER0_IMIEC
//    <name> IMIEC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042A74) Input capture/compare match interrupt enable C </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMIER0 ) </loc>
//      <o.2..2> IMIEC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMIER0_IMIED  ----------------------------------
// SVD Line: 3769

//  <item> SFDITEM_FIELD__TMM_TMIER0_IMIED
//    <name> IMIED </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042A74) Input capture/compare match interrupt enable D </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMIER0 ) </loc>
//      <o.3..3> IMIED
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMIER0_OVIE  ----------------------------------
// SVD Line: 3775

//  <item> SFDITEM_FIELD__TMM_TMIER0_OVIE
//    <name> OVIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042A74) Overflow/underflow interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMIER0 ) </loc>
//      <o.4..4> OVIE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TMM_TMIER0  -----------------------------------
// SVD Line: 3742

//  <rtree> SFDITEM_REG__TMM_TMIER0
//    <name> TMIER0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A74) Timer interrupt enable register 0 </i>
//    <loc> ( (unsigned char)((TMM_TMIER0 >> 0) & 0xFF), ((TMM_TMIER0 = (TMM_TMIER0 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMIER0_IMIEA </item>
//    <item> SFDITEM_FIELD__TMM_TMIER0_IMIEB </item>
//    <item> SFDITEM_FIELD__TMM_TMIER0_IMIEC </item>
//    <item> SFDITEM_FIELD__TMM_TMIER0_IMIED </item>
//    <item> SFDITEM_FIELD__TMM_TMIER0_OVIE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_TMIER1  -------------------------------
// SVD Line: 3784

unsigned char TMM_TMIER1 __AT (0x40042A84);



// ------------------------------  Field Item: TMM_TMIER1_IMIEA  ----------------------------------
// SVD Line: 3751

//  <item> SFDITEM_FIELD__TMM_TMIER1_IMIEA
//    <name> IMIEA </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A84) Input capture/compare match interrupt enable A </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMIER1 ) </loc>
//      <o.0..0> IMIEA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMIER1_IMIEB  ----------------------------------
// SVD Line: 3757

//  <item> SFDITEM_FIELD__TMM_TMIER1_IMIEB
//    <name> IMIEB </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042A84) Input capture/compare match interrupt enable B </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMIER1 ) </loc>
//      <o.1..1> IMIEB
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMIER1_IMIEC  ----------------------------------
// SVD Line: 3763

//  <item> SFDITEM_FIELD__TMM_TMIER1_IMIEC
//    <name> IMIEC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042A84) Input capture/compare match interrupt enable C </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMIER1 ) </loc>
//      <o.2..2> IMIEC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMIER1_IMIED  ----------------------------------
// SVD Line: 3769

//  <item> SFDITEM_FIELD__TMM_TMIER1_IMIED
//    <name> IMIED </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042A84) Input capture/compare match interrupt enable D </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMIER1 ) </loc>
//      <o.3..3> IMIED
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_TMIER1_OVIE  ----------------------------------
// SVD Line: 3775

//  <item> SFDITEM_FIELD__TMM_TMIER1_OVIE
//    <name> OVIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042A84) Overflow/underflow interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMIER1 ) </loc>
//      <o.4..4> OVIE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TMM_TMIER1  -----------------------------------
// SVD Line: 3784

//  <rtree> SFDITEM_REG__TMM_TMIER1
//    <name> TMIER1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A84) Timer interrupt enable register 1 </i>
//    <loc> ( (unsigned char)((TMM_TMIER1 >> 0) & 0xFF), ((TMM_TMIER1 = (TMM_TMIER1 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMIER1_IMIEA </item>
//    <item> SFDITEM_FIELD__TMM_TMIER1_IMIEB </item>
//    <item> SFDITEM_FIELD__TMM_TMIER1_IMIEC </item>
//    <item> SFDITEM_FIELD__TMM_TMIER1_IMIED </item>
//    <item> SFDITEM_FIELD__TMM_TMIER1_OVIE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TMM_TMPOCR0  -------------------------------
// SVD Line: 3790

unsigned char TMM_TMPOCR0 __AT (0x40042A75);



// ------------------------------  Field Item: TMM_TMPOCR0_POLB  ----------------------------------
// SVD Line: 3799

//  <item> SFDITEM_FIELD__TMM_TMPOCR0_POLB
//    <name> POLB </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A75) PWM output level control B </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMPOCR0 ) </loc>
//      <o.0..0> POLB
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMPOCR0_POLC  ----------------------------------
// SVD Line: 3805

//  <item> SFDITEM_FIELD__TMM_TMPOCR0_POLC
//    <name> POLC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042A75) PWM output level control C </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMPOCR0 ) </loc>
//      <o.1..1> POLC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMPOCR0_POLD  ----------------------------------
// SVD Line: 3811

//  <item> SFDITEM_FIELD__TMM_TMPOCR0_POLD
//    <name> POLD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042A75) PWM output level control D </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMPOCR0 ) </loc>
//      <o.2..2> POLD
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TMM_TMPOCR0  ----------------------------------
// SVD Line: 3790

//  <rtree> SFDITEM_REG__TMM_TMPOCR0
//    <name> TMPOCR0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A75) PWM output level control register 0 </i>
//    <loc> ( (unsigned char)((TMM_TMPOCR0 >> 0) & 0xFF), ((TMM_TMPOCR0 = (TMM_TMPOCR0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMPOCR0_POLB </item>
//    <item> SFDITEM_FIELD__TMM_TMPOCR0_POLC </item>
//    <item> SFDITEM_FIELD__TMM_TMPOCR0_POLD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TMM_TMPOCR1  -------------------------------
// SVD Line: 3820

unsigned char TMM_TMPOCR1 __AT (0x40042A85);



// ------------------------------  Field Item: TMM_TMPOCR1_POLB  ----------------------------------
// SVD Line: 3799

//  <item> SFDITEM_FIELD__TMM_TMPOCR1_POLB
//    <name> POLB </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042A85) PWM output level control B </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMPOCR1 ) </loc>
//      <o.0..0> POLB
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMPOCR1_POLC  ----------------------------------
// SVD Line: 3805

//  <item> SFDITEM_FIELD__TMM_TMPOCR1_POLC
//    <name> POLC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042A85) PWM output level control C </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMPOCR1 ) </loc>
//      <o.1..1> POLC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_TMPOCR1_POLD  ----------------------------------
// SVD Line: 3811

//  <item> SFDITEM_FIELD__TMM_TMPOCR1_POLD
//    <name> POLD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042A85) PWM output level control D </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_TMPOCR1 ) </loc>
//      <o.2..2> POLD
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TMM_TMPOCR1  ----------------------------------
// SVD Line: 3820

//  <rtree> SFDITEM_REG__TMM_TMPOCR1
//    <name> TMPOCR1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042A85) PWM output level control register 1 </i>
//    <loc> ( (unsigned char)((TMM_TMPOCR1 >> 0) & 0xFF), ((TMM_TMPOCR1 = (TMM_TMPOCR1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_TMPOCR1_POLB </item>
//    <item> SFDITEM_FIELD__TMM_TMPOCR1_POLC </item>
//    <item> SFDITEM_FIELD__TMM_TMPOCR1_POLD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TMM_TM0  ---------------------------------
// SVD Line: 3826

unsigned short TMM_TM0 __AT (0x40042A76);



// ---------------------------------  Register Item: TMM_TM0  -------------------------------------
// SVD Line: 3826

//  <item> SFDITEM_REG__TMM_TM0
//    <name> TM0 </name>
//    <i> [Bits 15..0] RW (@ 0x40042A76) Timer M counter 0 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMM_TM0 >> 0) & 0xFFFFFFFF), ((TMM_TM0 = (TMM_TM0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: TMM_TM1  ---------------------------------
// SVD Line: 3835

unsigned short TMM_TM1 __AT (0x40042A86);



// ---------------------------------  Register Item: TMM_TM1  -------------------------------------
// SVD Line: 3835

//  <item> SFDITEM_REG__TMM_TM1
//    <name> TM1 </name>
//    <i> [Bits 15..0] RW (@ 0x40042A86) Timer M counter 1 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMM_TM1 >> 0) & 0xFFFFFFFF), ((TMM_TM1 = (TMM_TM1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TMM_TMGRA0  -------------------------------
// SVD Line: 3841

unsigned short TMM_TMGRA0 __AT (0x40042A78);



// --------------------------------  Register Item: TMM_TMGRA0  -----------------------------------
// SVD Line: 3841

//  <item> SFDITEM_REG__TMM_TMGRA0
//    <name> TMGRA0 </name>
//    <i> [Bits 15..0] RW (@ 0x40042A78) Timer M general register A0 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMM_TMGRA0 >> 0) & 0xFFFFFFFF), ((TMM_TMGRA0 = (TMM_TMGRA0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TMM_TMGRA1  -------------------------------
// SVD Line: 3850

unsigned short TMM_TMGRA1 __AT (0x40042A88);



// --------------------------------  Register Item: TMM_TMGRA1  -----------------------------------
// SVD Line: 3850

//  <item> SFDITEM_REG__TMM_TMGRA1
//    <name> TMGRA1 </name>
//    <i> [Bits 15..0] RW (@ 0x40042A88) Timer M general register A1 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMM_TMGRA1 >> 0) & 0xFFFFFFFF), ((TMM_TMGRA1 = (TMM_TMGRA1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TMM_TMGRB0  -------------------------------
// SVD Line: 3856

unsigned short TMM_TMGRB0 __AT (0x40042A7A);



// --------------------------------  Register Item: TMM_TMGRB0  -----------------------------------
// SVD Line: 3856

//  <item> SFDITEM_REG__TMM_TMGRB0
//    <name> TMGRB0 </name>
//    <i> [Bits 15..0] RW (@ 0x40042A7A) Timer M general register B0 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMM_TMGRB0 >> 0) & 0xFFFFFFFF), ((TMM_TMGRB0 = (TMM_TMGRB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TMM_TMGRB1  -------------------------------
// SVD Line: 3865

unsigned short TMM_TMGRB1 __AT (0x40042A8A);



// --------------------------------  Register Item: TMM_TMGRB1  -----------------------------------
// SVD Line: 3865

//  <item> SFDITEM_REG__TMM_TMGRB1
//    <name> TMGRB1 </name>
//    <i> [Bits 15..0] RW (@ 0x40042A8A) Timer M general register B1 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMM_TMGRB1 >> 0) & 0xFFFFFFFF), ((TMM_TMGRB1 = (TMM_TMGRB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TMM_TMGRC0  -------------------------------
// SVD Line: 3871

unsigned short TMM_TMGRC0 __AT (0x40042B58);



// --------------------------------  Register Item: TMM_TMGRC0  -----------------------------------
// SVD Line: 3871

//  <item> SFDITEM_REG__TMM_TMGRC0
//    <name> TMGRC0 </name>
//    <i> [Bits 15..0] RW (@ 0x40042B58) Timer M general register C0 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMM_TMGRC0 >> 0) & 0xFFFFFFFF), ((TMM_TMGRC0 = (TMM_TMGRC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TMM_TMGRC1  -------------------------------
// SVD Line: 3880

unsigned short TMM_TMGRC1 __AT (0x40042B5C);



// --------------------------------  Register Item: TMM_TMGRC1  -----------------------------------
// SVD Line: 3880

//  <item> SFDITEM_REG__TMM_TMGRC1
//    <name> TMGRC1 </name>
//    <i> [Bits 15..0] RW (@ 0x40042B5C) Timer M general register C1 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMM_TMGRC1 >> 0) & 0xFFFFFFFF), ((TMM_TMGRC1 = (TMM_TMGRC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TMM_TMGRD0  -------------------------------
// SVD Line: 3886

unsigned short TMM_TMGRD0 __AT (0x40042B5A);



// --------------------------------  Register Item: TMM_TMGRD0  -----------------------------------
// SVD Line: 3886

//  <item> SFDITEM_REG__TMM_TMGRD0
//    <name> TMGRD0 </name>
//    <i> [Bits 15..0] RW (@ 0x40042B5A) Timer M general register D0 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMM_TMGRD0 >> 0) & 0xFFFFFFFF), ((TMM_TMGRD0 = (TMM_TMGRD0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TMM_TMGRD1  -------------------------------
// SVD Line: 3895

unsigned short TMM_TMGRD1 __AT (0x40042B5E);



// --------------------------------  Register Item: TMM_TMGRD1  -----------------------------------
// SVD Line: 3895

//  <item> SFDITEM_REG__TMM_TMGRD1
//    <name> TMGRD1 </name>
//    <i> [Bits 15..0] RW (@ 0x40042B5E) Timer M general register D1 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TMM_TMGRD1 >> 0) & 0xFFFFFFFF), ((TMM_TMGRD1 = (TMM_TMGRD1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TMM_OPCTL0  -------------------------------
// SVD Line: 3901

unsigned char TMM_OPCTL0 __AT (0x40043C58);



// ------------------------------  Field Item: TMM_OPCTL0_HS_SEL  ---------------------------------
// SVD Line: 3910

//  <item> SFDITEM_FIELD__TMM_OPCTL0_HS_SEL
//    <name> HS_SEL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40043C58) Output forced cutoff release mode selection </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_OPCTL0 ) </loc>
//      <o.0..0> HS_SEL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_OPCTL0_HZ_REL  ---------------------------------
// SVD Line: 3916

//  <item> SFDITEM_FIELD__TMM_OPCTL0_HZ_REL
//    <name> HZ_REL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40043C58) When software release is selected: Output cutoff release control </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_OPCTL0 ) </loc>
//      <o.1..1> HZ_REL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_OPCTL0_ACT  -----------------------------------
// SVD Line: 3922

//  <item> SFDITEM_FIELD__TMM_OPCTL0_ACT
//    <name> ACT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40043C58) When software release is selected: Software release timing selection </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_OPCTL0 ) </loc>
//      <o.2..2> ACT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TMM_OPCTL0_IN_SEL  ---------------------------------
// SVD Line: 3928

//  <item> SFDITEM_FIELD__TMM_OPCTL0_IN_SEL
//    <name> IN_SEL </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x40043C58) Cutoff source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_OPCTL0 >> 3) & 0x3), ((TMM_OPCTL0 = (TMM_OPCTL0 & ~(0x3UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TMM_OPCTL0_IN_EG  ----------------------------------
// SVD Line: 3934

//  <item> SFDITEM_FIELD__TMM_OPCTL0_IN_EG
//    <name> IN_EG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40043C58) Output forced cutoff source edge/output forced cutoff release edge selection </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_OPCTL0 ) </loc>
//      <o.5..5> IN_EG
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TMM_OPCTL0_HAZAD_SET  --------------------------------
// SVD Line: 3940

//  <item> SFDITEM_FIELD__TMM_OPCTL0_HAZAD_SET
//    <name> HAZAD_SET </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40043C58) Output cutoff hazard control selection </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_OPCTL0 ) </loc>
//      <o.6..6> HAZAD_SET
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TMM_OPCTL0  -----------------------------------
// SVD Line: 3901

//  <rtree> SFDITEM_REG__TMM_OPCTL0
//    <name> OPCTL0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043C58) PWMOPA control register 0 </i>
//    <loc> ( (unsigned char)((TMM_OPCTL0 >> 0) & 0xFF), ((TMM_OPCTL0 = (TMM_OPCTL0 & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_OPCTL0_HS_SEL </item>
//    <item> SFDITEM_FIELD__TMM_OPCTL0_HZ_REL </item>
//    <item> SFDITEM_FIELD__TMM_OPCTL0_ACT </item>
//    <item> SFDITEM_FIELD__TMM_OPCTL0_IN_SEL </item>
//    <item> SFDITEM_FIELD__TMM_OPCTL0_IN_EG </item>
//    <item> SFDITEM_FIELD__TMM_OPCTL0_HAZAD_SET </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_OPDF0  --------------------------------
// SVD Line: 3949

unsigned char TMM_OPDF0 __AT (0x40043C59);



// -------------------------------  Field Item: TMM_OPDF0_DFA0  -----------------------------------
// SVD Line: 3958

//  <item> SFDITEM_FIELD__TMM_OPDF0_DFA0
//    <name> DFA0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40043C59) TMIOA0 pin output forced cutoff control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_OPDF0 >> 0) & 0x3), ((TMM_OPDF0 = (TMM_OPDF0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_OPDF0_DFB0  -----------------------------------
// SVD Line: 3964

//  <item> SFDITEM_FIELD__TMM_OPDF0_DFB0
//    <name> DFB0 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40043C59) TMIOB0 pin output forced cutoff control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_OPDF0 >> 2) & 0x3), ((TMM_OPDF0 = (TMM_OPDF0 & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_OPDF0_DFC0  -----------------------------------
// SVD Line: 3970

//  <item> SFDITEM_FIELD__TMM_OPDF0_DFC0
//    <name> DFC0 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40043C59) TMIOC0 pin output forced cutoff control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_OPDF0 >> 4) & 0x3), ((TMM_OPDF0 = (TMM_OPDF0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_OPDF0_DFD0  -----------------------------------
// SVD Line: 3976

//  <item> SFDITEM_FIELD__TMM_OPDF0_DFD0
//    <name> DFD0 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40043C59) TMIOD0 pin output forced cutoff control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_OPDF0 >> 6) & 0x3), ((TMM_OPDF0 = (TMM_OPDF0 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TMM_OPDF0  -----------------------------------
// SVD Line: 3949

//  <rtree> SFDITEM_REG__TMM_OPDF0
//    <name> OPDF0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043C59) PWMOPA cutoff control register 0 </i>
//    <loc> ( (unsigned char)((TMM_OPDF0 >> 0) & 0xFF), ((TMM_OPDF0 = (TMM_OPDF0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_OPDF0_DFA0 </item>
//    <item> SFDITEM_FIELD__TMM_OPDF0_DFB0 </item>
//    <item> SFDITEM_FIELD__TMM_OPDF0_DFC0 </item>
//    <item> SFDITEM_FIELD__TMM_OPDF0_DFD0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_OPDF1  --------------------------------
// SVD Line: 3985

unsigned char TMM_OPDF1 __AT (0x40043C5A);



// -------------------------------  Field Item: TMM_OPDF1_DFA1  -----------------------------------
// SVD Line: 3994

//  <item> SFDITEM_FIELD__TMM_OPDF1_DFA1
//    <name> DFA1 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40043C5A) TMIOA1 pin output forced cutoff control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_OPDF1 >> 0) & 0x3), ((TMM_OPDF1 = (TMM_OPDF1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_OPDF1_DFB1  -----------------------------------
// SVD Line: 4000

//  <item> SFDITEM_FIELD__TMM_OPDF1_DFB1
//    <name> DFB1 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40043C5A) TMIOB1 pin output forced cutoff control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_OPDF1 >> 2) & 0x3), ((TMM_OPDF1 = (TMM_OPDF1 & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_OPDF1_DFC1  -----------------------------------
// SVD Line: 4006

//  <item> SFDITEM_FIELD__TMM_OPDF1_DFC1
//    <name> DFC1 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40043C5A) TMIOC1 pin output forced cutoff control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_OPDF1 >> 4) & 0x3), ((TMM_OPDF1 = (TMM_OPDF1 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TMM_OPDF1_DFD1  -----------------------------------
// SVD Line: 4012

//  <item> SFDITEM_FIELD__TMM_OPDF1_DFD1
//    <name> DFD1 </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40043C5A) TMIOD1 pin output forced cutoff control </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_OPDF1 >> 6) & 0x3), ((TMM_OPDF1 = (TMM_OPDF1 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TMM_OPDF1  -----------------------------------
// SVD Line: 3985

//  <rtree> SFDITEM_REG__TMM_OPDF1
//    <name> OPDF1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043C5A) PWMOPA cutoff control register 1 </i>
//    <loc> ( (unsigned char)((TMM_OPDF1 >> 0) & 0xFF), ((TMM_OPDF1 = (TMM_OPDF1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_OPDF1_DFA1 </item>
//    <item> SFDITEM_FIELD__TMM_OPDF1_DFB1 </item>
//    <item> SFDITEM_FIELD__TMM_OPDF1_DFC1 </item>
//    <item> SFDITEM_FIELD__TMM_OPDF1_DFD1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TMM_OPEDGE  -------------------------------
// SVD Line: 4021

unsigned char TMM_OPEDGE __AT (0x40043C5B);



// --------------------------------  Field Item: TMM_OPEDGE_EG  -----------------------------------
// SVD Line: 4030

//  <item> SFDITEM_FIELD__TMM_OPEDGE_EG
//    <name> EG </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40043C5B) Output forced cutoff release edge selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TMM_OPEDGE >> 0) & 0x3), ((TMM_OPEDGE = (TMM_OPEDGE & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TMM_OPEDGE  -----------------------------------
// SVD Line: 4021

//  <rtree> SFDITEM_REG__TMM_OPEDGE
//    <name> OPEDGE </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043C5B) PWMOPA edge selection register </i>
//    <loc> ( (unsigned char)((TMM_OPEDGE >> 0) & 0xFF), ((TMM_OPEDGE = (TMM_OPEDGE & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TMM_OPEDGE_EG </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TMM_OPSR  --------------------------------
// SVD Line: 4039

unsigned char TMM_OPSR __AT (0x40043C5C);



// -------------------------------  Field Item: TMM_OPSR_HZIF0  -----------------------------------
// SVD Line: 4049

//  <item> SFDITEM_FIELD__TMM_OPSR_HZIF0
//    <name> HZIF0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40043C5C) Output cutoff source state </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_OPSR ) </loc>
//      <o.0..0> HZIF0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_OPSR_HZOF0  -----------------------------------
// SVD Line: 4055

//  <item> SFDITEM_FIELD__TMM_OPSR_HZOF0
//    <name> HZOF0 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40043C5C) cutoff state </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_OPSR ) </loc>
//      <o.1..1> HZOF0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TMM_OPSR_HZOF1  -----------------------------------
// SVD Line: 4061

//  <item> SFDITEM_FIELD__TMM_OPSR_HZOF1
//    <name> HZOF1 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40043C5C) cutoff state </i>
//    <check> 
//      <loc> ( (unsigned char) TMM_OPSR ) </loc>
//      <o.2..2> HZOF1
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TMM_OPSR  ------------------------------------
// SVD Line: 4039

//  <rtree> SFDITEM_REG__TMM_OPSR
//    <name> OPSR </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40043C5C) PWMOPA status register </i>
//    <loc> ( (unsigned char)((TMM_OPSR >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__TMM_OPSR_HZIF0 </item>
//    <item> SFDITEM_FIELD__TMM_OPSR_HZOF0 </item>
//    <item> SFDITEM_FIELD__TMM_OPSR_HZOF1 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: TMM  --------------------------------------
// SVD Line: 3167

//  <view> TMM
//    <name> TMM </name>
//    <item> SFDITEM_REG__TMM_TMELC </item>
//    <item> SFDITEM_REG__TMM_TMSTR </item>
//    <item> SFDITEM_REG__TMM_TMMR </item>
//    <item> SFDITEM_REG__TMM_TMPMR </item>
//    <item> SFDITEM_REG__TMM_TMFCR </item>
//    <item> SFDITEM_REG__TMM_TMOER1 </item>
//    <item> SFDITEM_REG__TMM_TMOER2 </item>
//    <item> SFDITEM_REG__TMM_TMOCR </item>
//    <item> SFDITEM_REG__TMM_TMDF0 </item>
//    <item> SFDITEM_REG__TMM_TMDF1 </item>
//    <item> SFDITEM_REG__TMM_TMCR0 </item>
//    <item> SFDITEM_REG__TMM_TMCR1 </item>
//    <item> SFDITEM_REG__TMM_TMIORA0 </item>
//    <item> SFDITEM_REG__TMM_TMIORA1 </item>
//    <item> SFDITEM_REG__TMM_TMIORC0 </item>
//    <item> SFDITEM_REG__TMM_TMIORC1 </item>
//    <item> SFDITEM_REG__TMM_TMSR0 </item>
//    <item> SFDITEM_REG__TMM_TMSR1 </item>
//    <item> SFDITEM_REG__TMM_TMIER0 </item>
//    <item> SFDITEM_REG__TMM_TMIER1 </item>
//    <item> SFDITEM_REG__TMM_TMPOCR0 </item>
//    <item> SFDITEM_REG__TMM_TMPOCR1 </item>
//    <item> SFDITEM_REG__TMM_TM0 </item>
//    <item> SFDITEM_REG__TMM_TM1 </item>
//    <item> SFDITEM_REG__TMM_TMGRA0 </item>
//    <item> SFDITEM_REG__TMM_TMGRA1 </item>
//    <item> SFDITEM_REG__TMM_TMGRB0 </item>
//    <item> SFDITEM_REG__TMM_TMGRB1 </item>
//    <item> SFDITEM_REG__TMM_TMGRC0 </item>
//    <item> SFDITEM_REG__TMM_TMGRC1 </item>
//    <item> SFDITEM_REG__TMM_TMGRD0 </item>
//    <item> SFDITEM_REG__TMM_TMGRD1 </item>
//    <item> SFDITEM_REG__TMM_OPCTL0 </item>
//    <item> SFDITEM_REG__TMM_OPDF0 </item>
//    <item> SFDITEM_REG__TMM_OPDF1 </item>
//    <item> SFDITEM_REG__TMM_OPEDGE </item>
//    <item> SFDITEM_REG__TMM_OPSR </item>
//  </view>
//  


// ----------------------------  Register Item Address: RTC_SUBCUD  -------------------------------
// SVD Line: 4102

unsigned short RTC_SUBCUD __AT (0x40044F34);



// --------------------------------  Field Item: RTC_SUBCUD_F  ------------------------------------
// SVD Line: 4111

//  <item> SFDITEM_FIELD__RTC_SUBCUD_F
//    <name> F </name>
//    <rw> 
//    <i> [Bits 12..0] RW (@ 0x40044F34) watch error correction value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_SUBCUD >> 0) & 0x1FFF), ((RTC_SUBCUD = (RTC_SUBCUD & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_SUBCUD_DEV  -----------------------------------
// SVD Line: 4117

//  <item> SFDITEM_FIELD__RTC_SUBCUD_DEV
//    <name> DEV </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40044F34) watch error correction timing </i>
//    <check> 
//      <loc> ( (unsigned short) RTC_SUBCUD ) </loc>
//      <o.15..15> DEV
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RTC_SUBCUD  -----------------------------------
// SVD Line: 4102

//  <rtree> SFDITEM_REG__RTC_SUBCUD
//    <name> SUBCUD </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044F34) Watch error correction register </i>
//    <loc> ( (unsigned short)((RTC_SUBCUD >> 0) & 0xFFFF), ((RTC_SUBCUD = (RTC_SUBCUD & ~(0x9FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x9FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_SUBCUD_F </item>
//    <item> SFDITEM_FIELD__RTC_SUBCUD_DEV </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_ITMC  --------------------------------
// SVD Line: 4126

unsigned short RTC_ITMC __AT (0x40044F50);



// -------------------------------  Field Item: RTC_ITMC_ITCMP  -----------------------------------
// SVD Line: 4135

//  <item> SFDITEM_FIELD__RTC_ITMC_ITCMP
//    <name> ITCMP </name>
//    <rw> 
//    <i> [Bits 14..0] RW (@ 0x40044F50) 15-bit interval timer compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_ITMC >> 0) & 0x7FFF), ((RTC_ITMC = (RTC_ITMC & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_ITMC_RINTE  -----------------------------------
// SVD Line: 4141

//  <item> SFDITEM_FIELD__RTC_ITMC_RINTE
//    <name> RINTE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40044F50) 15-bit interval timer operation control </i>
//    <check> 
//      <loc> ( (unsigned short) RTC_ITMC ) </loc>
//      <o.15..15> RINTE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTC_ITMC  ------------------------------------
// SVD Line: 4126

//  <rtree> SFDITEM_REG__RTC_ITMC
//    <name> ITMC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044F50) 15-bit interval timer control register </i>
//    <loc> ( (unsigned short)((RTC_ITMC >> 0) & 0xFFFF), ((RTC_ITMC = (RTC_ITMC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_ITMC_ITCMP </item>
//    <item> SFDITEM_FIELD__RTC_ITMC_RINTE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_SEC  ---------------------------------
// SVD Line: 4150

unsigned char RTC_SEC __AT (0x40044F52);



// ---------------------------------  Register Item: RTC_SEC  -------------------------------------
// SVD Line: 4150

//  <item> SFDITEM_REG__RTC_SEC
//    <name> SEC </name>
//    <i> [Bits 7..0] RW (@ 0x40044F52) Second count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_SEC >> 0) & 0xFFFFFFFF), ((RTC_SEC = (RTC_SEC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_MIN  ---------------------------------
// SVD Line: 4159

unsigned char RTC_MIN __AT (0x40044F53);



// ---------------------------------  Register Item: RTC_MIN  -------------------------------------
// SVD Line: 4159

//  <item> SFDITEM_REG__RTC_MIN
//    <name> MIN </name>
//    <i> [Bits 7..0] RW (@ 0x40044F53) Minute count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_MIN >> 0) & 0xFFFFFFFF), ((RTC_MIN = (RTC_MIN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_HOUR  --------------------------------
// SVD Line: 4168

unsigned char RTC_HOUR __AT (0x40044F54);



// ---------------------------------  Register Item: RTC_HOUR  ------------------------------------
// SVD Line: 4168

//  <item> SFDITEM_REG__RTC_HOUR
//    <name> HOUR </name>
//    <i> [Bits 7..0] RW (@ 0x40044F54) Hour count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_HOUR >> 0) & 0xFFFFFFFF), ((RTC_HOUR = (RTC_HOUR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_WEEK  --------------------------------
// SVD Line: 4177

unsigned char RTC_WEEK __AT (0x40044F55);



// ---------------------------------  Register Item: RTC_WEEK  ------------------------------------
// SVD Line: 4177

//  <item> SFDITEM_REG__RTC_WEEK
//    <name> WEEK </name>
//    <i> [Bits 7..0] RW (@ 0x40044F55) Week count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_WEEK >> 0) & 0xFFFFFFFF), ((RTC_WEEK = (RTC_WEEK & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_DAY  ---------------------------------
// SVD Line: 4186

unsigned char RTC_DAY __AT (0x40044F56);



// ---------------------------------  Register Item: RTC_DAY  -------------------------------------
// SVD Line: 4186

//  <item> SFDITEM_REG__RTC_DAY
//    <name> DAY </name>
//    <i> [Bits 7..0] RW (@ 0x40044F56) Day count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_DAY >> 0) & 0xFFFFFFFF), ((RTC_DAY = (RTC_DAY & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: RTC_MONTH  --------------------------------
// SVD Line: 4195

unsigned char RTC_MONTH __AT (0x40044F57);



// --------------------------------  Register Item: RTC_MONTH  ------------------------------------
// SVD Line: 4195

//  <item> SFDITEM_REG__RTC_MONTH
//    <name> MONTH </name>
//    <i> [Bits 7..0] RW (@ 0x40044F57) Month count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_MONTH >> 0) & 0xFFFFFFFF), ((RTC_MONTH = (RTC_MONTH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_YEAR  --------------------------------
// SVD Line: 4204

unsigned char RTC_YEAR __AT (0x40044F58);



// ---------------------------------  Register Item: RTC_YEAR  ------------------------------------
// SVD Line: 4204

//  <item> SFDITEM_REG__RTC_YEAR
//    <name> YEAR </name>
//    <i> [Bits 7..0] RW (@ 0x40044F58) Year count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_YEAR >> 0) & 0xFFFFFFFF), ((RTC_YEAR = (RTC_YEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: RTC_ALARMWM  -------------------------------
// SVD Line: 4213

unsigned char RTC_ALARMWM __AT (0x40044F5A);



// -------------------------------  Register Item: RTC_ALARMWM  -----------------------------------
// SVD Line: 4213

//  <item> SFDITEM_REG__RTC_ALARMWM
//    <name> ALARMWM </name>
//    <i> [Bits 7..0] RW (@ 0x40044F5A) Alarm minute register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALARMWM >> 0) & 0xFFFFFFFF), ((RTC_ALARMWM = (RTC_ALARMWM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: RTC_ALARMWH  -------------------------------
// SVD Line: 4222

unsigned char RTC_ALARMWH __AT (0x40044F5B);



// -------------------------------  Register Item: RTC_ALARMWH  -----------------------------------
// SVD Line: 4222

//  <item> SFDITEM_REG__RTC_ALARMWH
//    <name> ALARMWH </name>
//    <i> [Bits 7..0] RW (@ 0x40044F5B) Alarm hour register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALARMWH >> 0) & 0xFFFFFFFF), ((RTC_ALARMWH = (RTC_ALARMWH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: RTC_ALARMWW  -------------------------------
// SVD Line: 4231

unsigned char RTC_ALARMWW __AT (0x40044F5C);



// -------------------------------  Register Item: RTC_ALARMWW  -----------------------------------
// SVD Line: 4231

//  <item> SFDITEM_REG__RTC_ALARMWW
//    <name> ALARMWW </name>
//    <i> [Bits 7..0] RW (@ 0x40044F5C) Alarm week register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALARMWW >> 0) & 0xFFFFFFFF), ((RTC_ALARMWW = (RTC_ALARMWW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: RTC_RTCC0  --------------------------------
// SVD Line: 4240

unsigned char RTC_RTCC0 __AT (0x40044F5D);



// --------------------------------  Field Item: RTC_RTCC0_CT  ------------------------------------
// SVD Line: 4249

//  <item> SFDITEM_FIELD__RTC_RTCC0_CT
//    <name> CT </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40044F5D) Constant-period interrupt (INTRTC) selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_RTCC0 >> 0) & 0x7), ((RTC_RTCC0 = (RTC_RTCC0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC0_AMPM  -----------------------------------
// SVD Line: 4255

//  <item> SFDITEM_FIELD__RTC_RTCC0_AMPM
//    <name> AMPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40044F5D) Selection of 12-/24-hour system </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC0 ) </loc>
//      <o.3..3> AMPM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC0_RCLOE  ----------------------------------
// SVD Line: 4261

//  <item> SFDITEM_FIELD__RTC_RTCC0_RCLOE
//    <name> RCLOE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40044F5D) RTC1HZ pin output enable </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC0 ) </loc>
//      <o.5..5> RCLOE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC0_RTCE  -----------------------------------
// SVD Line: 4267

//  <item> SFDITEM_FIELD__RTC_RTCC0_RTCE
//    <name> RTCE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40044F5D) Real-time clock operation control </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC0 ) </loc>
//      <o.7..7> RTCE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTC_RTCC0  -----------------------------------
// SVD Line: 4240

//  <rtree> SFDITEM_REG__RTC_RTCC0
//    <name> RTCC0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40044F5D) Real-time clock control register 0 </i>
//    <loc> ( (unsigned char)((RTC_RTCC0 >> 0) & 0xFF), ((RTC_RTCC0 = (RTC_RTCC0 & ~(0xAFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xAF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_RTCC0_CT </item>
//    <item> SFDITEM_FIELD__RTC_RTCC0_AMPM </item>
//    <item> SFDITEM_FIELD__RTC_RTCC0_RCLOE </item>
//    <item> SFDITEM_FIELD__RTC_RTCC0_RTCE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTC_RTCC1  --------------------------------
// SVD Line: 4276

unsigned char RTC_RTCC1 __AT (0x40044F5E);



// -------------------------------  Field Item: RTC_RTCC1_RWAIT  ----------------------------------
// SVD Line: 4285

//  <item> SFDITEM_FIELD__RTC_RTCC1_RWAIT
//    <name> RWAIT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40044F5E) Wait control of real-time clock </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.0..0> RWAIT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_RWST  -----------------------------------
// SVD Line: 4291

//  <item> SFDITEM_FIELD__RTC_RTCC1_RWST
//    <name> RWST </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40044F5E) Wait status flag of real-time clock </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.1..1> RWST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_RIFG  -----------------------------------
// SVD Line: 4297

//  <item> SFDITEM_FIELD__RTC_RTCC1_RIFG
//    <name> RIFG </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40044F5E) Constant-period interrupt status flag </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.3..3> RIFG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_WAFG  -----------------------------------
// SVD Line: 4303

//  <item> SFDITEM_FIELD__RTC_RTCC1_WAFG
//    <name> WAFG </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40044F5E) Alarm detection status flag </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.4..4> WAFG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_WALIE  ----------------------------------
// SVD Line: 4309

//  <item> SFDITEM_FIELD__RTC_RTCC1_WALIE
//    <name> WALIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40044F5E) Control of alarm interrupt (INTRTC) function operation </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.6..6> WALIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_WALE  -----------------------------------
// SVD Line: 4315

//  <item> SFDITEM_FIELD__RTC_RTCC1_WALE
//    <name> WALE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40044F5E) Alarm operation control </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.7..7> WALE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTC_RTCC1  -----------------------------------
// SVD Line: 4276

//  <rtree> SFDITEM_REG__RTC_RTCC1
//    <name> RTCC1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40044F5E) Real-time clock control register 1 </i>
//    <loc> ( (unsigned char)((RTC_RTCC1 >> 0) & 0xFF), ((RTC_RTCC1 = (RTC_RTCC1 & ~(0xDBUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xDB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_RTCC1_RWAIT </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_RWST </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_RIFG </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_WAFG </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_WALIE </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_WALE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RTC  --------------------------------------
// SVD Line: 4074

//  <view> RTC
//    <name> RTC </name>
//    <item> SFDITEM_REG__RTC_SUBCUD </item>
//    <item> SFDITEM_REG__RTC_ITMC </item>
//    <item> SFDITEM_REG__RTC_SEC </item>
//    <item> SFDITEM_REG__RTC_MIN </item>
//    <item> SFDITEM_REG__RTC_HOUR </item>
//    <item> SFDITEM_REG__RTC_WEEK </item>
//    <item> SFDITEM_REG__RTC_DAY </item>
//    <item> SFDITEM_REG__RTC_MONTH </item>
//    <item> SFDITEM_REG__RTC_YEAR </item>
//    <item> SFDITEM_REG__RTC_ALARMWM </item>
//    <item> SFDITEM_REG__RTC_ALARMWH </item>
//    <item> SFDITEM_REG__RTC_ALARMWW </item>
//    <item> SFDITEM_REG__RTC_RTCC0 </item>
//    <item> SFDITEM_REG__RTC_RTCC1 </item>
//  </view>
//  


// ----------------------------  Register Item Address: PCBZ_CKS0  --------------------------------
// SVD Line: 4344

unsigned char PCBZ_CKS0 __AT (0x40040FA5);



// --------------------------------  Field Item: PCBZ_CKS0_CCS  -----------------------------------
// SVD Line: 4353

//  <item> SFDITEM_FIELD__PCBZ_CKS0_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40040FA5) PCLBUZn output clock select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PCBZ_CKS0 >> 0) & 0x7), ((PCBZ_CKS0 = (PCBZ_CKS0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: PCBZ_CKS0_CSEL  -----------------------------------
// SVD Line: 4359

//  <item> SFDITEM_FIELD__PCBZ_CKS0_CSEL
//    <name> CSEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40040FA5) PCLBUZn output clock select </i>
//    <check> 
//      <loc> ( (unsigned char) PCBZ_CKS0 ) </loc>
//      <o.3..3> CSEL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PCBZ_CKS0_PCLOE  ----------------------------------
// SVD Line: 4365

//  <item> SFDITEM_FIELD__PCBZ_CKS0_PCLOE
//    <name> PCLOE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40040FA5) PCLBUZn pin output enable </i>
//    <check> 
//      <loc> ( (unsigned char) PCBZ_CKS0 ) </loc>
//      <o.7..7> PCLOE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PCBZ_CKS0  -----------------------------------
// SVD Line: 4344

//  <rtree> SFDITEM_REG__PCBZ_CKS0
//    <name> CKS0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040FA5) Clock output select registers 0 </i>
//    <loc> ( (unsigned char)((PCBZ_CKS0 >> 0) & 0xFF), ((PCBZ_CKS0 = (PCBZ_CKS0 & ~(0x8FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCBZ_CKS0_CCS </item>
//    <item> SFDITEM_FIELD__PCBZ_CKS0_CSEL </item>
//    <item> SFDITEM_FIELD__PCBZ_CKS0_PCLOE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PCBZ_CKS1  --------------------------------
// SVD Line: 4374

unsigned char PCBZ_CKS1 __AT (0x40040FA6);



// --------------------------------  Field Item: PCBZ_CKS1_CCS  -----------------------------------
// SVD Line: 4353

//  <item> SFDITEM_FIELD__PCBZ_CKS1_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40040FA6) PCLBUZn output clock select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PCBZ_CKS1 >> 0) & 0x7), ((PCBZ_CKS1 = (PCBZ_CKS1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: PCBZ_CKS1_CSEL  -----------------------------------
// SVD Line: 4359

//  <item> SFDITEM_FIELD__PCBZ_CKS1_CSEL
//    <name> CSEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40040FA6) PCLBUZn output clock select </i>
//    <check> 
//      <loc> ( (unsigned char) PCBZ_CKS1 ) </loc>
//      <o.3..3> CSEL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PCBZ_CKS1_PCLOE  ----------------------------------
// SVD Line: 4365

//  <item> SFDITEM_FIELD__PCBZ_CKS1_PCLOE
//    <name> PCLOE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40040FA6) PCLBUZn pin output enable </i>
//    <check> 
//      <loc> ( (unsigned char) PCBZ_CKS1 ) </loc>
//      <o.7..7> PCLOE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PCBZ_CKS1  -----------------------------------
// SVD Line: 4374

//  <rtree> SFDITEM_REG__PCBZ_CKS1
//    <name> CKS1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040FA6) Clock output select registers 1 </i>
//    <loc> ( (unsigned char)((PCBZ_CKS1 >> 0) & 0xFF), ((PCBZ_CKS1 = (PCBZ_CKS1 & ~(0x8FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCBZ_CKS1_CCS </item>
//    <item> SFDITEM_FIELD__PCBZ_CKS1_CSEL </item>
//    <item> SFDITEM_FIELD__PCBZ_CKS1_PCLOE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: PCBZ  -------------------------------------
// SVD Line: 4328

//  <view> PCBZ
//    <name> PCBZ </name>
//    <item> SFDITEM_REG__PCBZ_CKS0 </item>
//    <item> SFDITEM_REG__PCBZ_CKS1 </item>
//  </view>
//  


// -----------------------------  Register Item Address: WDT_WDTE  --------------------------------
// SVD Line: 4400

unsigned char WDT_WDTE __AT (0x40021001);



// ---------------------------------  Register Item: WDT_WDTE  ------------------------------------
// SVD Line: 4400

//  <item> SFDITEM_REG__WDT_WDTE
//    <name> WDTE </name>
//    <i> [Bits 7..0] RW (@ 0x40021001) Watchdog timer enable register </i>
//    <edit> 
//      <loc> ( (unsigned char)((WDT_WDTE >> 0) & 0xFFFFFFFF), ((WDT_WDTE = (WDT_WDTE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: WDT  --------------------------------------
// SVD Line: 4384

//  <view> WDT
//    <name> WDT </name>
//    <item> SFDITEM_REG__WDT_WDTE </item>
//  </view>
//  


// -----------------------------  Register Item Address: ADC_ADM0  --------------------------------
// SVD Line: 4433

unsigned char ADC_ADM0 __AT (0x40045000);



// --------------------------------  Field Item: ADC_ADM0_ADCE  -----------------------------------
// SVD Line: 4442

//  <item> SFDITEM_FIELD__ADC_ADM0_ADCE
//    <name> ADCE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40045000) A/D enable </i>
//    <check> 
//      <loc> ( (unsigned char) ADC_ADM0 ) </loc>
//      <o.0..0> ADCE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ADC_ADM0_FR  ------------------------------------
// SVD Line: 4448

//  <item> SFDITEM_FIELD__ADC_ADM0_FR
//    <name> FR </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40045000) A/D conversion clock (fAD) select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADM0 >> 3) & 0x7), ((ADC_ADM0 = (ADC_ADM0 & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: ADC_ADM0_ADCS  -----------------------------------
// SVD Line: 4454

//  <item> SFDITEM_FIELD__ADC_ADM0_ADCS
//    <name> ADCS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40045000) A/D conversion operation control </i>
//    <check> 
//      <loc> ( (unsigned char) ADC_ADM0 ) </loc>
//      <o.7..7> ADCS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ADC_ADM0  ------------------------------------
// SVD Line: 4433

//  <rtree> SFDITEM_REG__ADC_ADM0
//    <name> ADM0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045000) A/D mode register 0 </i>
//    <loc> ( (unsigned char)((ADC_ADM0 >> 0) & 0xFF), ((ADC_ADM0 = (ADC_ADM0 & ~(0xB9UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xB9) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADM0_ADCE </item>
//    <item> SFDITEM_FIELD__ADC_ADM0_FR </item>
//    <item> SFDITEM_FIELD__ADC_ADM0_ADCS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_ADM1  --------------------------------
// SVD Line: 4463

unsigned char ADC_ADM1 __AT (0x40045002);



// -------------------------------  Field Item: ADC_ADM1_ADMODE  ----------------------------------
// SVD Line: 4472

//  <item> SFDITEM_FIELD__ADC_ADM1_ADMODE
//    <name> ADMODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40045002) A/D mode select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADM1 >> 0) & 0x3), ((ADC_ADM1 = (ADC_ADM1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADM1_ADSCM  -----------------------------------
// SVD Line: 4478

//  <item> SFDITEM_FIELD__ADC_ADM1_ADSCM
//    <name> ADSCM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045002) \nA/D conversion mode\n0 : Sequential = Sequential conversion mode\n1 : OneShot = One-shot conversion mode </i>
//    <combo> 
//      <loc> ( (unsigned char) ADC_ADM1 ) </loc>
//      <o.3..3> ADSCM
//        <0=> 0: Sequential = Sequential conversion mode
//        <1=> 1: OneShot = One-shot conversion mode
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_ADM1_ADMD  -----------------------------------
// SVD Line: 4497

//  <item> SFDITEM_FIELD__ADC_ADM1_ADMD
//    <name> ADMD </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40045002) \nA/D conversion channel select mode\n0 : Select = Select mode\n1 : Scan = Scan mode </i>
//    <combo> 
//      <loc> ( (unsigned char) ADC_ADM1 ) </loc>
//      <o.7..7> ADMD
//        <0=> 0: Select = Select mode
//        <1=> 1: Scan = Scan mode
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ADC_ADM1  ------------------------------------
// SVD Line: 4463

//  <rtree> SFDITEM_REG__ADC_ADM1
//    <name> ADM1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045002) A/D mode register 1 </i>
//    <loc> ( (unsigned char)((ADC_ADM1 >> 0) & 0xFF), ((ADC_ADM1 = (ADC_ADM1 & ~(0x8BUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8B) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADM1_ADMODE </item>
//    <item> SFDITEM_FIELD__ADC_ADM1_ADSCM </item>
//    <item> SFDITEM_FIELD__ADC_ADM1_ADMD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_ADM2  --------------------------------
// SVD Line: 4518

unsigned char ADC_ADM2 __AT (0x40045004);



// -------------------------------  Field Item: ADC_ADM2_CHRDE  -----------------------------------
// SVD Line: 4527

//  <item> SFDITEM_FIELD__ADC_ADM2_CHRDE
//    <name> CHRDE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40045004) output CH number in A/D conversion result in Scan mode </i>
//    <check> 
//      <loc> ( (unsigned char) ADC_ADM2 ) </loc>
//      <o.1..1> CHRDE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADM2_ADRCK  -----------------------------------
// SVD Line: 4533

//  <item> SFDITEM_FIELD__ADC_ADM2_ADRCK
//    <name> ADRCK </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045004) the upper limit and lower limit conversion result values </i>
//    <check> 
//      <loc> ( (unsigned char) ADC_ADM2 ) </loc>
//      <o.3..3> ADRCK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADM2_ADREFM  ----------------------------------
// SVD Line: 4539

//  <item> SFDITEM_FIELD__ADC_ADM2_ADREFM
//    <name> ADREFM </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40045004) \nSelection of the - side reference voltage of A/D converter\n0 : VSS = Supplied from VSS\n1 : AVREFM = Supplied from AVREFM </i>
//    <combo> 
//      <loc> ( (unsigned char) ADC_ADM2 ) </loc>
//      <o.5..5> ADREFM
//        <0=> 0: VSS = Supplied from VSS
//        <1=> 1: AVREFM = Supplied from AVREFM
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADM2_ADREFP  ----------------------------------
// SVD Line: 4557

//  <item> SFDITEM_FIELD__ADC_ADM2_ADREFP
//    <name> ADREFP </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40045004) \nSelection of the + side reference voltage of A/D converter\n0 : VDD = Supplied from VDD\n1 : AVREFP0 = Supplied from AVREFP\n2 : AVREFP1 = Supplied from inside AVREF of A/D\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) ADC_ADM2 ) </loc>
//      <o.7..6> ADREFP
//        <0=> 0: VDD = Supplied from VDD
//        <1=> 1: AVREFP0 = Supplied from AVREFP
//        <2=> 2: AVREFP1 = Supplied from inside AVREF of A/D
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ADC_ADM2  ------------------------------------
// SVD Line: 4518

//  <rtree> SFDITEM_REG__ADC_ADM2
//    <name> ADM2 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045004) A/D mode register 2 </i>
//    <loc> ( (unsigned char)((ADC_ADM2 >> 0) & 0xFF), ((ADC_ADM2 = (ADC_ADM2 & ~(0xEAUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xEA) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADM2_CHRDE </item>
//    <item> SFDITEM_FIELD__ADC_ADM2_ADRCK </item>
//    <item> SFDITEM_FIELD__ADC_ADM2_ADREFM </item>
//    <item> SFDITEM_FIELD__ADC_ADM2_ADREFP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ADC_ADTRG  --------------------------------
// SVD Line: 4583

unsigned char ADC_ADTRG __AT (0x40045006);



// -------------------------------  Field Item: ADC_ADTRG_ADTMD  ----------------------------------
// SVD Line: 4592

//  <item> SFDITEM_FIELD__ADC_ADTRG_ADTMD
//    <name> ADTMD </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40045006) A/D conversion trigger mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADTRG >> 6) & 0x3), ((ADC_ADTRG = (ADC_ADTRG & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADTRG_ADTRS  ----------------------------------
// SVD Line: 4598

//  <item> SFDITEM_FIELD__ADC_ADTRG_ADTRS
//    <name> ADTRS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40045006) A/D hard trigger select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADTRG >> 0) & 0x3), ((ADC_ADTRG = (ADC_ADTRG & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: ADC_ADTRG  -----------------------------------
// SVD Line: 4583

//  <rtree> SFDITEM_REG__ADC_ADTRG
//    <name> ADTRG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045006) A/D mode register 2 </i>
//    <loc> ( (unsigned char)((ADC_ADTRG >> 0) & 0xFF), ((ADC_ADTRG = (ADC_ADTRG & ~(0xC3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xC3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADTRG_ADTMD </item>
//    <item> SFDITEM_FIELD__ADC_ADTRG_ADTRS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_ADS  ---------------------------------
// SVD Line: 4607

unsigned char ADC_ADS __AT (0x40045008);



// ---------------------------------  Register Item: ADC_ADS  -------------------------------------
// SVD Line: 4607

//  <item> SFDITEM_REG__ADC_ADS
//    <name> ADS </name>
//    <i> [Bits 7..0] RW (@ 0x40045008) Analog input channel specification register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADS >> 0) & 0xFFFFFFFF), ((ADC_ADS = (ADC_ADS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: ADC_ADCR  --------------------------------
// SVD Line: 4616

unsigned short ADC_ADCR __AT (0x4004500E);



// ---------------------------------  Register Item: ADC_ADCR  ------------------------------------
// SVD Line: 4616

//  <item> SFDITEM_REG__ADC_ADCR
//    <name> ADCR </name>
//    <i> [Bits 15..0] RW (@ 0x4004500E) 12-bit A/D conversion result register </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_ADCR >> 0) & 0xFFFFFFFF), ((ADC_ADCR = (ADC_ADCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: ADC_ADCRH  --------------------------------
// SVD Line: 4625

unsigned char ADC_ADCRH __AT (0x4004500F);



// --------------------------------  Register Item: ADC_ADCRH  ------------------------------------
// SVD Line: 4625

//  <item> SFDITEM_REG__ADC_ADCRH
//    <name> ADCRH </name>
//    <i> [Bits 7..0] RW (@ 0x4004500F) Higher 8-bit A/D conversion result register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADCRH >> 0) & 0xFFFFFFFF), ((ADC_ADCRH = (ADC_ADCRH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: ADC_ADUL  --------------------------------
// SVD Line: 4633

unsigned char ADC_ADUL __AT (0x4004500B);



// ---------------------------------  Register Item: ADC_ADUL  ------------------------------------
// SVD Line: 4633

//  <item> SFDITEM_REG__ADC_ADUL
//    <name> ADUL </name>
//    <i> [Bits 7..0] RW (@ 0x4004500B) Conversion result comparison upper limit setting register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADUL >> 0) & 0xFFFFFFFF), ((ADC_ADUL = (ADC_ADUL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: ADC_ADLL  --------------------------------
// SVD Line: 4642

unsigned char ADC_ADLL __AT (0x4004500A);



// ---------------------------------  Register Item: ADC_ADLL  ------------------------------------
// SVD Line: 4642

//  <item> SFDITEM_REG__ADC_ADLL
//    <name> ADLL </name>
//    <i> [Bits 7..0] RW (@ 0x4004500A) Conversion result comparison lower limit setting register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADLL >> 0) & 0xFFFFFFFF), ((ADC_ADLL = (ADC_ADLL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: ADC_ADTES  --------------------------------
// SVD Line: 4651

unsigned char ADC_ADTES __AT (0x40045010);



// --------------------------------  Register Item: ADC_ADTES  ------------------------------------
// SVD Line: 4651

//  <item> SFDITEM_REG__ADC_ADTES
//    <name> ADTES </name>
//    <i> [Bits 7..0] RW (@ 0x40045010) A/D test register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADTES >> 0) & 0xFFFFFFFF), ((ADC_ADTES = (ADC_ADTES & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: ADC_ADFLG  --------------------------------
// SVD Line: 4660

unsigned char ADC_ADFLG __AT (0x40045016);



// --------------------------------  Register Item: ADC_ADFLG  ------------------------------------
// SVD Line: 4660

//  <item> SFDITEM_REG__ADC_ADFLG
//    <name> ADFLG </name>
//    <i> [Bits 7..0] RW (@ 0x40045016) A/D flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADFLG >> 0) & 0xFFFFFFFF), ((ADC_ADFLG = (ADC_ADFLG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: ADC_ADNSMP  -------------------------------
// SVD Line: 4669

unsigned char ADC_ADNSMP __AT (0x4004500C);



// --------------------------------  Register Item: ADC_ADNSMP  -----------------------------------
// SVD Line: 4669

//  <item> SFDITEM_REG__ADC_ADNSMP
//    <name> ADNSMP </name>
//    <i> [Bits 7..0] RW (@ 0x4004500C) A/D sampling time control register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADNSMP >> 0) & 0xFFFFFFFF), ((ADC_ADNSMP = (ADC_ADNSMP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: ADC_ADSMPWAIT  ------------------------------
// SVD Line: 4678

unsigned char ADC_ADSMPWAIT __AT (0x40045015);



// ------------------------------  Register Item: ADC_ADSMPWAIT  ----------------------------------
// SVD Line: 4678

//  <item> SFDITEM_REG__ADC_ADSMPWAIT
//    <name> ADSMPWAIT </name>
//    <i> [Bits 7..0] RW (@ 0x40045015) A/D sampling wait control register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADSMPWAIT >> 0) & 0xFFFFFFFF), ((ADC_ADSMPWAIT = (ADC_ADSMPWAIT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: ADC_ADNDIS  -------------------------------
// SVD Line: 4687

unsigned char ADC_ADNDIS __AT (0x40045011);



// --------------------------------  Register Item: ADC_ADNDIS  -----------------------------------
// SVD Line: 4687

//  <item> SFDITEM_REG__ADC_ADNDIS
//    <name> ADNDIS </name>
//    <i> [Bits 7..0] RW (@ 0x40045011) A/D charge/discharge control register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADNDIS >> 0) & 0xFFFFFFFF), ((ADC_ADNDIS = (ADC_ADNDIS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: ADC  --------------------------------------
// SVD Line: 4411

//  <view> ADC
//    <name> ADC </name>
//    <item> SFDITEM_REG__ADC_ADM0 </item>
//    <item> SFDITEM_REG__ADC_ADM1 </item>
//    <item> SFDITEM_REG__ADC_ADM2 </item>
//    <item> SFDITEM_REG__ADC_ADTRG </item>
//    <item> SFDITEM_REG__ADC_ADS </item>
//    <item> SFDITEM_REG__ADC_ADCR </item>
//    <item> SFDITEM_REG__ADC_ADCRH </item>
//    <item> SFDITEM_REG__ADC_ADUL </item>
//    <item> SFDITEM_REG__ADC_ADLL </item>
//    <item> SFDITEM_REG__ADC_ADTES </item>
//    <item> SFDITEM_REG__ADC_ADFLG </item>
//    <item> SFDITEM_REG__ADC_ADNSMP </item>
//    <item> SFDITEM_REG__ADC_ADSMPWAIT </item>
//    <item> SFDITEM_REG__ADC_ADNDIS </item>
//  </view>
//  


// ----------------------------  Register Item Address: DAC_DACS0  --------------------------------
// SVD Line: 4716

unsigned char DAC_DACS0 __AT (0x40044734);



// --------------------------------  Register Item: DAC_DACS0  ------------------------------------
// SVD Line: 4716

//  <item> SFDITEM_REG__DAC_DACS0
//    <name> DACS0 </name>
//    <i> [Bits 7..0] RW (@ 0x40044734) D/A conversion value setting register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DACS0 >> 0) & 0xFFFFFFFF), ((DAC_DACS0 = (DAC_DACS0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DAC_DACS1  --------------------------------
// SVD Line: 4724

unsigned char DAC_DACS1 __AT (0x40044735);



// --------------------------------  Register Item: DAC_DACS1  ------------------------------------
// SVD Line: 4724

//  <item> SFDITEM_REG__DAC_DACS1
//    <name> DACS1 </name>
//    <i> [Bits 7..0] RW (@ 0x40044735) D/A conversion value setting register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_DACS1 >> 0) & 0xFFFFFFFF), ((DAC_DACS1 = (DAC_DACS1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: DAC_DAM  ---------------------------------
// SVD Line: 4730

unsigned char DAC_DAM __AT (0x40044736);



// --------------------------------  Field Item: DAC_DAM_DAMD0  -----------------------------------
// SVD Line: 4738

//  <item> SFDITEM_FIELD__DAC_DAM_DAMD0
//    <name> DAMD0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40044736) D/A converter operation mode selection </i>
//    <check> 
//      <loc> ( (unsigned char) DAC_DAM ) </loc>
//      <o.0..0> DAMD0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DAC_DAM_DAMD1  -----------------------------------
// SVD Line: 4744

//  <item> SFDITEM_FIELD__DAC_DAM_DAMD1
//    <name> DAMD1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40044736) D/A converter operation mode selection </i>
//    <check> 
//      <loc> ( (unsigned char) DAC_DAM ) </loc>
//      <o.1..1> DAMD1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DAC_DAM_DACE0  -----------------------------------
// SVD Line: 4750

//  <item> SFDITEM_FIELD__DAC_DAM_DACE0
//    <name> DACE0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40044736) D/A converter operation control </i>
//    <check> 
//      <loc> ( (unsigned char) DAC_DAM ) </loc>
//      <o.4..4> DACE0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: DAC_DAM_DACE1  -----------------------------------
// SVD Line: 4756

//  <item> SFDITEM_FIELD__DAC_DAM_DACE1
//    <name> DACE1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40044736) D/A converter operation control </i>
//    <check> 
//      <loc> ( (unsigned char) DAC_DAM ) </loc>
//      <o.5..5> DACE1
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: DAC_DAM  ------------------------------------
// SVD Line: 4730

//  <rtree> SFDITEM_REG__DAC_DAM
//    <name> DAM </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40044736) D/A conversion mode register </i>
//    <loc> ( (unsigned char)((DAC_DAM >> 0) & 0xFF), ((DAC_DAM = (DAC_DAM & ~(0x33UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x33) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DAM_DAMD0 </item>
//    <item> SFDITEM_FIELD__DAC_DAM_DAMD1 </item>
//    <item> SFDITEM_FIELD__DAC_DAM_DACE0 </item>
//    <item> SFDITEM_FIELD__DAC_DAM_DACE1 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: DAC  --------------------------------------
// SVD Line: 4700

//  <view> DAC
//    <name> DAC </name>
//    <item> SFDITEM_REG__DAC_DACS0 </item>
//    <item> SFDITEM_REG__DAC_DACS1 </item>
//    <item> SFDITEM_REG__DAC_DAM </item>
//  </view>
//  


// ---------------------------  Register Item Address: CMP_COMPMDR  -------------------------------
// SVD Line: 4797

unsigned char CMP_COMPMDR __AT (0x40043840);



// ------------------------------  Field Item: CMP_COMPMDR_C0ENB  ---------------------------------
// SVD Line: 4805

//  <item> SFDITEM_FIELD__CMP_COMPMDR_C0ENB
//    <name> C0ENB </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40043840) Comparator 0 operation enable </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPMDR ) </loc>
//      <o.0..0> C0ENB
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPMDR_C0MON  ---------------------------------
// SVD Line: 4811

//  <item> SFDITEM_FIELD__CMP_COMPMDR_C0MON
//    <name> C0MON </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40043840) Comparator 0 monitor flag </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPMDR ) </loc>
//      <o.3..3> C0MON
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPMDR_C1ENB  ---------------------------------
// SVD Line: 4817

//  <item> SFDITEM_FIELD__CMP_COMPMDR_C1ENB
//    <name> C1ENB </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40043840) Comparator 1 operation enable </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPMDR ) </loc>
//      <o.4..4> C1ENB
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPMDR_C1MON  ---------------------------------
// SVD Line: 4823

//  <item> SFDITEM_FIELD__CMP_COMPMDR_C1MON
//    <name> C1MON </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40043840) Comparator 1 monitor flag </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPMDR ) </loc>
//      <o.7..7> C1MON
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CMP_COMPMDR  ----------------------------------
// SVD Line: 4797

//  <rtree> SFDITEM_REG__CMP_COMPMDR
//    <name> COMPMDR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043840) Comparator mode setting register </i>
//    <loc> ( (unsigned char)((CMP_COMPMDR >> 0) & 0xFF), ((CMP_COMPMDR = (CMP_COMPMDR & ~(0x99UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x99) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_COMPMDR_C0ENB </item>
//    <item> SFDITEM_FIELD__CMP_COMPMDR_C0MON </item>
//    <item> SFDITEM_FIELD__CMP_COMPMDR_C1ENB </item>
//    <item> SFDITEM_FIELD__CMP_COMPMDR_C1MON </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMP_COMPFIR  -------------------------------
// SVD Line: 4831

unsigned char CMP_COMPFIR __AT (0x40043841);



// ------------------------------  Field Item: CMP_COMPFIR_C0FCK  ---------------------------------
// SVD Line: 4839

//  <item> SFDITEM_FIELD__CMP_COMPFIR_C0FCK
//    <name> C0FCK </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40043841) Comparator 0 filter selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_COMPFIR >> 0) & 0x3), ((CMP_COMPFIR = (CMP_COMPFIR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPFIR_C0EPO  ---------------------------------
// SVD Line: 4845

//  <item> SFDITEM_FIELD__CMP_COMPFIR_C0EPO
//    <name> C0EPO </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40043841) Comparator 0 edge polarity switching </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPFIR ) </loc>
//      <o.2..2> C0EPO
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPFIR_C0EDG  ---------------------------------
// SVD Line: 4851

//  <item> SFDITEM_FIELD__CMP_COMPFIR_C0EDG
//    <name> C0EDG </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40043841) Comparator 0 edge detection selection </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPFIR ) </loc>
//      <o.3..3> C0EDG
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPFIR_C1FCK  ---------------------------------
// SVD Line: 4857

//  <item> SFDITEM_FIELD__CMP_COMPFIR_C1FCK
//    <name> C1FCK </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40043841) Comparator 1 filter selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_COMPFIR >> 4) & 0x3), ((CMP_COMPFIR = (CMP_COMPFIR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPFIR_C1EPO  ---------------------------------
// SVD Line: 4863

//  <item> SFDITEM_FIELD__CMP_COMPFIR_C1EPO
//    <name> C1EPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40043841) Comparator 1 edge polarity switching </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPFIR ) </loc>
//      <o.6..6> C1EPO
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPFIR_C1EDG  ---------------------------------
// SVD Line: 4869

//  <item> SFDITEM_FIELD__CMP_COMPFIR_C1EDG
//    <name> C1EDG </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40043841) Comparator 1 edge detection selection </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPFIR ) </loc>
//      <o.7..7> C1EDG
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CMP_COMPFIR  ----------------------------------
// SVD Line: 4831

//  <rtree> SFDITEM_REG__CMP_COMPFIR
//    <name> COMPFIR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043841) Comparator filter control register </i>
//    <loc> ( (unsigned char)((CMP_COMPFIR >> 0) & 0xFF), ((CMP_COMPFIR = (CMP_COMPFIR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_COMPFIR_C0FCK </item>
//    <item> SFDITEM_FIELD__CMP_COMPFIR_C0EPO </item>
//    <item> SFDITEM_FIELD__CMP_COMPFIR_C0EDG </item>
//    <item> SFDITEM_FIELD__CMP_COMPFIR_C1FCK </item>
//    <item> SFDITEM_FIELD__CMP_COMPFIR_C1EPO </item>
//    <item> SFDITEM_FIELD__CMP_COMPFIR_C1EDG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMP_COMPOCR  -------------------------------
// SVD Line: 4878

unsigned char CMP_COMPOCR __AT (0x40043842);



// ------------------------------  Field Item: CMP_COMPOCR_C0IE  ----------------------------------
// SVD Line: 4886

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C0IE
//    <name> C0IE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40043842) Comparator 0 interrupt request enable </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.0..0> C0IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPOCR_C0OE  ----------------------------------
// SVD Line: 4892

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C0OE
//    <name> C0OE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40043842) VOUT0 pin output enable </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.1..1> C0OE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPOCR_C0OP  ----------------------------------
// SVD Line: 4898

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C0OP
//    <name> C0OP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40043842) VOUT0 output polarity selection </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.2..2> C0OP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPOCR_C1IE  ----------------------------------
// SVD Line: 4904

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C1IE
//    <name> C1IE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40043842) Comparator 1 interrupt request enable </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.4..4> C1IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPOCR_C1OE  ----------------------------------
// SVD Line: 4910

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C1OE
//    <name> C1OE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40043842) VOUT1 pin output enable </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.5..5> C1OE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPOCR_C1OP  ----------------------------------
// SVD Line: 4916

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C1OP
//    <name> C1OP </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40043842) VOUT1 output polarity selection </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.6..6> C1OP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMP_COMPOCR_C1OTWMD  --------------------------------
// SVD Line: 4922

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C1OTWMD
//    <name> C1OTWMD </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40043842) TIMER WINDOW output mode control bit of comparator 1 </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.7..7> C1OTWMD
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CMP_COMPOCR  ----------------------------------
// SVD Line: 4878

//  <rtree> SFDITEM_REG__CMP_COMPOCR
//    <name> COMPOCR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043842) Comparator output control register </i>
//    <loc> ( (unsigned char)((CMP_COMPOCR >> 0) & 0xFF), ((CMP_COMPOCR = (CMP_COMPOCR & ~(0xF7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C0IE </item>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C0OE </item>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C0OP </item>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C1IE </item>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C1OE </item>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C1OP </item>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C1OTWMD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CMP_CVRCTL  -------------------------------
// SVD Line: 4931

unsigned char CMP_CVRCTL __AT (0x40043843);



// ------------------------------  Field Item: CMP_CVRCTL_CVRVS0  ---------------------------------
// SVD Line: 4939

//  <item> SFDITEM_FIELD__CMP_CVRCTL_CVRVS0
//    <name> CVRVS0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40043843) Power supply selection bit for internal reference voltage </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_CVRCTL ) </loc>
//      <o.0..0> CVRVS0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_CVRCTL_CVRE0  ----------------------------------
// SVD Line: 4945

//  <item> SFDITEM_FIELD__CMP_CVRCTL_CVRE0
//    <name> CVRE0 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40043843) Control bit for internal reference voltage 0 </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_CVRCTL ) </loc>
//      <o.1..1> CVRE0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_CVRCTL_CVRVS1  ---------------------------------
// SVD Line: 4951

//  <item> SFDITEM_FIELD__CMP_CVRCTL_CVRVS1
//    <name> CVRVS1 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40043843) Ground selection bit for internal reference voltage </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_CVRCTL ) </loc>
//      <o.4..4> CVRVS1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_CVRCTL_CVRE1  ----------------------------------
// SVD Line: 4957

//  <item> SFDITEM_FIELD__CMP_CVRCTL_CVRE1
//    <name> CVRE1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40043843) Control bit for internal reference voltage 1 </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_CVRCTL ) </loc>
//      <o.5..5> CVRE1
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CMP_CVRCTL  -----------------------------------
// SVD Line: 4931

//  <rtree> SFDITEM_REG__CMP_CVRCTL
//    <name> CVRCTL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043843) Comparator internal reference voltage control register </i>
//    <loc> ( (unsigned char)((CMP_CVRCTL >> 0) & 0xFF), ((CMP_CVRCTL = (CMP_CVRCTL & ~(0x33UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x33) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_CVRCTL_CVRVS0 </item>
//    <item> SFDITEM_FIELD__CMP_CVRCTL_CVRE0 </item>
//    <item> SFDITEM_FIELD__CMP_CVRCTL_CVRVS1 </item>
//    <item> SFDITEM_FIELD__CMP_CVRCTL_CVRE1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CMP_C0RVM  --------------------------------
// SVD Line: 4966

unsigned char CMP_C0RVM __AT (0x40043844);



// --------------------------------  Register Item: CMP_C0RVM  ------------------------------------
// SVD Line: 4966

//  <item> SFDITEM_REG__CMP_C0RVM
//    <name> C0RVM </name>
//    <i> [Bits 7..0] RW (@ 0x40043844) Comparator internal reference voltage select register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_C0RVM >> 0) & 0xFFFFFFFF), ((CMP_C0RVM = (CMP_C0RVM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CMP_C1RVM  --------------------------------
// SVD Line: 4974

unsigned char CMP_C1RVM __AT (0x40043845);



// --------------------------------  Register Item: CMP_C1RVM  ------------------------------------
// SVD Line: 4974

//  <item> SFDITEM_REG__CMP_C1RVM
//    <name> C1RVM </name>
//    <i> [Bits 7..0] RW (@ 0x40043845) Comparator internal reference voltage select register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_C1RVM >> 0) & 0xFFFFFFFF), ((CMP_C1RVM = (CMP_C1RVM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: CMP_CMPSEL0  -------------------------------
// SVD Line: 4980

unsigned char CMP_CMPSEL0 __AT (0x4004384A);



// -----------------------------  Field Item: CMP_CMPSEL0_C0REFS  ---------------------------------
// SVD Line: 4988

//  <item> SFDITEM_FIELD__CMP_CMPSEL0_C0REFS
//    <name> C0REFS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4004384A) Selection of the input signal on the negative side of Comparator 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_CMPSEL0 >> 0) & 0x3), ((CMP_CMPSEL0 = (CMP_CMPSEL0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CMP_CMPSEL0_CMP0SEL  --------------------------------
// SVD Line: 4994

//  <item> SFDITEM_FIELD__CMP_CMPSEL0_CMP0SEL
//    <name> CMP0SEL </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004384A) Selection of the input signal on the positive side of Comparator 0 </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_CMPSEL0 ) </loc>
//      <o.7..7> CMP0SEL
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CMP_CMPSEL0  ----------------------------------
// SVD Line: 4980

//  <rtree> SFDITEM_REG__CMP_CMPSEL0
//    <name> CMPSEL0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004384A) Comparator 0 input signal selection control register </i>
//    <loc> ( (unsigned char)((CMP_CMPSEL0 >> 0) & 0xFF), ((CMP_CMPSEL0 = (CMP_CMPSEL0 & ~(0x83UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x83) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_CMPSEL0_C0REFS </item>
//    <item> SFDITEM_FIELD__CMP_CMPSEL0_CMP0SEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMP_CMPSEL1  -------------------------------
// SVD Line: 5003

unsigned char CMP_CMPSEL1 __AT (0x4004384B);



// -----------------------------  Field Item: CMP_CMPSEL1_C1REFS  ---------------------------------
// SVD Line: 5011

//  <item> SFDITEM_FIELD__CMP_CMPSEL1_C1REFS
//    <name> C1REFS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4004384B) Selection of the input signal on the negative side of Comparator 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_CMPSEL1 >> 0) & 0x7), ((CMP_CMPSEL1 = (CMP_CMPSEL1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CMP_CMPSEL1_CMP1SEL  --------------------------------
// SVD Line: 5017

//  <item> SFDITEM_FIELD__CMP_CMPSEL1_CMP1SEL
//    <name> CMP1SEL </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x4004384B) Selection of the input signal on the positive side of Comparator 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_CMPSEL1 >> 6) & 0x3), ((CMP_CMPSEL1 = (CMP_CMPSEL1 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CMP_CMPSEL1  ----------------------------------
// SVD Line: 5003

//  <rtree> SFDITEM_REG__CMP_CMPSEL1
//    <name> CMPSEL1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004384B) Comparator 1 input signal selection control register </i>
//    <loc> ( (unsigned char)((CMP_CMPSEL1 >> 0) & 0xFF), ((CMP_CMPSEL1 = (CMP_CMPSEL1 & ~(0xC7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xC7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_CMPSEL1_C1REFS </item>
//    <item> SFDITEM_FIELD__CMP_CMPSEL1_CMP1SEL </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: CMP  --------------------------------------
// SVD Line: 4769

//  <view> CMP
//    <name> CMP </name>
//    <item> SFDITEM_REG__CMP_COMPMDR </item>
//    <item> SFDITEM_REG__CMP_COMPFIR </item>
//    <item> SFDITEM_REG__CMP_COMPOCR </item>
//    <item> SFDITEM_REG__CMP_CVRCTL </item>
//    <item> SFDITEM_REG__CMP_C0RVM </item>
//    <item> SFDITEM_REG__CMP_C1RVM </item>
//    <item> SFDITEM_REG__CMP_CMPSEL0 </item>
//    <item> SFDITEM_REG__CMP_CMPSEL1 </item>
//  </view>
//  


// ---------------------------  Register Item Address: PGA_PGA0CTL  -------------------------------
// SVD Line: 5047

unsigned char PGA_PGA0CTL __AT (0x40043846);



// ------------------------------  Field Item: PGA_PGA0CTL_PGAVG  ---------------------------------
// SVD Line: 5055

//  <item> SFDITEM_FIELD__PGA_PGA0CTL_PGAVG
//    <name> PGAVG </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40043846) Programmable gain amplifier amplification factor selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((PGA_PGA0CTL >> 0) & 0x7), ((PGA_PGA0CTL = (PGA_PGA0CTL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PGA_PGA0CTL_PVRVS  ---------------------------------
// SVD Line: 5061

//  <item> SFDITEM_FIELD__PGA_PGA0CTL_PVRVS
//    <name> PVRVS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40043846) GND selection of feedback resistance of the programmable gain amplifier </i>
//    <check> 
//      <loc> ( (unsigned char) PGA_PGA0CTL ) </loc>
//      <o.3..3> PVRVS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PGA_PGA0CTL_PGAEN  ---------------------------------
// SVD Line: 5067

//  <item> SFDITEM_FIELD__PGA_PGA0CTL_PGAEN
//    <name> PGAEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40043846) Programmable gain amplifier operation control </i>
//    <check> 
//      <loc> ( (unsigned char) PGA_PGA0CTL ) </loc>
//      <o.7..7> PGAEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: PGA_PGA0CTL  ----------------------------------
// SVD Line: 5047

//  <rtree> SFDITEM_REG__PGA_PGA0CTL
//    <name> PGA0CTL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043846) PGA 0 control register </i>
//    <loc> ( (unsigned char)((PGA_PGA0CTL >> 0) & 0xFF), ((PGA_PGA0CTL = (PGA_PGA0CTL & ~(0x8FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PGA_PGA0CTL_PGAVG </item>
//    <item> SFDITEM_FIELD__PGA_PGA0CTL_PVRVS </item>
//    <item> SFDITEM_FIELD__PGA_PGA0CTL_PGAEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PGA_PGA1CTL  -------------------------------
// SVD Line: 5076

unsigned char PGA_PGA1CTL __AT (0x40043847);



// ------------------------------  Field Item: PGA_PGA1CTL_PGAVG  ---------------------------------
// SVD Line: 5055

//  <item> SFDITEM_FIELD__PGA_PGA1CTL_PGAVG
//    <name> PGAVG </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40043847) Programmable gain amplifier amplification factor selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((PGA_PGA1CTL >> 0) & 0x7), ((PGA_PGA1CTL = (PGA_PGA1CTL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PGA_PGA1CTL_PVRVS  ---------------------------------
// SVD Line: 5061

//  <item> SFDITEM_FIELD__PGA_PGA1CTL_PVRVS
//    <name> PVRVS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40043847) GND selection of feedback resistance of the programmable gain amplifier </i>
//    <check> 
//      <loc> ( (unsigned char) PGA_PGA1CTL ) </loc>
//      <o.3..3> PVRVS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PGA_PGA1CTL_PGAEN  ---------------------------------
// SVD Line: 5067

//  <item> SFDITEM_FIELD__PGA_PGA1CTL_PGAEN
//    <name> PGAEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40043847) Programmable gain amplifier operation control </i>
//    <check> 
//      <loc> ( (unsigned char) PGA_PGA1CTL ) </loc>
//      <o.7..7> PGAEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: PGA_PGA1CTL  ----------------------------------
// SVD Line: 5076

//  <rtree> SFDITEM_REG__PGA_PGA1CTL
//    <name> PGA1CTL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043847) PGA 1 control register </i>
//    <loc> ( (unsigned char)((PGA_PGA1CTL >> 0) & 0xFF), ((PGA_PGA1CTL = (PGA_PGA1CTL & ~(0x8FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PGA_PGA1CTL_PGAVG </item>
//    <item> SFDITEM_FIELD__PGA_PGA1CTL_PVRVS </item>
//    <item> SFDITEM_FIELD__PGA_PGA1CTL_PGAEN </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: PGA  --------------------------------------
// SVD Line: 5030

//  <view> PGA
//    <name> PGA </name>
//    <item> SFDITEM_REG__PGA_PGA0CTL </item>
//    <item> SFDITEM_REG__PGA_PGA1CTL </item>
//  </view>
//  


// ----------------------------  Register Item Address: SCI0_SSR00  -------------------------------
// SVD Line: 5186

unsigned short SCI0_SSR00 __AT (0x40041100);



// -------------------------------  Field Item: SCI0_SSR00_OVF  -----------------------------------
// SVD Line: 5194

//  <item> SFDITEM_FIELD__SCI0_SSR00_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041100) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR00_PEF  -----------------------------------
// SVD Line: 5200

//  <item> SFDITEM_FIELD__SCI0_SSR00_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041100) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR00_FEF  -----------------------------------
// SVD Line: 5206

//  <item> SFDITEM_FIELD__SCI0_SSR00_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041100) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR00_BFF  -----------------------------------
// SVD Line: 5212

//  <item> SFDITEM_FIELD__SCI0_SSR00_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041100) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR00_TSF  -----------------------------------
// SVD Line: 5218

//  <item> SFDITEM_FIELD__SCI0_SSR00_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041100) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SSR00  -----------------------------------
// SVD Line: 5186

//  <rtree> SFDITEM_REG__SCI0_SSR00
//    <name> SSR00 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041100) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI0_SSR00 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI0_SSR00_OVF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR00_PEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR00_FEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR00_BFF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR00_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SSR01  -------------------------------
// SVD Line: 5227

unsigned short SCI0_SSR01 __AT (0x40041102);



// -------------------------------  Field Item: SCI0_SSR01_OVF  -----------------------------------
// SVD Line: 5194

//  <item> SFDITEM_FIELD__SCI0_SSR01_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041102) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR01_PEF  -----------------------------------
// SVD Line: 5200

//  <item> SFDITEM_FIELD__SCI0_SSR01_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041102) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR01_FEF  -----------------------------------
// SVD Line: 5206

//  <item> SFDITEM_FIELD__SCI0_SSR01_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041102) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR01_BFF  -----------------------------------
// SVD Line: 5212

//  <item> SFDITEM_FIELD__SCI0_SSR01_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041102) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR01_TSF  -----------------------------------
// SVD Line: 5218

//  <item> SFDITEM_FIELD__SCI0_SSR01_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041102) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SSR01  -----------------------------------
// SVD Line: 5227

//  <rtree> SFDITEM_REG__SCI0_SSR01
//    <name> SSR01 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041102) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI0_SSR01 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI0_SSR01_OVF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR01_PEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR01_FEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR01_BFF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR01_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SSR02  -------------------------------
// SVD Line: 5233

unsigned short SCI0_SSR02 __AT (0x40041104);



// -------------------------------  Field Item: SCI0_SSR02_OVF  -----------------------------------
// SVD Line: 5194

//  <item> SFDITEM_FIELD__SCI0_SSR02_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041104) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR02 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR02_PEF  -----------------------------------
// SVD Line: 5200

//  <item> SFDITEM_FIELD__SCI0_SSR02_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041104) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR02 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR02_FEF  -----------------------------------
// SVD Line: 5206

//  <item> SFDITEM_FIELD__SCI0_SSR02_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041104) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR02 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR02_BFF  -----------------------------------
// SVD Line: 5212

//  <item> SFDITEM_FIELD__SCI0_SSR02_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041104) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR02 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR02_TSF  -----------------------------------
// SVD Line: 5218

//  <item> SFDITEM_FIELD__SCI0_SSR02_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041104) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR02 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SSR02  -----------------------------------
// SVD Line: 5233

//  <rtree> SFDITEM_REG__SCI0_SSR02
//    <name> SSR02 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041104) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI0_SSR02 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI0_SSR02_OVF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR02_PEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR02_FEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR02_BFF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR02_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SSR03  -------------------------------
// SVD Line: 5239

unsigned short SCI0_SSR03 __AT (0x40041106);



// -------------------------------  Field Item: SCI0_SSR03_OVF  -----------------------------------
// SVD Line: 5194

//  <item> SFDITEM_FIELD__SCI0_SSR03_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041106) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR03 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR03_PEF  -----------------------------------
// SVD Line: 5200

//  <item> SFDITEM_FIELD__SCI0_SSR03_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041106) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR03 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR03_FEF  -----------------------------------
// SVD Line: 5206

//  <item> SFDITEM_FIELD__SCI0_SSR03_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041106) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR03 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR03_BFF  -----------------------------------
// SVD Line: 5212

//  <item> SFDITEM_FIELD__SCI0_SSR03_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041106) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR03 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR03_TSF  -----------------------------------
// SVD Line: 5218

//  <item> SFDITEM_FIELD__SCI0_SSR03_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041106) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR03 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SSR03  -----------------------------------
// SVD Line: 5239

//  <rtree> SFDITEM_REG__SCI0_SSR03
//    <name> SSR03 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041106) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI0_SSR03 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI0_SSR03_OVF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR03_PEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR03_FEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR03_BFF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR03_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SIR00  -------------------------------
// SVD Line: 5245

unsigned short SCI0_SIR00 __AT (0x40041108);



// -------------------------------  Field Item: SCI0_SIR00_OVCT  ----------------------------------
// SVD Line: 5253

//  <item> SFDITEM_FIELD__SCI0_SIR00_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041108) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR00 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR00_PECT  ----------------------------------
// SVD Line: 5259

//  <item> SFDITEM_FIELD__SCI0_SIR00_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041108) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR00 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR00_FECT  ----------------------------------
// SVD Line: 5265

//  <item> SFDITEM_FIELD__SCI0_SIR00_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041108) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR00 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SIR00  -----------------------------------
// SVD Line: 5245

//  <rtree> SFDITEM_REG__SCI0_SIR00
//    <name> SIR00 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041108) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI0_SIR00 >> 0) & 0xFFFF), ((SCI0_SIR00 = (SCI0_SIR00 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SIR00_OVCT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR00_PECT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR00_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SIR01  -------------------------------
// SVD Line: 5273

unsigned short SCI0_SIR01 __AT (0x4004110A);



// -------------------------------  Field Item: SCI0_SIR01_OVCT  ----------------------------------
// SVD Line: 5253

//  <item> SFDITEM_FIELD__SCI0_SIR01_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004110A) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR01 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR01_PECT  ----------------------------------
// SVD Line: 5259

//  <item> SFDITEM_FIELD__SCI0_SIR01_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004110A) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR01 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR01_FECT  ----------------------------------
// SVD Line: 5265

//  <item> SFDITEM_FIELD__SCI0_SIR01_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4004110A) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR01 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SIR01  -----------------------------------
// SVD Line: 5273

//  <rtree> SFDITEM_REG__SCI0_SIR01
//    <name> SIR01 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004110A) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI0_SIR01 >> 0) & 0xFFFF), ((SCI0_SIR01 = (SCI0_SIR01 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SIR01_OVCT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR01_PECT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR01_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SIR02  -------------------------------
// SVD Line: 5279

unsigned short SCI0_SIR02 __AT (0x4004110C);



// -------------------------------  Field Item: SCI0_SIR02_OVCT  ----------------------------------
// SVD Line: 5253

//  <item> SFDITEM_FIELD__SCI0_SIR02_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004110C) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR02 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR02_PECT  ----------------------------------
// SVD Line: 5259

//  <item> SFDITEM_FIELD__SCI0_SIR02_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004110C) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR02 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR02_FECT  ----------------------------------
// SVD Line: 5265

//  <item> SFDITEM_FIELD__SCI0_SIR02_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4004110C) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR02 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SIR02  -----------------------------------
// SVD Line: 5279

//  <rtree> SFDITEM_REG__SCI0_SIR02
//    <name> SIR02 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004110C) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI0_SIR02 >> 0) & 0xFFFF), ((SCI0_SIR02 = (SCI0_SIR02 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SIR02_OVCT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR02_PECT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR02_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SIR03  -------------------------------
// SVD Line: 5285

unsigned short SCI0_SIR03 __AT (0x4004110E);



// -------------------------------  Field Item: SCI0_SIR03_OVCT  ----------------------------------
// SVD Line: 5253

//  <item> SFDITEM_FIELD__SCI0_SIR03_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004110E) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR03 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR03_PECT  ----------------------------------
// SVD Line: 5259

//  <item> SFDITEM_FIELD__SCI0_SIR03_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004110E) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR03 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR03_FECT  ----------------------------------
// SVD Line: 5265

//  <item> SFDITEM_FIELD__SCI0_SIR03_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4004110E) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR03 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SIR03  -----------------------------------
// SVD Line: 5285

//  <rtree> SFDITEM_REG__SCI0_SIR03
//    <name> SIR03 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004110E) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI0_SIR03 >> 0) & 0xFFFF), ((SCI0_SIR03 = (SCI0_SIR03 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SIR03_OVCT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR03_PECT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR03_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SMR00  -------------------------------
// SVD Line: 5291

unsigned short SCI0_SMR00 __AT (0x40041110);



// --------------------------------  Field Item: SCI0_SMR00_MD  -----------------------------------
// SVD Line: 5299

//  <item> SFDITEM_FIELD__SCI0_SMR00_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041110) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SMR00 >> 0) & 0xF), ((SCI0_SMR00 = (SCI0_SMR00 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR00_SIS  -----------------------------------
// SVD Line: 5305

//  <item> SFDITEM_FIELD__SCI0_SMR00_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041110) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR00 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR00_STS  -----------------------------------
// SVD Line: 5311

//  <item> SFDITEM_FIELD__SCI0_SMR00_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041110) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR00 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR00_CCS  -----------------------------------
// SVD Line: 5317

//  <item> SFDITEM_FIELD__SCI0_SMR00_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041110) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR00 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR00_CKS  -----------------------------------
// SVD Line: 5323

//  <item> SFDITEM_FIELD__SCI0_SMR00_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041110) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR00 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SMR00  -----------------------------------
// SVD Line: 5291

//  <rtree> SFDITEM_REG__SCI0_SMR00
//    <name> SMR00 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041110) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI0_SMR00 >> 0) & 0xFFFF), ((SCI0_SMR00 = (SCI0_SMR00 & ~(0xC14FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC14F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SMR00_MD </item>
//    <item> SFDITEM_FIELD__SCI0_SMR00_SIS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR00_STS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR00_CCS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR00_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SMR01  -------------------------------
// SVD Line: 5331

unsigned short SCI0_SMR01 __AT (0x40041112);



// --------------------------------  Field Item: SCI0_SMR01_MD  -----------------------------------
// SVD Line: 5299

//  <item> SFDITEM_FIELD__SCI0_SMR01_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041112) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SMR01 >> 0) & 0xF), ((SCI0_SMR01 = (SCI0_SMR01 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR01_SIS  -----------------------------------
// SVD Line: 5305

//  <item> SFDITEM_FIELD__SCI0_SMR01_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041112) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR01 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR01_STS  -----------------------------------
// SVD Line: 5311

//  <item> SFDITEM_FIELD__SCI0_SMR01_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041112) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR01 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR01_CCS  -----------------------------------
// SVD Line: 5317

//  <item> SFDITEM_FIELD__SCI0_SMR01_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041112) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR01 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR01_CKS  -----------------------------------
// SVD Line: 5323

//  <item> SFDITEM_FIELD__SCI0_SMR01_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041112) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR01 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SMR01  -----------------------------------
// SVD Line: 5331

//  <rtree> SFDITEM_REG__SCI0_SMR01
//    <name> SMR01 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041112) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI0_SMR01 >> 0) & 0xFFFF), ((SCI0_SMR01 = (SCI0_SMR01 & ~(0xC14FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC14F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SMR01_MD </item>
//    <item> SFDITEM_FIELD__SCI0_SMR01_SIS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR01_STS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR01_CCS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR01_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SMR02  -------------------------------
// SVD Line: 5337

unsigned short SCI0_SMR02 __AT (0x40041114);



// --------------------------------  Field Item: SCI0_SMR02_MD  -----------------------------------
// SVD Line: 5299

//  <item> SFDITEM_FIELD__SCI0_SMR02_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041114) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SMR02 >> 0) & 0xF), ((SCI0_SMR02 = (SCI0_SMR02 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR02_SIS  -----------------------------------
// SVD Line: 5305

//  <item> SFDITEM_FIELD__SCI0_SMR02_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041114) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR02 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR02_STS  -----------------------------------
// SVD Line: 5311

//  <item> SFDITEM_FIELD__SCI0_SMR02_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041114) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR02 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR02_CCS  -----------------------------------
// SVD Line: 5317

//  <item> SFDITEM_FIELD__SCI0_SMR02_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041114) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR02 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR02_CKS  -----------------------------------
// SVD Line: 5323

//  <item> SFDITEM_FIELD__SCI0_SMR02_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041114) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR02 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SMR02  -----------------------------------
// SVD Line: 5337

//  <rtree> SFDITEM_REG__SCI0_SMR02
//    <name> SMR02 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041114) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI0_SMR02 >> 0) & 0xFFFF), ((SCI0_SMR02 = (SCI0_SMR02 & ~(0xC14FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC14F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SMR02_MD </item>
//    <item> SFDITEM_FIELD__SCI0_SMR02_SIS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR02_STS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR02_CCS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR02_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SMR03  -------------------------------
// SVD Line: 5343

unsigned short SCI0_SMR03 __AT (0x40041116);



// --------------------------------  Field Item: SCI0_SMR03_MD  -----------------------------------
// SVD Line: 5299

//  <item> SFDITEM_FIELD__SCI0_SMR03_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041116) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SMR03 >> 0) & 0xF), ((SCI0_SMR03 = (SCI0_SMR03 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR03_SIS  -----------------------------------
// SVD Line: 5305

//  <item> SFDITEM_FIELD__SCI0_SMR03_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041116) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR03 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR03_STS  -----------------------------------
// SVD Line: 5311

//  <item> SFDITEM_FIELD__SCI0_SMR03_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041116) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR03 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR03_CCS  -----------------------------------
// SVD Line: 5317

//  <item> SFDITEM_FIELD__SCI0_SMR03_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041116) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR03 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR03_CKS  -----------------------------------
// SVD Line: 5323

//  <item> SFDITEM_FIELD__SCI0_SMR03_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041116) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR03 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SMR03  -----------------------------------
// SVD Line: 5343

//  <rtree> SFDITEM_REG__SCI0_SMR03
//    <name> SMR03 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041116) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI0_SMR03 >> 0) & 0xFFFF), ((SCI0_SMR03 = (SCI0_SMR03 & ~(0xC14FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC14F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SMR03_MD </item>
//    <item> SFDITEM_FIELD__SCI0_SMR03_SIS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR03_STS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR03_CCS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR03_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SCR00  -------------------------------
// SVD Line: 5349

unsigned short SCI0_SCR00 __AT (0x40041118);



// -------------------------------  Field Item: SCI0_SCR00_DLS  -----------------------------------
// SVD Line: 5358

//  <item> SFDITEM_FIELD__SCI0_SCR00_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40041118) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR00 >> 0) & 0x3), ((SCI0_SCR00 = (SCI0_SCR00 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_SLC  -----------------------------------
// SVD Line: 5364

//  <item> SFDITEM_FIELD__SCI0_SCR00_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40041118) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR00 >> 4) & 0x3), ((SCI0_SCR00 = (SCI0_SCR00 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_DIR  -----------------------------------
// SVD Line: 5370

//  <item> SFDITEM_FIELD__SCI0_SCR00_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40041118) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_PTC  -----------------------------------
// SVD Line: 5376

//  <item> SFDITEM_FIELD__SCI0_SCR00_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40041118) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR00 >> 8) & 0x3), ((SCI0_SCR00 = (SCI0_SCR00 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_EOC  -----------------------------------
// SVD Line: 5382

//  <item> SFDITEM_FIELD__SCI0_SCR00_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40041118) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_CKP  -----------------------------------
// SVD Line: 5388

//  <item> SFDITEM_FIELD__SCI0_SCR00_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041118) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_DAP  -----------------------------------
// SVD Line: 5394

//  <item> SFDITEM_FIELD__SCI0_SCR00_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40041118) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_RXE  -----------------------------------
// SVD Line: 5400

//  <item> SFDITEM_FIELD__SCI0_SCR00_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041118) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_TXE  -----------------------------------
// SVD Line: 5406

//  <item> SFDITEM_FIELD__SCI0_SCR00_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041118) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SCR00  -----------------------------------
// SVD Line: 5349

//  <rtree> SFDITEM_REG__SCI0_SCR00
//    <name> SCR00 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041118) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI0_SCR00 >> 0) & 0xFFFF), ((SCI0_SCR00 = (SCI0_SCR00 & ~(0xF7B3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7B3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SCR00_DLS </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_SLC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_DIR </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_PTC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_EOC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_CKP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_DAP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_RXE </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_TXE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SCR01  -------------------------------
// SVD Line: 5415

unsigned short SCI0_SCR01 __AT (0x4004111A);



// -------------------------------  Field Item: SCI0_SCR01_DLS  -----------------------------------
// SVD Line: 5358

//  <item> SFDITEM_FIELD__SCI0_SCR01_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4004111A) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR01 >> 0) & 0x3), ((SCI0_SCR01 = (SCI0_SCR01 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_SLC  -----------------------------------
// SVD Line: 5364

//  <item> SFDITEM_FIELD__SCI0_SCR01_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004111A) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR01 >> 4) & 0x3), ((SCI0_SCR01 = (SCI0_SCR01 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_DIR  -----------------------------------
// SVD Line: 5370

//  <item> SFDITEM_FIELD__SCI0_SCR01_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004111A) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_PTC  -----------------------------------
// SVD Line: 5376

//  <item> SFDITEM_FIELD__SCI0_SCR01_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004111A) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR01 >> 8) & 0x3), ((SCI0_SCR01 = (SCI0_SCR01 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_EOC  -----------------------------------
// SVD Line: 5382

//  <item> SFDITEM_FIELD__SCI0_SCR01_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004111A) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_CKP  -----------------------------------
// SVD Line: 5388

//  <item> SFDITEM_FIELD__SCI0_SCR01_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004111A) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_DAP  -----------------------------------
// SVD Line: 5394

//  <item> SFDITEM_FIELD__SCI0_SCR01_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004111A) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_RXE  -----------------------------------
// SVD Line: 5400

//  <item> SFDITEM_FIELD__SCI0_SCR01_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004111A) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_TXE  -----------------------------------
// SVD Line: 5406

//  <item> SFDITEM_FIELD__SCI0_SCR01_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004111A) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SCR01  -----------------------------------
// SVD Line: 5415

//  <rtree> SFDITEM_REG__SCI0_SCR01
//    <name> SCR01 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004111A) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI0_SCR01 >> 0) & 0xFFFF), ((SCI0_SCR01 = (SCI0_SCR01 & ~(0xF7B3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7B3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SCR01_DLS </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_SLC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_DIR </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_PTC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_EOC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_CKP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_DAP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_RXE </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_TXE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SCR02  -------------------------------
// SVD Line: 5421

unsigned short SCI0_SCR02 __AT (0x4004111C);



// -------------------------------  Field Item: SCI0_SCR02_DLS  -----------------------------------
// SVD Line: 5358

//  <item> SFDITEM_FIELD__SCI0_SCR02_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4004111C) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR02 >> 0) & 0x3), ((SCI0_SCR02 = (SCI0_SCR02 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_SLC  -----------------------------------
// SVD Line: 5364

//  <item> SFDITEM_FIELD__SCI0_SCR02_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004111C) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR02 >> 4) & 0x3), ((SCI0_SCR02 = (SCI0_SCR02 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_DIR  -----------------------------------
// SVD Line: 5370

//  <item> SFDITEM_FIELD__SCI0_SCR02_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004111C) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR02 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_PTC  -----------------------------------
// SVD Line: 5376

//  <item> SFDITEM_FIELD__SCI0_SCR02_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004111C) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR02 >> 8) & 0x3), ((SCI0_SCR02 = (SCI0_SCR02 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_EOC  -----------------------------------
// SVD Line: 5382

//  <item> SFDITEM_FIELD__SCI0_SCR02_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004111C) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR02 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_CKP  -----------------------------------
// SVD Line: 5388

//  <item> SFDITEM_FIELD__SCI0_SCR02_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004111C) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR02 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_DAP  -----------------------------------
// SVD Line: 5394

//  <item> SFDITEM_FIELD__SCI0_SCR02_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004111C) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR02 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_RXE  -----------------------------------
// SVD Line: 5400

//  <item> SFDITEM_FIELD__SCI0_SCR02_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004111C) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR02 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_TXE  -----------------------------------
// SVD Line: 5406

//  <item> SFDITEM_FIELD__SCI0_SCR02_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004111C) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR02 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SCR02  -----------------------------------
// SVD Line: 5421

//  <rtree> SFDITEM_REG__SCI0_SCR02
//    <name> SCR02 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004111C) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI0_SCR02 >> 0) & 0xFFFF), ((SCI0_SCR02 = (SCI0_SCR02 & ~(0xF7B3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7B3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SCR02_DLS </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_SLC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_DIR </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_PTC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_EOC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_CKP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_DAP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_RXE </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_TXE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SCR03  -------------------------------
// SVD Line: 5427

unsigned short SCI0_SCR03 __AT (0x4004111E);



// -------------------------------  Field Item: SCI0_SCR03_DLS  -----------------------------------
// SVD Line: 5358

//  <item> SFDITEM_FIELD__SCI0_SCR03_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4004111E) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR03 >> 0) & 0x3), ((SCI0_SCR03 = (SCI0_SCR03 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_SLC  -----------------------------------
// SVD Line: 5364

//  <item> SFDITEM_FIELD__SCI0_SCR03_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004111E) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR03 >> 4) & 0x3), ((SCI0_SCR03 = (SCI0_SCR03 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_DIR  -----------------------------------
// SVD Line: 5370

//  <item> SFDITEM_FIELD__SCI0_SCR03_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004111E) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR03 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_PTC  -----------------------------------
// SVD Line: 5376

//  <item> SFDITEM_FIELD__SCI0_SCR03_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004111E) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR03 >> 8) & 0x3), ((SCI0_SCR03 = (SCI0_SCR03 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_EOC  -----------------------------------
// SVD Line: 5382

//  <item> SFDITEM_FIELD__SCI0_SCR03_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004111E) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR03 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_CKP  -----------------------------------
// SVD Line: 5388

//  <item> SFDITEM_FIELD__SCI0_SCR03_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004111E) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR03 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_DAP  -----------------------------------
// SVD Line: 5394

//  <item> SFDITEM_FIELD__SCI0_SCR03_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004111E) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR03 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_RXE  -----------------------------------
// SVD Line: 5400

//  <item> SFDITEM_FIELD__SCI0_SCR03_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004111E) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR03 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_TXE  -----------------------------------
// SVD Line: 5406

//  <item> SFDITEM_FIELD__SCI0_SCR03_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004111E) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR03 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SCR03  -----------------------------------
// SVD Line: 5427

//  <rtree> SFDITEM_REG__SCI0_SCR03
//    <name> SCR03 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004111E) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI0_SCR03 >> 0) & 0xFFFF), ((SCI0_SCR03 = (SCI0_SCR03 & ~(0xF7B3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7B3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SCR03_DLS </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_SLC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_DIR </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_PTC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_EOC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_CKP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_DAP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_RXE </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_TXE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI0_SE0  --------------------------------
// SVD Line: 5433

unsigned short SCI0_SE0 __AT (0x40041120);



// --------------------------------  Field Item: SCI0_SE0_SE00  -----------------------------------
// SVD Line: 5442

//  <item> SFDITEM_FIELD__SCI0_SE0_SE00
//    <name> SE00 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041120) Indication of operation enable/stop status of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SE0 ) </loc>
//      <o.0..0> SE00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SE0_SE01  -----------------------------------
// SVD Line: 5448

//  <item> SFDITEM_FIELD__SCI0_SE0_SE01
//    <name> SE01 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041120) Indication of operation enable/stop status of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SE0 ) </loc>
//      <o.1..1> SE01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SE0_SE02  -----------------------------------
// SVD Line: 5454

//  <item> SFDITEM_FIELD__SCI0_SE0_SE02
//    <name> SE02 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041120) Indication of operation enable/stop status of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SE0 ) </loc>
//      <o.2..2> SE02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SE0_SE03  -----------------------------------
// SVD Line: 5460

//  <item> SFDITEM_FIELD__SCI0_SE0_SE03
//    <name> SE03 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40041120) Indication of operation enable/stop status of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SE0 ) </loc>
//      <o.3..3> SE03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SE0  ------------------------------------
// SVD Line: 5433

//  <rtree> SFDITEM_REG__SCI0_SE0
//    <name> SE0 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041120) Serial channel enable status register m </i>
//    <loc> ( (unsigned short)((SCI0_SE0 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI0_SE0_SE00 </item>
//    <item> SFDITEM_FIELD__SCI0_SE0_SE01 </item>
//    <item> SFDITEM_FIELD__SCI0_SE0_SE02 </item>
//    <item> SFDITEM_FIELD__SCI0_SE0_SE03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI0_SS0  --------------------------------
// SVD Line: 5469

unsigned short SCI0_SS0 __AT (0x40041122);



// --------------------------------  Field Item: SCI0_SS0_SS00  -----------------------------------
// SVD Line: 5478

//  <item> SFDITEM_FIELD__SCI0_SS0_SS00
//    <name> SS00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041122) Operation start trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SS0 ) </loc>
//      <o.0..0> SS00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SS0_SS01  -----------------------------------
// SVD Line: 5484

//  <item> SFDITEM_FIELD__SCI0_SS0_SS01
//    <name> SS01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041122) Operation start trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SS0 ) </loc>
//      <o.1..1> SS01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SS0_SS02  -----------------------------------
// SVD Line: 5490

//  <item> SFDITEM_FIELD__SCI0_SS0_SS02
//    <name> SS02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041122) Operation start trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SS0 ) </loc>
//      <o.2..2> SS02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SS0_SS03  -----------------------------------
// SVD Line: 5496

//  <item> SFDITEM_FIELD__SCI0_SS0_SS03
//    <name> SS03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041122) Operation start trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SS0 ) </loc>
//      <o.3..3> SS03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SS0  ------------------------------------
// SVD Line: 5469

//  <rtree> SFDITEM_REG__SCI0_SS0
//    <name> SS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041122) Serial channel start register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SS0 >> 0) & 0xFFFF), ((SCI0_SS0 = (SCI0_SS0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SS0_SS00 </item>
//    <item> SFDITEM_FIELD__SCI0_SS0_SS01 </item>
//    <item> SFDITEM_FIELD__SCI0_SS0_SS02 </item>
//    <item> SFDITEM_FIELD__SCI0_SS0_SS03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI0_ST0  --------------------------------
// SVD Line: 5505

unsigned short SCI0_ST0 __AT (0x40041124);



// --------------------------------  Field Item: SCI0_ST0_ST00  -----------------------------------
// SVD Line: 5514

//  <item> SFDITEM_FIELD__SCI0_ST0_ST00
//    <name> ST00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041124) Operation stop trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_ST0 ) </loc>
//      <o.0..0> ST00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_ST0_ST01  -----------------------------------
// SVD Line: 5520

//  <item> SFDITEM_FIELD__SCI0_ST0_ST01
//    <name> ST01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041124) Operation stop trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_ST0 ) </loc>
//      <o.1..1> ST01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_ST0_ST02  -----------------------------------
// SVD Line: 5526

//  <item> SFDITEM_FIELD__SCI0_ST0_ST02
//    <name> ST02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041124) Operation stop trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_ST0 ) </loc>
//      <o.2..2> ST02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_ST0_ST03  -----------------------------------
// SVD Line: 5532

//  <item> SFDITEM_FIELD__SCI0_ST0_ST03
//    <name> ST03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041124) Operation stop trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_ST0 ) </loc>
//      <o.3..3> ST03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_ST0  ------------------------------------
// SVD Line: 5505

//  <rtree> SFDITEM_REG__SCI0_ST0
//    <name> ST0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041124) Serial channel stop register 0 </i>
//    <loc> ( (unsigned short)((SCI0_ST0 >> 0) & 0xFFFF), ((SCI0_ST0 = (SCI0_ST0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_ST0_ST00 </item>
//    <item> SFDITEM_FIELD__SCI0_ST0_ST01 </item>
//    <item> SFDITEM_FIELD__SCI0_ST0_ST02 </item>
//    <item> SFDITEM_FIELD__SCI0_ST0_ST03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SPS0  --------------------------------
// SVD Line: 5541

unsigned short SCI0_SPS0 __AT (0x40041126);



// -------------------------------  Field Item: SCI0_SPS0_PRS00  ----------------------------------
// SVD Line: 5550

//  <item> SFDITEM_FIELD__SCI0_SPS0_PRS00
//    <name> PRS00 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041126) Prescaler 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SPS0 >> 0) & 0xF), ((SCI0_SPS0 = (SCI0_SPS0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SPS0_PRS01  ----------------------------------
// SVD Line: 5556

//  <item> SFDITEM_FIELD__SCI0_SPS0_PRS01
//    <name> PRS01 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40041126) Prescaler 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SPS0 >> 4) & 0xF), ((SCI0_SPS0 = (SCI0_SPS0 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SPS0  -----------------------------------
// SVD Line: 5541

//  <rtree> SFDITEM_REG__SCI0_SPS0
//    <name> SPS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041126) Serial clock select register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SPS0 >> 0) & 0xFFFF), ((SCI0_SPS0 = (SCI0_SPS0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SPS0_PRS00 </item>
//    <item> SFDITEM_FIELD__SCI0_SPS0_PRS01 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI0_SO0  --------------------------------
// SVD Line: 5565

unsigned short SCI0_SO0 __AT (0x40041128);



// --------------------------------  Field Item: SCI0_SO0_SO00  -----------------------------------
// SVD Line: 5574

//  <item> SFDITEM_FIELD__SCI0_SO0_SO00
//    <name> SO00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041128) Serial data output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.0..0> SO00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SO0_SO01  -----------------------------------
// SVD Line: 5580

//  <item> SFDITEM_FIELD__SCI0_SO0_SO01
//    <name> SO01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041128) Serial data output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.1..1> SO01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SO0_SO02  -----------------------------------
// SVD Line: 5586

//  <item> SFDITEM_FIELD__SCI0_SO0_SO02
//    <name> SO02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041128) Serial data output of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.2..2> SO02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SO0_SO03  -----------------------------------
// SVD Line: 5592

//  <item> SFDITEM_FIELD__SCI0_SO0_SO03
//    <name> SO03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041128) Serial data output of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.3..3> SO03
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SO0_CKO00  -----------------------------------
// SVD Line: 5598

//  <item> SFDITEM_FIELD__SCI0_SO0_CKO00
//    <name> CKO00 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041128) Serial clock output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.8..8> CKO00
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SO0_CKO01  -----------------------------------
// SVD Line: 5604

//  <item> SFDITEM_FIELD__SCI0_SO0_CKO01
//    <name> CKO01 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40041128) Serial clock output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.9..9> CKO01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SO0_CKO02  -----------------------------------
// SVD Line: 5610

//  <item> SFDITEM_FIELD__SCI0_SO0_CKO02
//    <name> CKO02 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40041128) Serial clock output of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.10..10> CKO02
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SO0_CKO03  -----------------------------------
// SVD Line: 5616

//  <item> SFDITEM_FIELD__SCI0_SO0_CKO03
//    <name> CKO03 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041128) Serial clock output of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.11..11> CKO03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SO0  ------------------------------------
// SVD Line: 5565

//  <rtree> SFDITEM_REG__SCI0_SO0
//    <name> SO0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041128) Serial output register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SO0 >> 0) & 0xFFFF), ((SCI0_SO0 = (SCI0_SO0 & ~(0xF0FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SO0_SO00 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_SO01 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_SO02 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_SO03 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_CKO00 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_CKO01 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_CKO02 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_CKO03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SOE0  --------------------------------
// SVD Line: 5625

unsigned short SCI0_SOE0 __AT (0x4004112A);



// -------------------------------  Field Item: SCI0_SOE0_SOE00  ----------------------------------
// SVD Line: 5634

//  <item> SFDITEM_FIELD__SCI0_SOE0_SOE00
//    <name> SOE00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004112A) Serial output enable of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOE0 ) </loc>
//      <o.0..0> SOE00
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SOE0_SOE01  ----------------------------------
// SVD Line: 5640

//  <item> SFDITEM_FIELD__SCI0_SOE0_SOE01
//    <name> SOE01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004112A) Serial output enable of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOE0 ) </loc>
//      <o.1..1> SOE01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SOE0_SOE02  ----------------------------------
// SVD Line: 5646

//  <item> SFDITEM_FIELD__SCI0_SOE0_SOE02
//    <name> SOE02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4004112A) Serial output enable of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOE0 ) </loc>
//      <o.2..2> SOE02
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SOE0_SOE03  ----------------------------------
// SVD Line: 5652

//  <item> SFDITEM_FIELD__SCI0_SOE0_SOE03
//    <name> SOE03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4004112A) Serial output enable of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOE0 ) </loc>
//      <o.3..3> SOE03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SOE0  -----------------------------------
// SVD Line: 5625

//  <rtree> SFDITEM_REG__SCI0_SOE0
//    <name> SOE0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004112A) Serial output enable register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SOE0 >> 0) & 0xFFFF), ((SCI0_SOE0 = (SCI0_SOE0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SOE0_SOE00 </item>
//    <item> SFDITEM_FIELD__SCI0_SOE0_SOE01 </item>
//    <item> SFDITEM_FIELD__SCI0_SOE0_SOE02 </item>
//    <item> SFDITEM_FIELD__SCI0_SOE0_SOE03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SOL0  --------------------------------
// SVD Line: 5661

unsigned short SCI0_SOL0 __AT (0x40041134);



// -------------------------------  Field Item: SCI0_SOL0_SOL00  ----------------------------------
// SVD Line: 5670

//  <item> SFDITEM_FIELD__SCI0_SOL0_SOL00
//    <name> SOL00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041134) Selects inversion of the level of the transmit data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOL0 ) </loc>
//      <o.0..0> SOL00
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SOL0_SOL02  ----------------------------------
// SVD Line: 5676

//  <item> SFDITEM_FIELD__SCI0_SOL0_SOL02
//    <name> SOL02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041134) Selects inversion of the level of the transmit data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOL0 ) </loc>
//      <o.2..2> SOL02
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SOL0  -----------------------------------
// SVD Line: 5661

//  <rtree> SFDITEM_REG__SCI0_SOL0
//    <name> SOL0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041134) Serial output level register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SOL0 >> 0) & 0xFFFF), ((SCI0_SOL0 = (SCI0_SOL0 & ~(0x5UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x5) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SOL0_SOL00 </item>
//    <item> SFDITEM_FIELD__SCI0_SOL0_SOL02 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCI0_SDR0_SDR0_SDR00  --------------------------
// SVD Line: 5685

unsigned short SCI0_SDR0_SDR0_SDR00 __AT (0x40041310);



// ---------------------------  Register Item: SCI0_SDR0_SDR0_SDR00  ------------------------------
// SVD Line: 5685

//  <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR00
//    <name> SDR00 </name>
//    <i> [Bits 15..0] RW (@ 0x40041310) Serial data register 00 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI0_SDR0_SDR0_SDR00 >> 0) & 0xFFFFFFFF), ((SCI0_SDR0_SDR0_SDR00 = (SCI0_SDR0_SDR0_SDR00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCI0_SDR0_SDR0_SDR01  --------------------------
// SVD Line: 5685

unsigned short SCI0_SDR0_SDR0_SDR01 __AT (0x40041312);



// ---------------------------  Register Item: SCI0_SDR0_SDR0_SDR01  ------------------------------
// SVD Line: 5685

//  <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR01
//    <name> SDR01 </name>
//    <i> [Bits 15..0] RW (@ 0x40041312) Serial data register 01 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI0_SDR0_SDR0_SDR01 >> 0) & 0xFFFFFFFF), ((SCI0_SDR0_SDR0_SDR01 = (SCI0_SDR0_SDR0_SDR01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCI0_SDR0_SDR0_SDR02  --------------------------
// SVD Line: 5697

unsigned short SCI0_SDR0_SDR0_SDR02 __AT (0x40041344);



// ---------------------------  Register Item: SCI0_SDR0_SDR0_SDR02  ------------------------------
// SVD Line: 5697

//  <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR02
//    <name> SDR02 </name>
//    <i> [Bits 15..0] RW (@ 0x40041344) Serial data register 02 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI0_SDR0_SDR0_SDR02 >> 0) & 0xFFFFFFFF), ((SCI0_SDR0_SDR0_SDR02 = (SCI0_SDR0_SDR0_SDR02 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCI0_SDR0_SDR0_SDR03  --------------------------
// SVD Line: 5697

unsigned short SCI0_SDR0_SDR0_SDR03 __AT (0x40041346);



// ---------------------------  Register Item: SCI0_SDR0_SDR0_SDR03  ------------------------------
// SVD Line: 5697

//  <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR03
//    <name> SDR03 </name>
//    <i> [Bits 15..0] RW (@ 0x40041346) Serial data register 03 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI0_SDR0_SDR0_SDR03 >> 0) & 0xFFFFFFFF), ((SCI0_SDR0_SDR0_SDR03 = (SCI0_SDR0_SDR0_SDR03 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_SIO00  -------------------------------
// SVD Line: 5709

unsigned char SCI0_SIO00 __AT (0x40041310);



// --------------------------------  Register Item: SCI0_SIO00  -----------------------------------
// SVD Line: 5709

//  <item> SFDITEM_REG__SCI0_SIO00
//    <name> SIO00 </name>
//    <i> [Bits 7..0] RW (@ 0x40041310) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SIO00 >> 0) & 0xFFFFFFFF), ((SCI0_SIO00 = (SCI0_SIO00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_SIO01  -------------------------------
// SVD Line: 5717

unsigned char SCI0_SIO01 __AT (0x40041312);



// --------------------------------  Register Item: SCI0_SIO01  -----------------------------------
// SVD Line: 5717

//  <item> SFDITEM_REG__SCI0_SIO01
//    <name> SIO01 </name>
//    <i> [Bits 7..0] RW (@ 0x40041312) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SIO01 >> 0) & 0xFFFFFFFF), ((SCI0_SIO01 = (SCI0_SIO01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_SIO10  -------------------------------
// SVD Line: 5725

unsigned char SCI0_SIO10 __AT (0x40041344);



// --------------------------------  Register Item: SCI0_SIO10  -----------------------------------
// SVD Line: 5725

//  <item> SFDITEM_REG__SCI0_SIO10
//    <name> SIO10 </name>
//    <i> [Bits 7..0] RW (@ 0x40041344) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SIO10 >> 0) & 0xFFFFFFFF), ((SCI0_SIO10 = (SCI0_SIO10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_SIO11  -------------------------------
// SVD Line: 5733

unsigned char SCI0_SIO11 __AT (0x40041346);



// --------------------------------  Register Item: SCI0_SIO11  -----------------------------------
// SVD Line: 5733

//  <item> SFDITEM_REG__SCI0_SIO11
//    <name> SIO11 </name>
//    <i> [Bits 7..0] RW (@ 0x40041346) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SIO11 >> 0) & 0xFFFFFFFF), ((SCI0_SIO11 = (SCI0_SIO11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_TXD0  --------------------------------
// SVD Line: 5741

unsigned char SCI0_TXD0 __AT (0x40041310);



// --------------------------------  Register Item: SCI0_TXD0  ------------------------------------
// SVD Line: 5741

//  <item> SFDITEM_REG__SCI0_TXD0
//    <name> TXD0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041310) UART transmit data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_TXD0 >> 0) & 0xFFFFFFFF), ((SCI0_TXD0 = (SCI0_TXD0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_RXD0  --------------------------------
// SVD Line: 5749

unsigned char SCI0_RXD0 __AT (0x40041312);



// --------------------------------  Register Item: SCI0_RXD0  ------------------------------------
// SVD Line: 5749

//  <item> SFDITEM_REG__SCI0_RXD0
//    <name> RXD0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041312) UART receive data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_RXD0 >> 0) & 0xFFFFFFFF), ((SCI0_RXD0 = (SCI0_RXD0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_TXD1  --------------------------------
// SVD Line: 5757

unsigned char SCI0_TXD1 __AT (0x40041344);



// --------------------------------  Register Item: SCI0_TXD1  ------------------------------------
// SVD Line: 5757

//  <item> SFDITEM_REG__SCI0_TXD1
//    <name> TXD1 </name>
//    <i> [Bits 7..0] RW (@ 0x40041344) UART transmit data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_TXD1 >> 0) & 0xFFFFFFFF), ((SCI0_TXD1 = (SCI0_TXD1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_RXD1  --------------------------------
// SVD Line: 5765

unsigned char SCI0_RXD1 __AT (0x40041346);



// --------------------------------  Register Item: SCI0_RXD1  ------------------------------------
// SVD Line: 5765

//  <item> SFDITEM_REG__SCI0_RXD1
//    <name> RXD1 </name>
//    <i> [Bits 7..0] RW (@ 0x40041346) UART receive data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_RXD1 >> 0) & 0xFFFFFFFF), ((SCI0_RXD1 = (SCI0_RXD1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: SCI0  -------------------------------------
// SVD Line: 5086

//  <view> SCI0
//    <name> SCI0 </name>
//    <item> SFDITEM_REG__SCI0_SSR00 </item>
//    <item> SFDITEM_REG__SCI0_SSR01 </item>
//    <item> SFDITEM_REG__SCI0_SSR02 </item>
//    <item> SFDITEM_REG__SCI0_SSR03 </item>
//    <item> SFDITEM_REG__SCI0_SIR00 </item>
//    <item> SFDITEM_REG__SCI0_SIR01 </item>
//    <item> SFDITEM_REG__SCI0_SIR02 </item>
//    <item> SFDITEM_REG__SCI0_SIR03 </item>
//    <item> SFDITEM_REG__SCI0_SMR00 </item>
//    <item> SFDITEM_REG__SCI0_SMR01 </item>
//    <item> SFDITEM_REG__SCI0_SMR02 </item>
//    <item> SFDITEM_REG__SCI0_SMR03 </item>
//    <item> SFDITEM_REG__SCI0_SCR00 </item>
//    <item> SFDITEM_REG__SCI0_SCR01 </item>
//    <item> SFDITEM_REG__SCI0_SCR02 </item>
//    <item> SFDITEM_REG__SCI0_SCR03 </item>
//    <item> SFDITEM_REG__SCI0_SE0 </item>
//    <item> SFDITEM_REG__SCI0_SS0 </item>
//    <item> SFDITEM_REG__SCI0_ST0 </item>
//    <item> SFDITEM_REG__SCI0_SPS0 </item>
//    <item> SFDITEM_REG__SCI0_SO0 </item>
//    <item> SFDITEM_REG__SCI0_SOE0 </item>
//    <item> SFDITEM_REG__SCI0_SOL0 </item>
//    <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR00 </item>
//    <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR01 </item>
//    <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR02 </item>
//    <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR03 </item>
//    <item> SFDITEM_REG__SCI0_SIO00 </item>
//    <item> SFDITEM_REG__SCI0_SIO01 </item>
//    <item> SFDITEM_REG__SCI0_SIO10 </item>
//    <item> SFDITEM_REG__SCI0_SIO11 </item>
//    <item> SFDITEM_REG__SCI0_TXD0 </item>
//    <item> SFDITEM_REG__SCI0_RXD0 </item>
//    <item> SFDITEM_REG__SCI0_TXD1 </item>
//    <item> SFDITEM_REG__SCI0_RXD1 </item>
//  </view>
//  


// ----------------------------  Register Item Address: SCI1_SSR10  -------------------------------
// SVD Line: 5835

unsigned short SCI1_SSR10 __AT (0x40041540);



// -------------------------------  Field Item: SCI1_SSR10_OVF  -----------------------------------
// SVD Line: 5843

//  <item> SFDITEM_FIELD__SCI1_SSR10_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041540) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR10_PEF  -----------------------------------
// SVD Line: 5849

//  <item> SFDITEM_FIELD__SCI1_SSR10_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041540) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR10_FEF  -----------------------------------
// SVD Line: 5855

//  <item> SFDITEM_FIELD__SCI1_SSR10_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041540) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR10_BFF  -----------------------------------
// SVD Line: 5861

//  <item> SFDITEM_FIELD__SCI1_SSR10_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041540) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR10_TSF  -----------------------------------
// SVD Line: 5867

//  <item> SFDITEM_FIELD__SCI1_SSR10_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041540) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SSR10  -----------------------------------
// SVD Line: 5835

//  <rtree> SFDITEM_REG__SCI1_SSR10
//    <name> SSR10 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041540) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI1_SSR10 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI1_SSR10_OVF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR10_PEF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR10_FEF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR10_BFF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR10_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SSR11  -------------------------------
// SVD Line: 5875

unsigned short SCI1_SSR11 __AT (0x40041542);



// -------------------------------  Field Item: SCI1_SSR11_OVF  -----------------------------------
// SVD Line: 5843

//  <item> SFDITEM_FIELD__SCI1_SSR11_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041542) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR11_PEF  -----------------------------------
// SVD Line: 5849

//  <item> SFDITEM_FIELD__SCI1_SSR11_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041542) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR11_FEF  -----------------------------------
// SVD Line: 5855

//  <item> SFDITEM_FIELD__SCI1_SSR11_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041542) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR11_BFF  -----------------------------------
// SVD Line: 5861

//  <item> SFDITEM_FIELD__SCI1_SSR11_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041542) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR11_TSF  -----------------------------------
// SVD Line: 5867

//  <item> SFDITEM_FIELD__SCI1_SSR11_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041542) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SSR11  -----------------------------------
// SVD Line: 5875

//  <rtree> SFDITEM_REG__SCI1_SSR11
//    <name> SSR11 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041542) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI1_SSR11 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI1_SSR11_OVF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR11_PEF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR11_FEF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR11_BFF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR11_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SIR10  -------------------------------
// SVD Line: 5881

unsigned short SCI1_SIR10 __AT (0x40041548);



// -------------------------------  Field Item: SCI1_SIR10_OVCT  ----------------------------------
// SVD Line: 5889

//  <item> SFDITEM_FIELD__SCI1_SIR10_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041548) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR10 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SIR10_PECT  ----------------------------------
// SVD Line: 5895

//  <item> SFDITEM_FIELD__SCI1_SIR10_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041548) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR10 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SIR10_FECT  ----------------------------------
// SVD Line: 5901

//  <item> SFDITEM_FIELD__SCI1_SIR10_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041548) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR10 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SIR10  -----------------------------------
// SVD Line: 5881

//  <rtree> SFDITEM_REG__SCI1_SIR10
//    <name> SIR10 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041548) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI1_SIR10 >> 0) & 0xFFFF), ((SCI1_SIR10 = (SCI1_SIR10 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SIR10_OVCT </item>
//    <item> SFDITEM_FIELD__SCI1_SIR10_PECT </item>
//    <item> SFDITEM_FIELD__SCI1_SIR10_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SIR11  -------------------------------
// SVD Line: 5909

unsigned short SCI1_SIR11 __AT (0x4004154A);



// -------------------------------  Field Item: SCI1_SIR11_OVCT  ----------------------------------
// SVD Line: 5889

//  <item> SFDITEM_FIELD__SCI1_SIR11_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004154A) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR11 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SIR11_PECT  ----------------------------------
// SVD Line: 5895

//  <item> SFDITEM_FIELD__SCI1_SIR11_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004154A) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR11 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SIR11_FECT  ----------------------------------
// SVD Line: 5901

//  <item> SFDITEM_FIELD__SCI1_SIR11_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4004154A) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR11 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SIR11  -----------------------------------
// SVD Line: 5909

//  <rtree> SFDITEM_REG__SCI1_SIR11
//    <name> SIR11 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004154A) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI1_SIR11 >> 0) & 0xFFFF), ((SCI1_SIR11 = (SCI1_SIR11 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SIR11_OVCT </item>
//    <item> SFDITEM_FIELD__SCI1_SIR11_PECT </item>
//    <item> SFDITEM_FIELD__SCI1_SIR11_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SMR10  -------------------------------
// SVD Line: 5915

unsigned short SCI1_SMR10 __AT (0x40041550);



// --------------------------------  Field Item: SCI1_SMR10_MD  -----------------------------------
// SVD Line: 5923

//  <item> SFDITEM_FIELD__SCI1_SMR10_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041550) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SMR10 >> 0) & 0xF), ((SCI1_SMR10 = (SCI1_SMR10 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR10_SIS  -----------------------------------
// SVD Line: 5929

//  <item> SFDITEM_FIELD__SCI1_SMR10_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041550) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR10 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR10_STS  -----------------------------------
// SVD Line: 5935

//  <item> SFDITEM_FIELD__SCI1_SMR10_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041550) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR10 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR10_CCS  -----------------------------------
// SVD Line: 5941

//  <item> SFDITEM_FIELD__SCI1_SMR10_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041550) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR10 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR10_CKS  -----------------------------------
// SVD Line: 5947

//  <item> SFDITEM_FIELD__SCI1_SMR10_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041550) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR10 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SMR10  -----------------------------------
// SVD Line: 5915

//  <rtree> SFDITEM_REG__SCI1_SMR10
//    <name> SMR10 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041550) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI1_SMR10 >> 0) & 0xFFFF), ((SCI1_SMR10 = (SCI1_SMR10 & ~(0xC14FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC14F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SMR10_MD </item>
//    <item> SFDITEM_FIELD__SCI1_SMR10_SIS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR10_STS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR10_CCS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR10_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SMR11  -------------------------------
// SVD Line: 5955

unsigned short SCI1_SMR11 __AT (0x40041552);



// --------------------------------  Field Item: SCI1_SMR11_MD  -----------------------------------
// SVD Line: 5923

//  <item> SFDITEM_FIELD__SCI1_SMR11_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041552) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SMR11 >> 0) & 0xF), ((SCI1_SMR11 = (SCI1_SMR11 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR11_SIS  -----------------------------------
// SVD Line: 5929

//  <item> SFDITEM_FIELD__SCI1_SMR11_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041552) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR11 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR11_STS  -----------------------------------
// SVD Line: 5935

//  <item> SFDITEM_FIELD__SCI1_SMR11_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041552) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR11 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR11_CCS  -----------------------------------
// SVD Line: 5941

//  <item> SFDITEM_FIELD__SCI1_SMR11_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041552) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR11 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR11_CKS  -----------------------------------
// SVD Line: 5947

//  <item> SFDITEM_FIELD__SCI1_SMR11_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041552) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR11 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SMR11  -----------------------------------
// SVD Line: 5955

//  <rtree> SFDITEM_REG__SCI1_SMR11
//    <name> SMR11 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041552) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI1_SMR11 >> 0) & 0xFFFF), ((SCI1_SMR11 = (SCI1_SMR11 & ~(0xC14FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC14F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SMR11_MD </item>
//    <item> SFDITEM_FIELD__SCI1_SMR11_SIS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR11_STS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR11_CCS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR11_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SCR10  -------------------------------
// SVD Line: 5961

unsigned short SCI1_SCR10 __AT (0x40041558);



// -------------------------------  Field Item: SCI1_SCR10_DLS  -----------------------------------
// SVD Line: 5969

//  <item> SFDITEM_FIELD__SCI1_SCR10_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40041558) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR10 >> 0) & 0x3), ((SCI1_SCR10 = (SCI1_SCR10 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_SLC  -----------------------------------
// SVD Line: 5975

//  <item> SFDITEM_FIELD__SCI1_SCR10_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40041558) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR10 >> 4) & 0x3), ((SCI1_SCR10 = (SCI1_SCR10 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_DIR  -----------------------------------
// SVD Line: 5981

//  <item> SFDITEM_FIELD__SCI1_SCR10_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40041558) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_PTC  -----------------------------------
// SVD Line: 5987

//  <item> SFDITEM_FIELD__SCI1_SCR10_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40041558) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR10 >> 8) & 0x3), ((SCI1_SCR10 = (SCI1_SCR10 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_EOC  -----------------------------------
// SVD Line: 5993

//  <item> SFDITEM_FIELD__SCI1_SCR10_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40041558) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_CKP  -----------------------------------
// SVD Line: 5999

//  <item> SFDITEM_FIELD__SCI1_SCR10_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041558) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_DAP  -----------------------------------
// SVD Line: 6005

//  <item> SFDITEM_FIELD__SCI1_SCR10_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40041558) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_RXE  -----------------------------------
// SVD Line: 6011

//  <item> SFDITEM_FIELD__SCI1_SCR10_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041558) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_TXE  -----------------------------------
// SVD Line: 6017

//  <item> SFDITEM_FIELD__SCI1_SCR10_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041558) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SCR10  -----------------------------------
// SVD Line: 5961

//  <rtree> SFDITEM_REG__SCI1_SCR10
//    <name> SCR10 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041558) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI1_SCR10 >> 0) & 0xFFFF), ((SCI1_SCR10 = (SCI1_SCR10 & ~(0xF7B3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7B3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SCR10_DLS </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_SLC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_DIR </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_PTC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_EOC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_CKP </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_DAP </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_RXE </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_TXE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SCR11  -------------------------------
// SVD Line: 6025

unsigned short SCI1_SCR11 __AT (0x4004155A);



// -------------------------------  Field Item: SCI1_SCR11_DLS  -----------------------------------
// SVD Line: 5969

//  <item> SFDITEM_FIELD__SCI1_SCR11_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4004155A) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR11 >> 0) & 0x3), ((SCI1_SCR11 = (SCI1_SCR11 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_SLC  -----------------------------------
// SVD Line: 5975

//  <item> SFDITEM_FIELD__SCI1_SCR11_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004155A) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR11 >> 4) & 0x3), ((SCI1_SCR11 = (SCI1_SCR11 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_DIR  -----------------------------------
// SVD Line: 5981

//  <item> SFDITEM_FIELD__SCI1_SCR11_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004155A) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_PTC  -----------------------------------
// SVD Line: 5987

//  <item> SFDITEM_FIELD__SCI1_SCR11_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004155A) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR11 >> 8) & 0x3), ((SCI1_SCR11 = (SCI1_SCR11 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_EOC  -----------------------------------
// SVD Line: 5993

//  <item> SFDITEM_FIELD__SCI1_SCR11_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004155A) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_CKP  -----------------------------------
// SVD Line: 5999

//  <item> SFDITEM_FIELD__SCI1_SCR11_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004155A) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_DAP  -----------------------------------
// SVD Line: 6005

//  <item> SFDITEM_FIELD__SCI1_SCR11_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004155A) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_RXE  -----------------------------------
// SVD Line: 6011

//  <item> SFDITEM_FIELD__SCI1_SCR11_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004155A) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_TXE  -----------------------------------
// SVD Line: 6017

//  <item> SFDITEM_FIELD__SCI1_SCR11_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004155A) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SCR11  -----------------------------------
// SVD Line: 6025

//  <rtree> SFDITEM_REG__SCI1_SCR11
//    <name> SCR11 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004155A) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI1_SCR11 >> 0) & 0xFFFF), ((SCI1_SCR11 = (SCI1_SCR11 & ~(0xF7B3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7B3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SCR11_DLS </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_SLC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_DIR </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_PTC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_EOC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_CKP </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_DAP </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_RXE </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_TXE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI1_SE1  --------------------------------
// SVD Line: 6031

unsigned short SCI1_SE1 __AT (0x40041560);



// --------------------------------  Field Item: SCI1_SE1_SE10  -----------------------------------
// SVD Line: 6040

//  <item> SFDITEM_FIELD__SCI1_SE1_SE10
//    <name> SE10 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041560) Indication of operation enable/stop status of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SE1 ) </loc>
//      <o.0..0> SE10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI1_SE1_SE11  -----------------------------------
// SVD Line: 6046

//  <item> SFDITEM_FIELD__SCI1_SE1_SE11
//    <name> SE11 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041560) Indication of operation enable/stop status of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SE1 ) </loc>
//      <o.1..1> SE11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SE1  ------------------------------------
// SVD Line: 6031

//  <rtree> SFDITEM_REG__SCI1_SE1
//    <name> SE1 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041560) Serial channel enable status register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SE1 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI1_SE1_SE10 </item>
//    <item> SFDITEM_FIELD__SCI1_SE1_SE11 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI1_SS1  --------------------------------
// SVD Line: 6054

unsigned short SCI1_SS1 __AT (0x40041562);



// --------------------------------  Field Item: SCI1_SS1_SS10  -----------------------------------
// SVD Line: 6063

//  <item> SFDITEM_FIELD__SCI1_SS1_SS10
//    <name> SS10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041562) Operation start trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SS1 ) </loc>
//      <o.0..0> SS10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI1_SS1_SS11  -----------------------------------
// SVD Line: 6069

//  <item> SFDITEM_FIELD__SCI1_SS1_SS11
//    <name> SS11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041562) Operation start trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SS1 ) </loc>
//      <o.1..1> SS11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SS1  ------------------------------------
// SVD Line: 6054

//  <rtree> SFDITEM_REG__SCI1_SS1
//    <name> SS1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041562) Serial channel start register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SS1 >> 0) & 0xFFFF), ((SCI1_SS1 = (SCI1_SS1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SS1_SS10 </item>
//    <item> SFDITEM_FIELD__SCI1_SS1_SS11 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI1_ST1  --------------------------------
// SVD Line: 6077

unsigned short SCI1_ST1 __AT (0x40041564);



// --------------------------------  Field Item: SCI1_ST1_ST10  -----------------------------------
// SVD Line: 6086

//  <item> SFDITEM_FIELD__SCI1_ST1_ST10
//    <name> ST10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041564) Operation stop trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_ST1 ) </loc>
//      <o.0..0> ST10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI1_ST1_ST11  -----------------------------------
// SVD Line: 6092

//  <item> SFDITEM_FIELD__SCI1_ST1_ST11
//    <name> ST11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041564) Operation stop trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_ST1 ) </loc>
//      <o.1..1> ST11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_ST1  ------------------------------------
// SVD Line: 6077

//  <rtree> SFDITEM_REG__SCI1_ST1
//    <name> ST1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041564) Serial channel stop register 1 </i>
//    <loc> ( (unsigned short)((SCI1_ST1 >> 0) & 0xFFFF), ((SCI1_ST1 = (SCI1_ST1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_ST1_ST10 </item>
//    <item> SFDITEM_FIELD__SCI1_ST1_ST11 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SPS1  --------------------------------
// SVD Line: 6100

unsigned short SCI1_SPS1 __AT (0x40041566);



// -------------------------------  Field Item: SCI1_SPS1_PRS10  ----------------------------------
// SVD Line: 6109

//  <item> SFDITEM_FIELD__SCI1_SPS1_PRS10
//    <name> PRS10 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041566) Prescaler 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SPS1 >> 0) & 0xF), ((SCI1_SPS1 = (SCI1_SPS1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SPS1_PRS11  ----------------------------------
// SVD Line: 6115

//  <item> SFDITEM_FIELD__SCI1_SPS1_PRS11
//    <name> PRS11 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40041566) Prescaler 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SPS1 >> 4) & 0xF), ((SCI1_SPS1 = (SCI1_SPS1 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SPS1  -----------------------------------
// SVD Line: 6100

//  <rtree> SFDITEM_REG__SCI1_SPS1
//    <name> SPS1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041566) Serial clock select register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SPS1 >> 0) & 0xFFFF), ((SCI1_SPS1 = (SCI1_SPS1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SPS1_PRS10 </item>
//    <item> SFDITEM_FIELD__SCI1_SPS1_PRS11 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI1_SO1  --------------------------------
// SVD Line: 6124

unsigned short SCI1_SO1 __AT (0x40041568);



// --------------------------------  Field Item: SCI1_SO1_SO10  -----------------------------------
// SVD Line: 6133

//  <item> SFDITEM_FIELD__SCI1_SO1_SO10
//    <name> SO10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041568) Serial data output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SO1 ) </loc>
//      <o.0..0> SO10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI1_SO1_SO11  -----------------------------------
// SVD Line: 6139

//  <item> SFDITEM_FIELD__SCI1_SO1_SO11
//    <name> SO11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041568) Serial data output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SO1 ) </loc>
//      <o.1..1> SO11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SO1_CKO10  -----------------------------------
// SVD Line: 6145

//  <item> SFDITEM_FIELD__SCI1_SO1_CKO10
//    <name> CKO10 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041568) Serial clock output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SO1 ) </loc>
//      <o.8..8> CKO10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SO1_CKO11  -----------------------------------
// SVD Line: 6151

//  <item> SFDITEM_FIELD__SCI1_SO1_CKO11
//    <name> CKO11 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40041568) Serial clock output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SO1 ) </loc>
//      <o.9..9> CKO11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SO1  ------------------------------------
// SVD Line: 6124

//  <rtree> SFDITEM_REG__SCI1_SO1
//    <name> SO1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041568) Serial output register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SO1 >> 0) & 0xFFFF), ((SCI1_SO1 = (SCI1_SO1 & ~(0x303UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x303) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SO1_SO10 </item>
//    <item> SFDITEM_FIELD__SCI1_SO1_SO11 </item>
//    <item> SFDITEM_FIELD__SCI1_SO1_CKO10 </item>
//    <item> SFDITEM_FIELD__SCI1_SO1_CKO11 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SOE1  --------------------------------
// SVD Line: 6159

unsigned short SCI1_SOE1 __AT (0x4004156A);



// -------------------------------  Field Item: SCI1_SOE1_SOE10  ----------------------------------
// SVD Line: 6168

//  <item> SFDITEM_FIELD__SCI1_SOE1_SOE10
//    <name> SOE10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004156A) Serial output enable of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SOE1 ) </loc>
//      <o.0..0> SOE10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SOE1_SOE11  ----------------------------------
// SVD Line: 6174

//  <item> SFDITEM_FIELD__SCI1_SOE1_SOE11
//    <name> SOE11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004156A) Serial output enable of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SOE1 ) </loc>
//      <o.1..1> SOE11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SOE1  -----------------------------------
// SVD Line: 6159

//  <rtree> SFDITEM_REG__SCI1_SOE1
//    <name> SOE1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004156A) Serial output enable register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SOE1 >> 0) & 0xFFFF), ((SCI1_SOE1 = (SCI1_SOE1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SOE1_SOE10 </item>
//    <item> SFDITEM_FIELD__SCI1_SOE1_SOE11 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SOL1  --------------------------------
// SVD Line: 6182

unsigned short SCI1_SOL1 __AT (0x40041574);



// -------------------------------  Field Item: SCI1_SOL1_SOL10  ----------------------------------
// SVD Line: 6191

//  <item> SFDITEM_FIELD__SCI1_SOL1_SOL10
//    <name> SOL10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041574) Selects inversion of the level of the transmit data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SOL1 ) </loc>
//      <o.0..0> SOL10
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SOL1  -----------------------------------
// SVD Line: 6182

//  <rtree> SFDITEM_REG__SCI1_SOL1
//    <name> SOL1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041574) Serial output level register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SOL1 >> 0) & 0xFFFF), ((SCI1_SOL1 = (SCI1_SOL1 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SOL1_SOL10 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCI1_SDR1_SDR1_SDR10  --------------------------
// SVD Line: 6199

unsigned short SCI1_SDR1_SDR1_SDR10 __AT (0x40041748);



// ---------------------------  Register Item: SCI1_SDR1_SDR1_SDR10  ------------------------------
// SVD Line: 6199

//  <item> SFDITEM_REG__SCI1_SDR1_SDR1_SDR10
//    <name> SDR10 </name>
//    <i> [Bits 15..0] RW (@ 0x40041748) Serial data register 10 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI1_SDR1_SDR1_SDR10 >> 0) & 0xFFFFFFFF), ((SCI1_SDR1_SDR1_SDR10 = (SCI1_SDR1_SDR1_SDR10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCI1_SDR1_SDR1_SDR11  --------------------------
// SVD Line: 6199

unsigned short SCI1_SDR1_SDR1_SDR11 __AT (0x4004174A);



// ---------------------------  Register Item: SCI1_SDR1_SDR1_SDR11  ------------------------------
// SVD Line: 6199

//  <item> SFDITEM_REG__SCI1_SDR1_SDR1_SDR11
//    <name> SDR11 </name>
//    <i> [Bits 15..0] RW (@ 0x4004174A) Serial data register 11 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI1_SDR1_SDR1_SDR11 >> 0) & 0xFFFFFFFF), ((SCI1_SDR1_SDR1_SDR11 = (SCI1_SDR1_SDR1_SDR11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI1_SIO20  -------------------------------
// SVD Line: 6211

unsigned char SCI1_SIO20 __AT (0x40041748);



// --------------------------------  Register Item: SCI1_SIO20  -----------------------------------
// SVD Line: 6211

//  <item> SFDITEM_REG__SCI1_SIO20
//    <name> SIO20 </name>
//    <i> [Bits 7..0] RW (@ 0x40041748) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SIO20 >> 0) & 0xFFFFFFFF), ((SCI1_SIO20 = (SCI1_SIO20 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI1_SIO21  -------------------------------
// SVD Line: 6219

unsigned char SCI1_SIO21 __AT (0x4004174A);



// --------------------------------  Register Item: SCI1_SIO21  -----------------------------------
// SVD Line: 6219

//  <item> SFDITEM_REG__SCI1_SIO21
//    <name> SIO21 </name>
//    <i> [Bits 7..0] RW (@ 0x4004174A) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SIO21 >> 0) & 0xFFFFFFFF), ((SCI1_SIO21 = (SCI1_SIO21 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI1_TXD2  --------------------------------
// SVD Line: 6227

unsigned char SCI1_TXD2 __AT (0x40041748);



// --------------------------------  Register Item: SCI1_TXD2  ------------------------------------
// SVD Line: 6227

//  <item> SFDITEM_REG__SCI1_TXD2
//    <name> TXD2 </name>
//    <i> [Bits 7..0] RW (@ 0x40041748) UART transmit data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_TXD2 >> 0) & 0xFFFFFFFF), ((SCI1_TXD2 = (SCI1_TXD2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI1_RXD2  --------------------------------
// SVD Line: 6235

unsigned char SCI1_RXD2 __AT (0x4004174A);



// --------------------------------  Register Item: SCI1_RXD2  ------------------------------------
// SVD Line: 6235

//  <item> SFDITEM_REG__SCI1_RXD2
//    <name> RXD2 </name>
//    <i> [Bits 7..0] RW (@ 0x4004174A) UART receive data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_RXD2 >> 0) & 0xFFFFFFFF), ((SCI1_RXD2 = (SCI1_RXD2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: SCI1  -------------------------------------
// SVD Line: 5777

//  <view> SCI1
//    <name> SCI1 </name>
//    <item> SFDITEM_REG__SCI1_SSR10 </item>
//    <item> SFDITEM_REG__SCI1_SSR11 </item>
//    <item> SFDITEM_REG__SCI1_SIR10 </item>
//    <item> SFDITEM_REG__SCI1_SIR11 </item>
//    <item> SFDITEM_REG__SCI1_SMR10 </item>
//    <item> SFDITEM_REG__SCI1_SMR11 </item>
//    <item> SFDITEM_REG__SCI1_SCR10 </item>
//    <item> SFDITEM_REG__SCI1_SCR11 </item>
//    <item> SFDITEM_REG__SCI1_SE1 </item>
//    <item> SFDITEM_REG__SCI1_SS1 </item>
//    <item> SFDITEM_REG__SCI1_ST1 </item>
//    <item> SFDITEM_REG__SCI1_SPS1 </item>
//    <item> SFDITEM_REG__SCI1_SO1 </item>
//    <item> SFDITEM_REG__SCI1_SOE1 </item>
//    <item> SFDITEM_REG__SCI1_SOL1 </item>
//    <item> SFDITEM_REG__SCI1_SDR1_SDR1_SDR10 </item>
//    <item> SFDITEM_REG__SCI1_SDR1_SDR1_SDR11 </item>
//    <item> SFDITEM_REG__SCI1_SIO20 </item>
//    <item> SFDITEM_REG__SCI1_SIO21 </item>
//    <item> SFDITEM_REG__SCI1_TXD2 </item>
//    <item> SFDITEM_REG__SCI1_RXD2 </item>
//  </view>
//  


// --------------------------  Register Item Address: IICA_IICCTL00  ------------------------------
// SVD Line: 6269

unsigned char IICA_IICCTL00 __AT (0x40041A30);



// ------------------------------  Field Item: IICA_IICCTL00_SPT  ---------------------------------
// SVD Line: 6277

//  <item> SFDITEM_FIELD__IICA_IICCTL00_SPT
//    <name> SPT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041A30) Stop condition trigger </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.0..0> SPT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICCTL00_STT  ---------------------------------
// SVD Line: 6283

//  <item> SFDITEM_FIELD__IICA_IICCTL00_STT
//    <name> STT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041A30) Start condition trigger </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.1..1> STT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA_IICCTL00_ACKE  ---------------------------------
// SVD Line: 6289

//  <item> SFDITEM_FIELD__IICA_IICCTL00_ACKE
//    <name> ACKE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041A30) Acknowledgment control </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.2..2> ACKE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA_IICCTL00_WTIM  ---------------------------------
// SVD Line: 6295

//  <item> SFDITEM_FIELD__IICA_IICCTL00_WTIM
//    <name> WTIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041A30) Control of wait and interrupt request generation </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.3..3> WTIM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA_IICCTL00_SPIE  ---------------------------------
// SVD Line: 6301

//  <item> SFDITEM_FIELD__IICA_IICCTL00_SPIE
//    <name> SPIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40041A30) Enable generation of interrupt request when stop condition is detected </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.4..4> SPIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA_IICCTL00_WREL  ---------------------------------
// SVD Line: 6307

//  <item> SFDITEM_FIELD__IICA_IICCTL00_WREL
//    <name> WREL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40041A30) Wait cancellation </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.5..5> WREL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA_IICCTL00_LREL  ---------------------------------
// SVD Line: 6313

//  <item> SFDITEM_FIELD__IICA_IICCTL00_LREL
//    <name> LREL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041A30) Exit from communications </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.6..6> LREL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA_IICCTL00_IICE  ---------------------------------
// SVD Line: 6319

//  <item> SFDITEM_FIELD__IICA_IICCTL00_IICE
//    <name> IICE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40041A30) I2C operation enable </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.7..7> IICE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: IICA_IICCTL00  ---------------------------------
// SVD Line: 6269

//  <rtree> SFDITEM_REG__IICA_IICCTL00
//    <name> IICCTL00 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40041A30) IICA control register 0 </i>
//    <loc> ( (unsigned char)((IICA_IICCTL00 >> 0) & 0xFF), ((IICA_IICCTL00 = (IICA_IICCTL00 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_SPT </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_STT </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_ACKE </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_WTIM </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_SPIE </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_WREL </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_LREL </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_IICE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: IICA_IICCTL01  ------------------------------
// SVD Line: 6328

unsigned char IICA_IICCTL01 __AT (0x40041A31);



// ------------------------------  Field Item: IICA_IICCTL01_PRS  ---------------------------------
// SVD Line: 6336

//  <item> SFDITEM_FIELD__IICA_IICCTL01_PRS
//    <name> PRS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041A31) Operation clock (fMCK) contro </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL01 ) </loc>
//      <o.0..0> PRS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICCTL01_DFC  ---------------------------------
// SVD Line: 6343

//  <item> SFDITEM_FIELD__IICA_IICCTL01_DFC
//    <name> DFC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041A31) Digital filter operation control </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL01 ) </loc>
//      <o.2..2> DFC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICCTL01_SMC  ---------------------------------
// SVD Line: 6350

//  <item> SFDITEM_FIELD__IICA_IICCTL01_SMC
//    <name> SMC </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041A31) Operation mode switching </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL01 ) </loc>
//      <o.3..3> SMC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICCTL01_DAD  ---------------------------------
// SVD Line: 6357

//  <item> SFDITEM_FIELD__IICA_IICCTL01_DAD
//    <name> DAD </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40041A31) Detection of SDAAn pin level (valid only when IICEn = 1) </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL01 ) </loc>
//      <o.4..4> DAD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICCTL01_CLD  ---------------------------------
// SVD Line: 6364

//  <item> SFDITEM_FIELD__IICA_IICCTL01_CLD
//    <name> CLD </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041A31) Detection of SCLAn pin level (valid only when IICEn = 1) </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL01 ) </loc>
//      <o.5..5> CLD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICCTL01_WUP  ---------------------------------
// SVD Line: 6371

//  <item> SFDITEM_FIELD__IICA_IICCTL01_WUP
//    <name> WUP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40041A31) Control of address match wakeup </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL01 ) </loc>
//      <o.7..7> WUP
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: IICA_IICCTL01  ---------------------------------
// SVD Line: 6328

//  <rtree> SFDITEM_REG__IICA_IICCTL01
//    <name> IICCTL01 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40041A31) IICA control register 0 </i>
//    <loc> ( (unsigned char)((IICA_IICCTL01 >> 0) & 0xFF), ((IICA_IICCTL01 = (IICA_IICCTL01 & ~(0x8DUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IICA_IICCTL01_PRS </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL01_DFC </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL01_SMC </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL01_DAD </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL01_CLD </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL01_WUP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: IICA_IICWL0  -------------------------------
// SVD Line: 6381

unsigned char IICA_IICWL0 __AT (0x40041A32);



// -------------------------------  Register Item: IICA_IICWL0  -----------------------------------
// SVD Line: 6381

//  <item> SFDITEM_REG__IICA_IICWL0
//    <name> IICWL0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041A32) IICA low-level width setting register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA_IICWL0 >> 0) & 0xFFFFFFFF), ((IICA_IICWL0 = (IICA_IICWL0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: IICA_IICWH0  -------------------------------
// SVD Line: 6389

unsigned char IICA_IICWH0 __AT (0x40041A33);



// -------------------------------  Register Item: IICA_IICWH0  -----------------------------------
// SVD Line: 6389

//  <item> SFDITEM_REG__IICA_IICWH0
//    <name> IICWH0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041A33) IICA high-level width setting register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA_IICWH0 >> 0) & 0xFFFFFFFF), ((IICA_IICWH0 = (IICA_IICWH0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: IICA_SVA0  --------------------------------
// SVD Line: 6397

unsigned char IICA_SVA0 __AT (0x40041A34);



// --------------------------------  Register Item: IICA_SVA0  ------------------------------------
// SVD Line: 6397

//  <item> SFDITEM_REG__IICA_SVA0
//    <name> SVA0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041A34) Slave address register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA_SVA0 >> 0) & 0xFFFFFFFF), ((IICA_SVA0 = (IICA_SVA0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: IICA_IICA0  -------------------------------
// SVD Line: 6405

unsigned char IICA_IICA0 __AT (0x40041B50);



// --------------------------------  Register Item: IICA_IICA0  -----------------------------------
// SVD Line: 6405

//  <item> SFDITEM_REG__IICA_IICA0
//    <name> IICA0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041B50) IICA shift register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA_IICA0 >> 0) & 0xFFFFFFFF), ((IICA_IICA0 = (IICA_IICA0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: IICA_IICS0  -------------------------------
// SVD Line: 6413

unsigned char IICA_IICS0 __AT (0x40041B51);



// -------------------------------  Field Item: IICA_IICS0_MSTS  ----------------------------------
// SVD Line: 6422

//  <item> SFDITEM_FIELD__IICA_IICS0_MSTS
//    <name> MSTS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40041B51) Master status check flag </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.7..7> MSTS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_ALD  -----------------------------------
// SVD Line: 6428

//  <item> SFDITEM_FIELD__IICA_IICS0_ALD
//    <name> ALD </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041B51) Detection of arbitration loss </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.6..6> ALD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_EXC  -----------------------------------
// SVD Line: 6434

//  <item> SFDITEM_FIELD__IICA_IICS0_EXC
//    <name> EXC </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041B51) Detection of extension code reception </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.5..5> EXC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_COI  -----------------------------------
// SVD Line: 6440

//  <item> SFDITEM_FIELD__IICA_IICS0_COI
//    <name> COI </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40041B51) Detection of matching addresses </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.4..4> COI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_TRC  -----------------------------------
// SVD Line: 6446

//  <item> SFDITEM_FIELD__IICA_IICS0_TRC
//    <name> TRC </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40041B51) Detection of transmit/receive status </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.3..3> TRC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_ACKD  ----------------------------------
// SVD Line: 6452

//  <item> SFDITEM_FIELD__IICA_IICS0_ACKD
//    <name> ACKD </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041B51) Detection of acknowledge (ACK) </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.2..2> ACKD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_STD  -----------------------------------
// SVD Line: 6458

//  <item> SFDITEM_FIELD__IICA_IICS0_STD
//    <name> STD </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041B51) Detection of start condition </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.1..1> STD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_SPD  -----------------------------------
// SVD Line: 6464

//  <item> SFDITEM_FIELD__IICA_IICS0_SPD
//    <name> SPD </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041B51) Detection of stop condition </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.0..0> SPD
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: IICA_IICS0  -----------------------------------
// SVD Line: 6413

//  <rtree> SFDITEM_REG__IICA_IICS0
//    <name> IICS0 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40041B51) IICA status register 0 </i>
//    <loc> ( (unsigned char)((IICA_IICS0 >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__IICA_IICS0_MSTS </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_ALD </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_EXC </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_COI </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_TRC </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_ACKD </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_STD </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_SPD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: IICA_IICF0  -------------------------------
// SVD Line: 6473

unsigned char IICA_IICF0 __AT (0x40041B52);



// -------------------------------  Field Item: IICA_IICF0_STCF  ----------------------------------
// SVD Line: 6482

//  <item> SFDITEM_FIELD__IICA_IICF0_STCF
//    <name> STCF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40041B52) STT clear flag </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICF0 ) </loc>
//      <o.7..7> STCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICF0_IICBSY  ---------------------------------
// SVD Line: 6489

//  <item> SFDITEM_FIELD__IICA_IICF0_IICBSY
//    <name> IICBSY </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041B52) I2C bus status flag </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICF0 ) </loc>
//      <o.6..6> IICBSY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICF0_STCEN  ----------------------------------
// SVD Line: 6496

//  <item> SFDITEM_FIELD__IICA_IICF0_STCEN
//    <name> STCEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041B52) Initial start enable trigger </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICF0 ) </loc>
//      <o.1..1> STCEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICF0_IICRSV  ---------------------------------
// SVD Line: 6503

//  <item> SFDITEM_FIELD__IICA_IICF0_IICRSV
//    <name> IICRSV </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041B52) Communication reservation function disable bit </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICF0 ) </loc>
//      <o.0..0> IICRSV
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: IICA_IICF0  -----------------------------------
// SVD Line: 6473

//  <rtree> SFDITEM_REG__IICA_IICF0
//    <name> IICF0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40041B52) IICA flag register 0 </i>
//    <loc> ( (unsigned char)((IICA_IICF0 >> 0) & 0xFF), ((IICA_IICF0 = (IICA_IICF0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IICA_IICF0_STCF </item>
//    <item> SFDITEM_FIELD__IICA_IICF0_IICBSY </item>
//    <item> SFDITEM_FIELD__IICA_IICF0_STCEN </item>
//    <item> SFDITEM_FIELD__IICA_IICF0_IICRSV </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: IICA  -------------------------------------
// SVD Line: 6247

//  <view> IICA
//    <name> IICA </name>
//    <item> SFDITEM_REG__IICA_IICCTL00 </item>
//    <item> SFDITEM_REG__IICA_IICCTL01 </item>
//    <item> SFDITEM_REG__IICA_IICWL0 </item>
//    <item> SFDITEM_REG__IICA_IICWH0 </item>
//    <item> SFDITEM_REG__IICA_SVA0 </item>
//    <item> SFDITEM_REG__IICA_IICA0 </item>
//    <item> SFDITEM_REG__IICA_IICS0 </item>
//    <item> SFDITEM_REG__IICA_IICF0 </item>
//  </view>
//  


// ----------------------------  Register Item Address: IRDA_IRCR  --------------------------------
// SVD Line: 6533

unsigned char IRDA_IRCR __AT (0x400440A0);



// ------------------------------  Field Item: IRDA_IRCR_IRRXINV  ---------------------------------
// SVD Line: 6541

//  <item> SFDITEM_FIELD__IRDA_IRCR_IRRXINV
//    <name> IRRXINV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400440A0) IrRxD data polarity switching </i>
//    <check> 
//      <loc> ( (unsigned char) IRDA_IRCR ) </loc>
//      <o.2..2> IRRXINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IRDA_IRCR_IRTXINV  ---------------------------------
// SVD Line: 6547

//  <item> SFDITEM_FIELD__IRDA_IRCR_IRTXINV
//    <name> IRTXINV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400440A0) IrRxD data polarity switching </i>
//    <check> 
//      <loc> ( (unsigned char) IRDA_IRCR ) </loc>
//      <o.3..3> IRTXINV
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IRDA_IRCR_IRCKS  ----------------------------------
// SVD Line: 6553

//  <item> SFDITEM_FIELD__IRDA_IRCR_IRCKS
//    <name> IRCKS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x400440A0) IrRxD clock selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((IRDA_IRCR >> 4) & 0x7), ((IRDA_IRCR = (IRDA_IRCR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: IRDA_IRCR_IRE  -----------------------------------
// SVD Line: 6559

//  <item> SFDITEM_FIELD__IRDA_IRCR_IRE
//    <name> IRE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400440A0) IrRxD enable </i>
//    <check> 
//      <loc> ( (unsigned char) IRDA_IRCR ) </loc>
//      <o.7..7> IRE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: IRDA_IRCR  -----------------------------------
// SVD Line: 6533

//  <rtree> SFDITEM_REG__IRDA_IRCR
//    <name> IRCR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400440A0) IrDA control register </i>
//    <loc> ( (unsigned char)((IRDA_IRCR >> 0) & 0xFF), ((IRDA_IRCR = (IRDA_IRCR & ~(0xFCUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IRDA_IRCR_IRRXINV </item>
//    <item> SFDITEM_FIELD__IRDA_IRCR_IRTXINV </item>
//    <item> SFDITEM_FIELD__IRDA_IRCR_IRCKS </item>
//    <item> SFDITEM_FIELD__IRDA_IRCR_IRE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: IRDA  -------------------------------------
// SVD Line: 6517

//  <view> IRDA
//    <name> IRDA </name>
//    <item> SFDITEM_REG__IRDA_IRCR </item>
//  </view>
//  


// ----------------------  Register Item Address: DMA_DMAEN_DMAEN_DMAEN0  -------------------------
// SVD Line: 6588

unsigned char DMA_DMAEN_DMAEN_DMAEN0 __AT (0x40005000);



// --------------------------  Register Item: DMA_DMAEN_DMAEN_DMAEN0  -----------------------------
// SVD Line: 6588

//  <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN0
//    <name> DMAEN0 </name>
//    <i> [Bits 7..0] RW (@ 0x40005000) DMA activation enable register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAEN_DMAEN_DMAEN0 >> 0) & 0xFFFFFFFF), ((DMA_DMAEN_DMAEN_DMAEN0 = (DMA_DMAEN_DMAEN_DMAEN0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAEN_DMAEN_DMAEN1  -------------------------
// SVD Line: 6588

unsigned char DMA_DMAEN_DMAEN_DMAEN1 __AT (0x40005001);



// --------------------------  Register Item: DMA_DMAEN_DMAEN_DMAEN1  -----------------------------
// SVD Line: 6588

//  <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN1
//    <name> DMAEN1 </name>
//    <i> [Bits 7..0] RW (@ 0x40005001) DMA activation enable register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAEN_DMAEN_DMAEN1 >> 0) & 0xFFFFFFFF), ((DMA_DMAEN_DMAEN_DMAEN1 = (DMA_DMAEN_DMAEN_DMAEN1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAEN_DMAEN_DMAEN2  -------------------------
// SVD Line: 6588

unsigned char DMA_DMAEN_DMAEN_DMAEN2 __AT (0x40005002);



// --------------------------  Register Item: DMA_DMAEN_DMAEN_DMAEN2  -----------------------------
// SVD Line: 6588

//  <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN2
//    <name> DMAEN2 </name>
//    <i> [Bits 7..0] RW (@ 0x40005002) DMA activation enable register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAEN_DMAEN_DMAEN2 >> 0) & 0xFFFFFFFF), ((DMA_DMAEN_DMAEN_DMAEN2 = (DMA_DMAEN_DMAEN_DMAEN2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAEN_DMAEN_DMAEN3  -------------------------
// SVD Line: 6588

unsigned char DMA_DMAEN_DMAEN_DMAEN3 __AT (0x40005003);



// --------------------------  Register Item: DMA_DMAEN_DMAEN_DMAEN3  -----------------------------
// SVD Line: 6588

//  <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN3
//    <name> DMAEN3 </name>
//    <i> [Bits 7..0] RW (@ 0x40005003) DMA activation enable register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAEN_DMAEN_DMAEN3 >> 0) & 0xFFFFFFFF), ((DMA_DMAEN_DMAEN_DMAEN3 = (DMA_DMAEN_DMAEN_DMAEN3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAEN_DMAEN_DMAEN4  -------------------------
// SVD Line: 6588

unsigned char DMA_DMAEN_DMAEN_DMAEN4 __AT (0x40005004);



// --------------------------  Register Item: DMA_DMAEN_DMAEN_DMAEN4  -----------------------------
// SVD Line: 6588

//  <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN4
//    <name> DMAEN4 </name>
//    <i> [Bits 7..0] RW (@ 0x40005004) DMA activation enable register 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAEN_DMAEN_DMAEN4 >> 0) & 0xFFFFFFFF), ((DMA_DMAEN_DMAEN_DMAEN4 = (DMA_DMAEN_DMAEN_DMAEN4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA_DMABAR  -------------------------------
// SVD Line: 6600

unsigned int DMA_DMABAR __AT (0x40005008);



// --------------------------------  Register Item: DMA_DMABAR  -----------------------------------
// SVD Line: 6600

//  <item> SFDITEM_REG__DMA_DMABAR
//    <name> DMABAR </name>
//    <i> [Bits 31..0] RW (@ 0x40005008) DMA base address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_DMABAR >> 0) & 0xFFFFFFFF), ((DMA_DMABAR = (DMA_DMABAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA_IFPRCR  -------------------------------
// SVD Line: 6609

unsigned int DMA_IFPRCR __AT (0x4000500C);



// --------------------------------  Register Item: DMA_IFPRCR  -----------------------------------
// SVD Line: 6609

//  <item> SFDITEM_REG__DMA_IFPRCR
//    <name> IFPRCR </name>
//    <i> [Bits 31..0] RW (@ 0x4000500C) DMA Trigger Protect register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_IFPRCR >> 0) & 0xFFFFFFFF), ((DMA_IFPRCR = (DMA_IFPRCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAIF_DMAIF_DMAIF0  -------------------------
// SVD Line: 6618

unsigned char DMA_DMAIF_DMAIF_DMAIF0 __AT (0x40005010);



// --------------------------  Register Item: DMA_DMAIF_DMAIF_DMAIF0  -----------------------------
// SVD Line: 6618

//  <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF0
//    <name> DMAIF0 </name>
//    <i> [Bits 7..0] RW (@ 0x40005010) DMA Trigger enable register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAIF_DMAIF_DMAIF0 >> 0) & 0xFFFFFFFF), ((DMA_DMAIF_DMAIF_DMAIF0 = (DMA_DMAIF_DMAIF_DMAIF0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAIF_DMAIF_DMAIF1  -------------------------
// SVD Line: 6618

unsigned char DMA_DMAIF_DMAIF_DMAIF1 __AT (0x40005011);



// --------------------------  Register Item: DMA_DMAIF_DMAIF_DMAIF1  -----------------------------
// SVD Line: 6618

//  <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF1
//    <name> DMAIF1 </name>
//    <i> [Bits 7..0] RW (@ 0x40005011) DMA Trigger enable register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAIF_DMAIF_DMAIF1 >> 0) & 0xFFFFFFFF), ((DMA_DMAIF_DMAIF_DMAIF1 = (DMA_DMAIF_DMAIF_DMAIF1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAIF_DMAIF_DMAIF2  -------------------------
// SVD Line: 6618

unsigned char DMA_DMAIF_DMAIF_DMAIF2 __AT (0x40005012);



// --------------------------  Register Item: DMA_DMAIF_DMAIF_DMAIF2  -----------------------------
// SVD Line: 6618

//  <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF2
//    <name> DMAIF2 </name>
//    <i> [Bits 7..0] RW (@ 0x40005012) DMA Trigger enable register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAIF_DMAIF_DMAIF2 >> 0) & 0xFFFFFFFF), ((DMA_DMAIF_DMAIF_DMAIF2 = (DMA_DMAIF_DMAIF_DMAIF2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAIF_DMAIF_DMAIF3  -------------------------
// SVD Line: 6618

unsigned char DMA_DMAIF_DMAIF_DMAIF3 __AT (0x40005013);



// --------------------------  Register Item: DMA_DMAIF_DMAIF_DMAIF3  -----------------------------
// SVD Line: 6618

//  <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF3
//    <name> DMAIF3 </name>
//    <i> [Bits 7..0] RW (@ 0x40005013) DMA Trigger enable register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAIF_DMAIF_DMAIF3 >> 0) & 0xFFFFFFFF), ((DMA_DMAIF_DMAIF_DMAIF3 = (DMA_DMAIF_DMAIF_DMAIF3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAIF_DMAIF_DMAIF4  -------------------------
// SVD Line: 6618

unsigned char DMA_DMAIF_DMAIF_DMAIF4 __AT (0x40005014);



// --------------------------  Register Item: DMA_DMAIF_DMAIF_DMAIF4  -----------------------------
// SVD Line: 6618

//  <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF4
//    <name> DMAIF4 </name>
//    <i> [Bits 7..0] RW (@ 0x40005014) DMA Trigger enable register 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAIF_DMAIF_DMAIF4 >> 0) & 0xFFFFFFFF), ((DMA_DMAIF_DMAIF_DMAIF4 = (DMA_DMAIF_DMAIF_DMAIF4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: DMA  --------------------------------------
// SVD Line: 6572

//  <view> DMA
//    <name> DMA </name>
//    <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN0 </item>
//    <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN1 </item>
//    <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN2 </item>
//    <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN3 </item>
//    <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN4 </item>
//    <item> SFDITEM_REG__DMA_DMABAR </item>
//    <item> SFDITEM_REG__DMA_IFPRCR </item>
//    <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF0 </item>
//    <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF1 </item>
//    <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF2 </item>
//    <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF3 </item>
//    <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF4 </item>
//  </view>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC0  ------------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC0 __AT (0x20000000);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC0  ----------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC0
//    <name> [0] </name>
//    <i> [Bits 7..0] RW (@ 0x20000000) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC0 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC0 = (DMAVEC_VEC_VEC_VEC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC1  ------------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC1 __AT (0x20000001);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC1  ----------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC1
//    <name> [1] </name>
//    <i> [Bits 7..0] RW (@ 0x20000001) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC1 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC1 = (DMAVEC_VEC_VEC_VEC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC2  ------------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC2 __AT (0x20000002);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC2  ----------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC2
//    <name> [2] </name>
//    <i> [Bits 7..0] RW (@ 0x20000002) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC2 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC2 = (DMAVEC_VEC_VEC_VEC2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC3  ------------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC3 __AT (0x20000003);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC3  ----------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC3
//    <name> [3] </name>
//    <i> [Bits 7..0] RW (@ 0x20000003) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC3 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC3 = (DMAVEC_VEC_VEC_VEC3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC4  ------------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC4 __AT (0x20000004);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC4  ----------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC4
//    <name> [4] </name>
//    <i> [Bits 7..0] RW (@ 0x20000004) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC4 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC4 = (DMAVEC_VEC_VEC_VEC4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC5  ------------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC5 __AT (0x20000005);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC5  ----------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC5
//    <name> [5] </name>
//    <i> [Bits 7..0] RW (@ 0x20000005) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC5 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC5 = (DMAVEC_VEC_VEC_VEC5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC6  ------------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC6 __AT (0x20000006);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC6  ----------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC6
//    <name> [6] </name>
//    <i> [Bits 7..0] RW (@ 0x20000006) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC6 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC6 = (DMAVEC_VEC_VEC_VEC6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC7  ------------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC7 __AT (0x20000007);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC7  ----------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC7
//    <name> [7] </name>
//    <i> [Bits 7..0] RW (@ 0x20000007) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC7 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC7 = (DMAVEC_VEC_VEC_VEC7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC8  ------------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC8 __AT (0x20000008);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC8  ----------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC8
//    <name> [8] </name>
//    <i> [Bits 7..0] RW (@ 0x20000008) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC8 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC8 = (DMAVEC_VEC_VEC_VEC8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC9  ------------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC9 __AT (0x20000009);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC9  ----------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC9
//    <name> [9] </name>
//    <i> [Bits 7..0] RW (@ 0x20000009) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC9 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC9 = (DMAVEC_VEC_VEC_VEC9 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC10  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC10 __AT (0x2000000A);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC10  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC10
//    <name> [10] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000A) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC10 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC10 = (DMAVEC_VEC_VEC_VEC10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC11  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC11 __AT (0x2000000B);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC11  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC11
//    <name> [11] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000B) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC11 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC11 = (DMAVEC_VEC_VEC_VEC11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC12  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC12 __AT (0x2000000C);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC12  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC12
//    <name> [12] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000C) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC12 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC12 = (DMAVEC_VEC_VEC_VEC12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC13  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC13 __AT (0x2000000D);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC13  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC13
//    <name> [13] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000D) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC13 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC13 = (DMAVEC_VEC_VEC_VEC13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC14  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC14 __AT (0x2000000E);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC14  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC14
//    <name> [14] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000E) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC14 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC14 = (DMAVEC_VEC_VEC_VEC14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC15  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC15 __AT (0x2000000F);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC15  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC15
//    <name> [15] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000F) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC15 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC15 = (DMAVEC_VEC_VEC_VEC15 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC16  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC16 __AT (0x20000010);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC16  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC16
//    <name> [16] </name>
//    <i> [Bits 7..0] RW (@ 0x20000010) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC16 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC16 = (DMAVEC_VEC_VEC_VEC16 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC17  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC17 __AT (0x20000011);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC17  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC17
//    <name> [17] </name>
//    <i> [Bits 7..0] RW (@ 0x20000011) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC17 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC17 = (DMAVEC_VEC_VEC_VEC17 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC18  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC18 __AT (0x20000012);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC18  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC18
//    <name> [18] </name>
//    <i> [Bits 7..0] RW (@ 0x20000012) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC18 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC18 = (DMAVEC_VEC_VEC_VEC18 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC19  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC19 __AT (0x20000013);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC19  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC19
//    <name> [19] </name>
//    <i> [Bits 7..0] RW (@ 0x20000013) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC19 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC19 = (DMAVEC_VEC_VEC_VEC19 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC20  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC20 __AT (0x20000014);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC20  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC20
//    <name> [20] </name>
//    <i> [Bits 7..0] RW (@ 0x20000014) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC20 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC20 = (DMAVEC_VEC_VEC_VEC20 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC21  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC21 __AT (0x20000015);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC21  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC21
//    <name> [21] </name>
//    <i> [Bits 7..0] RW (@ 0x20000015) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC21 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC21 = (DMAVEC_VEC_VEC_VEC21 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC22  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC22 __AT (0x20000016);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC22  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC22
//    <name> [22] </name>
//    <i> [Bits 7..0] RW (@ 0x20000016) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC22 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC22 = (DMAVEC_VEC_VEC_VEC22 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC23  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC23 __AT (0x20000017);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC23  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC23
//    <name> [23] </name>
//    <i> [Bits 7..0] RW (@ 0x20000017) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC23 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC23 = (DMAVEC_VEC_VEC_VEC23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC24  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC24 __AT (0x20000018);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC24  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC24
//    <name> [24] </name>
//    <i> [Bits 7..0] RW (@ 0x20000018) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC24 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC24 = (DMAVEC_VEC_VEC_VEC24 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC25  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC25 __AT (0x20000019);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC25  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC25
//    <name> [25] </name>
//    <i> [Bits 7..0] RW (@ 0x20000019) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC25 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC25 = (DMAVEC_VEC_VEC_VEC25 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC26  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC26 __AT (0x2000001A);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC26  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC26
//    <name> [26] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001A) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC26 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC26 = (DMAVEC_VEC_VEC_VEC26 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC27  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC27 __AT (0x2000001B);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC27  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC27
//    <name> [27] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001B) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC27 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC27 = (DMAVEC_VEC_VEC_VEC27 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC28  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC28 __AT (0x2000001C);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC28  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC28
//    <name> [28] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001C) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC28 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC28 = (DMAVEC_VEC_VEC_VEC28 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC29  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC29 __AT (0x2000001D);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC29  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC29
//    <name> [29] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001D) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC29 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC29 = (DMAVEC_VEC_VEC_VEC29 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC30  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC30 __AT (0x2000001E);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC30  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC30
//    <name> [30] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001E) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC30 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC30 = (DMAVEC_VEC_VEC_VEC30 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC31  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC31 __AT (0x2000001F);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC31  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC31
//    <name> [31] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001F) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC31 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC31 = (DMAVEC_VEC_VEC_VEC31 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC32  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC32 __AT (0x20000020);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC32  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC32
//    <name> [32] </name>
//    <i> [Bits 7..0] RW (@ 0x20000020) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC32 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC32 = (DMAVEC_VEC_VEC_VEC32 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC33  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC33 __AT (0x20000021);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC33  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC33
//    <name> [33] </name>
//    <i> [Bits 7..0] RW (@ 0x20000021) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC33 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC33 = (DMAVEC_VEC_VEC_VEC33 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC34  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC34 __AT (0x20000022);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC34  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC34
//    <name> [34] </name>
//    <i> [Bits 7..0] RW (@ 0x20000022) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC34 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC34 = (DMAVEC_VEC_VEC_VEC34 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC35  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC35 __AT (0x20000023);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC35  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC35
//    <name> [35] </name>
//    <i> [Bits 7..0] RW (@ 0x20000023) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC35 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC35 = (DMAVEC_VEC_VEC_VEC35 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC36  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC36 __AT (0x20000024);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC36  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC36
//    <name> [36] </name>
//    <i> [Bits 7..0] RW (@ 0x20000024) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC36 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC36 = (DMAVEC_VEC_VEC_VEC36 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC37  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC37 __AT (0x20000025);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC37  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC37
//    <name> [37] </name>
//    <i> [Bits 7..0] RW (@ 0x20000025) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC37 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC37 = (DMAVEC_VEC_VEC_VEC37 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC38  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC38 __AT (0x20000026);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC38  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC38
//    <name> [38] </name>
//    <i> [Bits 7..0] RW (@ 0x20000026) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC38 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC38 = (DMAVEC_VEC_VEC_VEC38 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC39  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC39 __AT (0x20000027);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC39  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC39
//    <name> [39] </name>
//    <i> [Bits 7..0] RW (@ 0x20000027) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC39 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC39 = (DMAVEC_VEC_VEC_VEC39 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC40  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC40 __AT (0x20000028);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC40  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC40
//    <name> [40] </name>
//    <i> [Bits 7..0] RW (@ 0x20000028) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC40 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC40 = (DMAVEC_VEC_VEC_VEC40 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC41  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC41 __AT (0x20000029);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC41  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC41
//    <name> [41] </name>
//    <i> [Bits 7..0] RW (@ 0x20000029) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC41 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC41 = (DMAVEC_VEC_VEC_VEC41 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC42  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC42 __AT (0x2000002A);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC42  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC42
//    <name> [42] </name>
//    <i> [Bits 7..0] RW (@ 0x2000002A) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC42 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC42 = (DMAVEC_VEC_VEC_VEC42 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC43  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC43 __AT (0x2000002B);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC43  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC43
//    <name> [43] </name>
//    <i> [Bits 7..0] RW (@ 0x2000002B) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC43 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC43 = (DMAVEC_VEC_VEC_VEC43 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC44  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC44 __AT (0x2000002C);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC44  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC44
//    <name> [44] </name>
//    <i> [Bits 7..0] RW (@ 0x2000002C) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC44 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC44 = (DMAVEC_VEC_VEC_VEC44 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC45  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC45 __AT (0x2000002D);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC45  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC45
//    <name> [45] </name>
//    <i> [Bits 7..0] RW (@ 0x2000002D) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC45 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC45 = (DMAVEC_VEC_VEC_VEC45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC46  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC46 __AT (0x2000002E);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC46  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC46
//    <name> [46] </name>
//    <i> [Bits 7..0] RW (@ 0x2000002E) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC46 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC46 = (DMAVEC_VEC_VEC_VEC46 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC47  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC47 __AT (0x2000002F);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC47  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC47
//    <name> [47] </name>
//    <i> [Bits 7..0] RW (@ 0x2000002F) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC47 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC47 = (DMAVEC_VEC_VEC_VEC47 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC48  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC48 __AT (0x20000030);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC48  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC48
//    <name> [48] </name>
//    <i> [Bits 7..0] RW (@ 0x20000030) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC48 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC48 = (DMAVEC_VEC_VEC_VEC48 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC49  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC49 __AT (0x20000031);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC49  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC49
//    <name> [49] </name>
//    <i> [Bits 7..0] RW (@ 0x20000031) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC49 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC49 = (DMAVEC_VEC_VEC_VEC49 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC50  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC50 __AT (0x20000032);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC50  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC50
//    <name> [50] </name>
//    <i> [Bits 7..0] RW (@ 0x20000032) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC50 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC50 = (DMAVEC_VEC_VEC_VEC50 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC51  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC51 __AT (0x20000033);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC51  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC51
//    <name> [51] </name>
//    <i> [Bits 7..0] RW (@ 0x20000033) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC51 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC51 = (DMAVEC_VEC_VEC_VEC51 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC52  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC52 __AT (0x20000034);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC52  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC52
//    <name> [52] </name>
//    <i> [Bits 7..0] RW (@ 0x20000034) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC52 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC52 = (DMAVEC_VEC_VEC_VEC52 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC53  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC53 __AT (0x20000035);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC53  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC53
//    <name> [53] </name>
//    <i> [Bits 7..0] RW (@ 0x20000035) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC53 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC53 = (DMAVEC_VEC_VEC_VEC53 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC54  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC54 __AT (0x20000036);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC54  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC54
//    <name> [54] </name>
//    <i> [Bits 7..0] RW (@ 0x20000036) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC54 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC54 = (DMAVEC_VEC_VEC_VEC54 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC55  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC55 __AT (0x20000037);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC55  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC55
//    <name> [55] </name>
//    <i> [Bits 7..0] RW (@ 0x20000037) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC55 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC55 = (DMAVEC_VEC_VEC_VEC55 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC56  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC56 __AT (0x20000038);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC56  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC56
//    <name> [56] </name>
//    <i> [Bits 7..0] RW (@ 0x20000038) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC56 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC56 = (DMAVEC_VEC_VEC_VEC56 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC57  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC57 __AT (0x20000039);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC57  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC57
//    <name> [57] </name>
//    <i> [Bits 7..0] RW (@ 0x20000039) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC57 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC57 = (DMAVEC_VEC_VEC_VEC57 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC58  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC58 __AT (0x2000003A);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC58  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC58
//    <name> [58] </name>
//    <i> [Bits 7..0] RW (@ 0x2000003A) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC58 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC58 = (DMAVEC_VEC_VEC_VEC58 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC59  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC59 __AT (0x2000003B);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC59  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC59
//    <name> [59] </name>
//    <i> [Bits 7..0] RW (@ 0x2000003B) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC59 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC59 = (DMAVEC_VEC_VEC_VEC59 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC60  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC60 __AT (0x2000003C);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC60  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC60
//    <name> [60] </name>
//    <i> [Bits 7..0] RW (@ 0x2000003C) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC60 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC60 = (DMAVEC_VEC_VEC_VEC60 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC61  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC61 __AT (0x2000003D);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC61  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC61
//    <name> [61] </name>
//    <i> [Bits 7..0] RW (@ 0x2000003D) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC61 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC61 = (DMAVEC_VEC_VEC_VEC61 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC62  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC62 __AT (0x2000003E);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC62  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC62
//    <name> [62] </name>
//    <i> [Bits 7..0] RW (@ 0x2000003E) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC62 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC62 = (DMAVEC_VEC_VEC_VEC62 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC63  -----------------------
// SVD Line: 6649

unsigned char DMAVEC_VEC_VEC_VEC63 __AT (0x2000003F);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC63  ---------------------------
// SVD Line: 6649

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC63
//    <name> [63] </name>
//    <i> [Bits 7..0] RW (@ 0x2000003F) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC63 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC63 = (DMAVEC_VEC_VEC_VEC63 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Array ITree: DMAVEC_VEC  --------------------------------
// SVD Line: 6649

//  <itree> SFDITEM_REG__DMAVEC_VEC
//    <name> VEC </name>
//    <i> DMA vector area </i>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC0 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC1 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC2 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC3 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC4 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC5 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC6 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC7 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC8 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC9 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC10 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC11 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC12 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC13 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC14 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC15 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC16 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC17 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC18 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC19 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC20 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC21 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC22 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC23 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC24 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC25 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC26 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC27 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC28 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC29 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC30 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC31 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC32 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC33 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC34 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC35 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC36 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC37 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC38 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC39 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC40 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC41 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC42 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC43 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC44 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC45 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC46 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC47 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC48 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC49 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC50 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC51 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC52 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC53 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC54 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC55 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC56 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC57 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC58 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC59 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC60 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC61 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC62 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC63 </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL0_DMACR __AT (0x20000040);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000040) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000040) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000040) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_DAMOD  -------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000040) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_SAMOD  -------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000040) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000040) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000040) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL0_DMACR  --------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000040) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL0_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMACR = (DMAVEC_CTRL_CTRL_CTRL0_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL0_DMBLS __AT (0x20000042);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000042) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL0_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMBLS = (DMAVEC_CTRL_CTRL_CTRL0_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL0_DMACT __AT (0x20000044);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000044) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL0_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMACT = (DMAVEC_CTRL_CTRL_CTRL0_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL0_DMRLD __AT (0x20000046);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000046) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL0_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMRLD = (DMAVEC_CTRL_CTRL_CTRL0_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL0_DMSAR __AT (0x20000048);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000048) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL0_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMSAR = (DMAVEC_CTRL_CTRL_CTRL0_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL0_DMDAR __AT (0x2000004C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000004C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL0_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMDAR = (DMAVEC_CTRL_CTRL_CTRL0_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL0  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL0
//    <name> [0] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL1_DMACR __AT (0x20000050);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000050) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000050) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000050) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_DAMOD  -------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000050) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_SAMOD  -------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000050) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000050) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000050) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL1_DMACR  --------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000050) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL1_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMACR = (DMAVEC_CTRL_CTRL_CTRL1_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL1_DMBLS __AT (0x20000052);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000052) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL1_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMBLS = (DMAVEC_CTRL_CTRL_CTRL1_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL1_DMACT __AT (0x20000054);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000054) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL1_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMACT = (DMAVEC_CTRL_CTRL_CTRL1_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL1_DMRLD __AT (0x20000056);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000056) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL1_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMRLD = (DMAVEC_CTRL_CTRL_CTRL1_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL1_DMSAR __AT (0x20000058);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000058) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL1_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMSAR = (DMAVEC_CTRL_CTRL_CTRL1_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL1_DMDAR __AT (0x2000005C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000005C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL1_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMDAR = (DMAVEC_CTRL_CTRL_CTRL1_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL1  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL1
//    <name> [1] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL2_DMACR __AT (0x20000060);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000060) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000060) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000060) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_DAMOD  -------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000060) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_SAMOD  -------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000060) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000060) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000060) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL2_DMACR  --------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000060) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL2_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMACR = (DMAVEC_CTRL_CTRL_CTRL2_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL2_DMBLS __AT (0x20000062);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000062) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL2_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMBLS = (DMAVEC_CTRL_CTRL_CTRL2_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL2_DMACT __AT (0x20000064);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000064) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL2_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMACT = (DMAVEC_CTRL_CTRL_CTRL2_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL2_DMRLD __AT (0x20000066);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000066) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL2_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMRLD = (DMAVEC_CTRL_CTRL_CTRL2_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL2_DMSAR __AT (0x20000068);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000068) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL2_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMSAR = (DMAVEC_CTRL_CTRL_CTRL2_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL2_DMDAR __AT (0x2000006C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000006C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL2_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMDAR = (DMAVEC_CTRL_CTRL_CTRL2_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL2  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL2
//    <name> [2] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL3_DMACR __AT (0x20000070);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000070) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000070) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000070) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_DAMOD  -------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000070) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_SAMOD  -------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000070) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000070) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000070) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL3_DMACR  --------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000070) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL3_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMACR = (DMAVEC_CTRL_CTRL_CTRL3_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL3_DMBLS __AT (0x20000072);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000072) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL3_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMBLS = (DMAVEC_CTRL_CTRL_CTRL3_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL3_DMACT __AT (0x20000074);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000074) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL3_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMACT = (DMAVEC_CTRL_CTRL_CTRL3_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL3_DMRLD __AT (0x20000076);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000076) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL3_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMRLD = (DMAVEC_CTRL_CTRL_CTRL3_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL3_DMSAR __AT (0x20000078);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000078) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL3_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMSAR = (DMAVEC_CTRL_CTRL_CTRL3_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL3_DMDAR __AT (0x2000007C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000007C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL3_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMDAR = (DMAVEC_CTRL_CTRL_CTRL3_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL3  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL3
//    <name> [3] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL4_DMACR __AT (0x20000080);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000080) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000080) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000080) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_DAMOD  -------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000080) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_SAMOD  -------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000080) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000080) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000080) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL4_DMACR  --------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000080) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL4_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMACR = (DMAVEC_CTRL_CTRL_CTRL4_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL4_DMBLS __AT (0x20000082);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000082) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL4_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMBLS = (DMAVEC_CTRL_CTRL_CTRL4_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL4_DMACT __AT (0x20000084);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000084) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL4_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMACT = (DMAVEC_CTRL_CTRL_CTRL4_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL4_DMRLD __AT (0x20000086);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000086) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL4_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMRLD = (DMAVEC_CTRL_CTRL_CTRL4_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL4_DMSAR __AT (0x20000088);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000088) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL4_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMSAR = (DMAVEC_CTRL_CTRL_CTRL4_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL4_DMDAR __AT (0x2000008C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000008C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL4_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMDAR = (DMAVEC_CTRL_CTRL_CTRL4_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL4  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL4
//    <name> [4] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL5_DMACR __AT (0x20000090);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000090) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000090) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000090) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_DAMOD  -------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000090) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_SAMOD  -------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000090) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000090) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000090) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL5_DMACR  --------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000090) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL5_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMACR = (DMAVEC_CTRL_CTRL_CTRL5_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL5_DMBLS __AT (0x20000092);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000092) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL5_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMBLS = (DMAVEC_CTRL_CTRL_CTRL5_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL5_DMACT __AT (0x20000094);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000094) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL5_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMACT = (DMAVEC_CTRL_CTRL_CTRL5_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL5_DMRLD __AT (0x20000096);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000096) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL5_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMRLD = (DMAVEC_CTRL_CTRL_CTRL5_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL5_DMSAR __AT (0x20000098);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000098) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL5_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMSAR = (DMAVEC_CTRL_CTRL_CTRL5_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL5_DMDAR __AT (0x2000009C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000009C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL5_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMDAR = (DMAVEC_CTRL_CTRL_CTRL5_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL5  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL5
//    <name> [5] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL6_DMACR __AT (0x200000A0);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000A0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000A0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000A0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_DAMOD  -------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000A0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_SAMOD  -------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000A0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000A0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000A0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL6_DMACR  --------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000A0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL6_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMACR = (DMAVEC_CTRL_CTRL_CTRL6_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL6_DMBLS __AT (0x200000A2);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000A2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL6_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMBLS = (DMAVEC_CTRL_CTRL_CTRL6_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL6_DMACT __AT (0x200000A4);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000A4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL6_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMACT = (DMAVEC_CTRL_CTRL_CTRL6_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL6_DMRLD __AT (0x200000A6);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000A6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL6_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMRLD = (DMAVEC_CTRL_CTRL_CTRL6_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL6_DMSAR __AT (0x200000A8);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000A8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL6_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMSAR = (DMAVEC_CTRL_CTRL_CTRL6_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL6_DMDAR __AT (0x200000AC);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000AC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL6_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMDAR = (DMAVEC_CTRL_CTRL_CTRL6_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL6  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL6
//    <name> [6] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL7_DMACR __AT (0x200000B0);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000B0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000B0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000B0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_DAMOD  -------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000B0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_SAMOD  -------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000B0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000B0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000B0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL7_DMACR  --------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000B0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL7_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMACR = (DMAVEC_CTRL_CTRL_CTRL7_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL7_DMBLS __AT (0x200000B2);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000B2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL7_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMBLS = (DMAVEC_CTRL_CTRL_CTRL7_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL7_DMACT __AT (0x200000B4);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000B4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL7_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMACT = (DMAVEC_CTRL_CTRL_CTRL7_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL7_DMRLD __AT (0x200000B6);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000B6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL7_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMRLD = (DMAVEC_CTRL_CTRL_CTRL7_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL7_DMSAR __AT (0x200000B8);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000B8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL7_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMSAR = (DMAVEC_CTRL_CTRL_CTRL7_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL7_DMDAR __AT (0x200000BC);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000BC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL7_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMDAR = (DMAVEC_CTRL_CTRL_CTRL7_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL7  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL7
//    <name> [7] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL8_DMACR __AT (0x200000C0);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000C0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000C0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000C0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_DAMOD  -------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000C0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_SAMOD  -------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000C0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000C0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000C0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL8_DMACR  --------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000C0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL8_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMACR = (DMAVEC_CTRL_CTRL_CTRL8_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL8_DMBLS __AT (0x200000C2);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000C2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL8_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMBLS = (DMAVEC_CTRL_CTRL_CTRL8_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL8_DMACT __AT (0x200000C4);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000C4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL8_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMACT = (DMAVEC_CTRL_CTRL_CTRL8_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL8_DMRLD __AT (0x200000C6);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000C6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL8_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMRLD = (DMAVEC_CTRL_CTRL_CTRL8_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL8_DMSAR __AT (0x200000C8);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000C8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL8_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMSAR = (DMAVEC_CTRL_CTRL_CTRL8_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL8_DMDAR __AT (0x200000CC);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000CC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL8_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMDAR = (DMAVEC_CTRL_CTRL_CTRL8_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL8  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL8
//    <name> [8] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL9_DMACR __AT (0x200000D0);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000D0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000D0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000D0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_DAMOD  -------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000D0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_SAMOD  -------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000D0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000D0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000D0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL9_DMACR  --------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000D0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL9_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMACR = (DMAVEC_CTRL_CTRL_CTRL9_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL9_DMBLS __AT (0x200000D2);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000D2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL9_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMBLS = (DMAVEC_CTRL_CTRL_CTRL9_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL9_DMACT __AT (0x200000D4);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000D4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL9_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMACT = (DMAVEC_CTRL_CTRL_CTRL9_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL9_DMRLD __AT (0x200000D6);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000D6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL9_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMRLD = (DMAVEC_CTRL_CTRL_CTRL9_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL9_DMSAR __AT (0x200000D8);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000D8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL9_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMSAR = (DMAVEC_CTRL_CTRL_CTRL9_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL9_DMDAR __AT (0x200000DC);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000DC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL9_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMDAR = (DMAVEC_CTRL_CTRL_CTRL9_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL9  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL9
//    <name> [9] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL10_DMACR __AT (0x200000E0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000E0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000E0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000E0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000E0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000E0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000E0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000E0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL10_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000E0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL10_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMACR = (DMAVEC_CTRL_CTRL_CTRL10_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL10_DMBLS __AT (0x200000E2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000E2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL10_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMBLS = (DMAVEC_CTRL_CTRL_CTRL10_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL10_DMACT __AT (0x200000E4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000E4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL10_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMACT = (DMAVEC_CTRL_CTRL_CTRL10_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL10_DMRLD __AT (0x200000E6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000E6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL10_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMRLD = (DMAVEC_CTRL_CTRL_CTRL10_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL10_DMSAR __AT (0x200000E8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000E8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL10_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMSAR = (DMAVEC_CTRL_CTRL_CTRL10_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL10_DMDAR __AT (0x200000EC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000EC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL10_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMDAR = (DMAVEC_CTRL_CTRL_CTRL10_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL10  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL10
//    <name> [10] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL11_DMACR __AT (0x200000F0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000F0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000F0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000F0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000F0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000F0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000F0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000F0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL11_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000F0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL11_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMACR = (DMAVEC_CTRL_CTRL_CTRL11_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL11_DMBLS __AT (0x200000F2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000F2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL11_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMBLS = (DMAVEC_CTRL_CTRL_CTRL11_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL11_DMACT __AT (0x200000F4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000F4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL11_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMACT = (DMAVEC_CTRL_CTRL_CTRL11_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL11_DMRLD __AT (0x200000F6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000F6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL11_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMRLD = (DMAVEC_CTRL_CTRL_CTRL11_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL11_DMSAR __AT (0x200000F8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000F8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL11_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMSAR = (DMAVEC_CTRL_CTRL_CTRL11_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL11_DMDAR __AT (0x200000FC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000FC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL11_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMDAR = (DMAVEC_CTRL_CTRL_CTRL11_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL11  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL11
//    <name> [11] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL12_DMACR __AT (0x20000100);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000100) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000100) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000100) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000100) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000100) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000100) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000100) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL12_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000100) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL12_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMACR = (DMAVEC_CTRL_CTRL_CTRL12_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL12_DMBLS __AT (0x20000102);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000102) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL12_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMBLS = (DMAVEC_CTRL_CTRL_CTRL12_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL12_DMACT __AT (0x20000104);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000104) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL12_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMACT = (DMAVEC_CTRL_CTRL_CTRL12_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL12_DMRLD __AT (0x20000106);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000106) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL12_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMRLD = (DMAVEC_CTRL_CTRL_CTRL12_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL12_DMSAR __AT (0x20000108);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000108) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL12_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMSAR = (DMAVEC_CTRL_CTRL_CTRL12_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL12_DMDAR __AT (0x2000010C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000010C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL12_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMDAR = (DMAVEC_CTRL_CTRL_CTRL12_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL12  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL12
//    <name> [12] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL13_DMACR __AT (0x20000110);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000110) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000110) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000110) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000110) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000110) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000110) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000110) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL13_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000110) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL13_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMACR = (DMAVEC_CTRL_CTRL_CTRL13_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL13_DMBLS __AT (0x20000112);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000112) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL13_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMBLS = (DMAVEC_CTRL_CTRL_CTRL13_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL13_DMACT __AT (0x20000114);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000114) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL13_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMACT = (DMAVEC_CTRL_CTRL_CTRL13_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL13_DMRLD __AT (0x20000116);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000116) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL13_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMRLD = (DMAVEC_CTRL_CTRL_CTRL13_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL13_DMSAR __AT (0x20000118);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000118) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL13_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMSAR = (DMAVEC_CTRL_CTRL_CTRL13_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL13_DMDAR __AT (0x2000011C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000011C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL13_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMDAR = (DMAVEC_CTRL_CTRL_CTRL13_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL13  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL13
//    <name> [13] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL14_DMACR __AT (0x20000120);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000120) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000120) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000120) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000120) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000120) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000120) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000120) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL14_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000120) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL14_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMACR = (DMAVEC_CTRL_CTRL_CTRL14_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL14_DMBLS __AT (0x20000122);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000122) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL14_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMBLS = (DMAVEC_CTRL_CTRL_CTRL14_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL14_DMACT __AT (0x20000124);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000124) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL14_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMACT = (DMAVEC_CTRL_CTRL_CTRL14_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL14_DMRLD __AT (0x20000126);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000126) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL14_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMRLD = (DMAVEC_CTRL_CTRL_CTRL14_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL14_DMSAR __AT (0x20000128);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000128) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL14_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMSAR = (DMAVEC_CTRL_CTRL_CTRL14_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL14_DMDAR __AT (0x2000012C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000012C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL14_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMDAR = (DMAVEC_CTRL_CTRL_CTRL14_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL14  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL14
//    <name> [14] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL15_DMACR __AT (0x20000130);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000130) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000130) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000130) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000130) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000130) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000130) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000130) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL15_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000130) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL15_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMACR = (DMAVEC_CTRL_CTRL_CTRL15_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL15_DMBLS __AT (0x20000132);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000132) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL15_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMBLS = (DMAVEC_CTRL_CTRL_CTRL15_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL15_DMACT __AT (0x20000134);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000134) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL15_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMACT = (DMAVEC_CTRL_CTRL_CTRL15_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL15_DMRLD __AT (0x20000136);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000136) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL15_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMRLD = (DMAVEC_CTRL_CTRL_CTRL15_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL15_DMSAR __AT (0x20000138);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000138) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL15_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMSAR = (DMAVEC_CTRL_CTRL_CTRL15_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL15_DMDAR __AT (0x2000013C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000013C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL15_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMDAR = (DMAVEC_CTRL_CTRL_CTRL15_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL15  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL15
//    <name> [15] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL16_DMACR __AT (0x20000140);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000140) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000140) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000140) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000140) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000140) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000140) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000140) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL16_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000140) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL16_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMACR = (DMAVEC_CTRL_CTRL_CTRL16_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL16_DMBLS __AT (0x20000142);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000142) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL16_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMBLS = (DMAVEC_CTRL_CTRL_CTRL16_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL16_DMACT __AT (0x20000144);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000144) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL16_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMACT = (DMAVEC_CTRL_CTRL_CTRL16_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL16_DMRLD __AT (0x20000146);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000146) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL16_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMRLD = (DMAVEC_CTRL_CTRL_CTRL16_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL16_DMSAR __AT (0x20000148);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000148) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL16_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMSAR = (DMAVEC_CTRL_CTRL_CTRL16_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL16_DMDAR __AT (0x2000014C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000014C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL16_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMDAR = (DMAVEC_CTRL_CTRL_CTRL16_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL16  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL16
//    <name> [16] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL17_DMACR __AT (0x20000150);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000150) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000150) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000150) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000150) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000150) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000150) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000150) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL17_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000150) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL17_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMACR = (DMAVEC_CTRL_CTRL_CTRL17_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL17_DMBLS __AT (0x20000152);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000152) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL17_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMBLS = (DMAVEC_CTRL_CTRL_CTRL17_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL17_DMACT __AT (0x20000154);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000154) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL17_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMACT = (DMAVEC_CTRL_CTRL_CTRL17_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL17_DMRLD __AT (0x20000156);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000156) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL17_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMRLD = (DMAVEC_CTRL_CTRL_CTRL17_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL17_DMSAR __AT (0x20000158);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000158) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL17_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMSAR = (DMAVEC_CTRL_CTRL_CTRL17_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL17_DMDAR __AT (0x2000015C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000015C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL17_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMDAR = (DMAVEC_CTRL_CTRL_CTRL17_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL17  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL17
//    <name> [17] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL18_DMACR __AT (0x20000160);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000160) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000160) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000160) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000160) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000160) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000160) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000160) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL18_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000160) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL18_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMACR = (DMAVEC_CTRL_CTRL_CTRL18_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL18_DMBLS __AT (0x20000162);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000162) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL18_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMBLS = (DMAVEC_CTRL_CTRL_CTRL18_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL18_DMACT __AT (0x20000164);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000164) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL18_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMACT = (DMAVEC_CTRL_CTRL_CTRL18_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL18_DMRLD __AT (0x20000166);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000166) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL18_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMRLD = (DMAVEC_CTRL_CTRL_CTRL18_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL18_DMSAR __AT (0x20000168);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000168) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL18_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMSAR = (DMAVEC_CTRL_CTRL_CTRL18_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL18_DMDAR __AT (0x2000016C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000016C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL18_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMDAR = (DMAVEC_CTRL_CTRL_CTRL18_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL18  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL18
//    <name> [18] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL19_DMACR __AT (0x20000170);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000170) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000170) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000170) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000170) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000170) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000170) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000170) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL19_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000170) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL19_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMACR = (DMAVEC_CTRL_CTRL_CTRL19_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL19_DMBLS __AT (0x20000172);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000172) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL19_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMBLS = (DMAVEC_CTRL_CTRL_CTRL19_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL19_DMACT __AT (0x20000174);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000174) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL19_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMACT = (DMAVEC_CTRL_CTRL_CTRL19_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL19_DMRLD __AT (0x20000176);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000176) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL19_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMRLD = (DMAVEC_CTRL_CTRL_CTRL19_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL19_DMSAR __AT (0x20000178);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000178) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL19_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMSAR = (DMAVEC_CTRL_CTRL_CTRL19_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL19_DMDAR __AT (0x2000017C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000017C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL19_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMDAR = (DMAVEC_CTRL_CTRL_CTRL19_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL19  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL19
//    <name> [19] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL20_DMACR __AT (0x20000180);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000180) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000180) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000180) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000180) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000180) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000180) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000180) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL20_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000180) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL20_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMACR = (DMAVEC_CTRL_CTRL_CTRL20_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL20_DMBLS __AT (0x20000182);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000182) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL20_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMBLS = (DMAVEC_CTRL_CTRL_CTRL20_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL20_DMACT __AT (0x20000184);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000184) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL20_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMACT = (DMAVEC_CTRL_CTRL_CTRL20_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL20_DMRLD __AT (0x20000186);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000186) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL20_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMRLD = (DMAVEC_CTRL_CTRL_CTRL20_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL20_DMSAR __AT (0x20000188);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000188) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL20_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMSAR = (DMAVEC_CTRL_CTRL_CTRL20_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL20_DMDAR __AT (0x2000018C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000018C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL20_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMDAR = (DMAVEC_CTRL_CTRL_CTRL20_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL20  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL20
//    <name> [20] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL21_DMACR __AT (0x20000190);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000190) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000190) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000190) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000190) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000190) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000190) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000190) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL21_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000190) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL21_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMACR = (DMAVEC_CTRL_CTRL_CTRL21_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL21_DMBLS __AT (0x20000192);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000192) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL21_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMBLS = (DMAVEC_CTRL_CTRL_CTRL21_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL21_DMACT __AT (0x20000194);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000194) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL21_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMACT = (DMAVEC_CTRL_CTRL_CTRL21_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL21_DMRLD __AT (0x20000196);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000196) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL21_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMRLD = (DMAVEC_CTRL_CTRL_CTRL21_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL21_DMSAR __AT (0x20000198);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000198) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL21_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMSAR = (DMAVEC_CTRL_CTRL_CTRL21_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL21_DMDAR __AT (0x2000019C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000019C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL21_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMDAR = (DMAVEC_CTRL_CTRL_CTRL21_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL21  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL21
//    <name> [21] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL22_DMACR __AT (0x200001A0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200001A0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200001A0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200001A0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200001A0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200001A0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200001A0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200001A0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL22_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200001A0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL22_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMACR = (DMAVEC_CTRL_CTRL_CTRL22_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL22_DMBLS __AT (0x200001A2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200001A2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL22_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMBLS = (DMAVEC_CTRL_CTRL_CTRL22_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL22_DMACT __AT (0x200001A4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200001A4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL22_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMACT = (DMAVEC_CTRL_CTRL_CTRL22_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL22_DMRLD __AT (0x200001A6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200001A6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL22_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMRLD = (DMAVEC_CTRL_CTRL_CTRL22_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL22_DMSAR __AT (0x200001A8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001A8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL22_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMSAR = (DMAVEC_CTRL_CTRL_CTRL22_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL22_DMDAR __AT (0x200001AC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001AC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL22_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMDAR = (DMAVEC_CTRL_CTRL_CTRL22_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL22  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL22
//    <name> [22] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL23_DMACR __AT (0x200001B0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200001B0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200001B0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200001B0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200001B0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200001B0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200001B0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200001B0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL23_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200001B0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL23_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMACR = (DMAVEC_CTRL_CTRL_CTRL23_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL23_DMBLS __AT (0x200001B2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200001B2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL23_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMBLS = (DMAVEC_CTRL_CTRL_CTRL23_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL23_DMACT __AT (0x200001B4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200001B4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL23_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMACT = (DMAVEC_CTRL_CTRL_CTRL23_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL23_DMRLD __AT (0x200001B6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200001B6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL23_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMRLD = (DMAVEC_CTRL_CTRL_CTRL23_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL23_DMSAR __AT (0x200001B8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001B8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL23_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMSAR = (DMAVEC_CTRL_CTRL_CTRL23_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL23_DMDAR __AT (0x200001BC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001BC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL23_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMDAR = (DMAVEC_CTRL_CTRL_CTRL23_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL23  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL23
//    <name> [23] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL24_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL24_DMACR __AT (0x200001C0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200001C0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200001C0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200001C0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200001C0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200001C0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200001C0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200001C0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL24_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200001C0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL24_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL24_DMACR = (DMAVEC_CTRL_CTRL_CTRL24_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL24_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL24_DMBLS __AT (0x200001C2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL24_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200001C2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL24_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL24_DMBLS = (DMAVEC_CTRL_CTRL_CTRL24_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL24_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL24_DMACT __AT (0x200001C4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL24_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200001C4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL24_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL24_DMACT = (DMAVEC_CTRL_CTRL_CTRL24_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL24_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL24_DMRLD __AT (0x200001C6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL24_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200001C6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL24_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL24_DMRLD = (DMAVEC_CTRL_CTRL_CTRL24_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL24_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL24_DMSAR __AT (0x200001C8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL24_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001C8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL24_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL24_DMSAR = (DMAVEC_CTRL_CTRL_CTRL24_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL24_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL24_DMDAR __AT (0x200001CC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL24_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001CC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL24_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL24_DMDAR = (DMAVEC_CTRL_CTRL_CTRL24_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL24  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL24
//    <name> [24] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL25_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL25_DMACR __AT (0x200001D0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200001D0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200001D0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200001D0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200001D0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200001D0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200001D0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200001D0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL25_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200001D0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL25_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL25_DMACR = (DMAVEC_CTRL_CTRL_CTRL25_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL25_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL25_DMBLS __AT (0x200001D2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL25_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200001D2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL25_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL25_DMBLS = (DMAVEC_CTRL_CTRL_CTRL25_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL25_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL25_DMACT __AT (0x200001D4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL25_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200001D4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL25_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL25_DMACT = (DMAVEC_CTRL_CTRL_CTRL25_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL25_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL25_DMRLD __AT (0x200001D6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL25_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200001D6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL25_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL25_DMRLD = (DMAVEC_CTRL_CTRL_CTRL25_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL25_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL25_DMSAR __AT (0x200001D8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL25_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001D8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL25_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL25_DMSAR = (DMAVEC_CTRL_CTRL_CTRL25_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL25_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL25_DMDAR __AT (0x200001DC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL25_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001DC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL25_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL25_DMDAR = (DMAVEC_CTRL_CTRL_CTRL25_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL25  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL25
//    <name> [25] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL26_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL26_DMACR __AT (0x200001E0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200001E0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200001E0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200001E0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200001E0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200001E0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200001E0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200001E0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL26_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200001E0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL26_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL26_DMACR = (DMAVEC_CTRL_CTRL_CTRL26_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL26_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL26_DMBLS __AT (0x200001E2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL26_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200001E2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL26_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL26_DMBLS = (DMAVEC_CTRL_CTRL_CTRL26_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL26_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL26_DMACT __AT (0x200001E4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL26_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200001E4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL26_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL26_DMACT = (DMAVEC_CTRL_CTRL_CTRL26_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL26_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL26_DMRLD __AT (0x200001E6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL26_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200001E6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL26_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL26_DMRLD = (DMAVEC_CTRL_CTRL_CTRL26_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL26_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL26_DMSAR __AT (0x200001E8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL26_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001E8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL26_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL26_DMSAR = (DMAVEC_CTRL_CTRL_CTRL26_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL26_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL26_DMDAR __AT (0x200001EC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL26_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001EC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL26_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL26_DMDAR = (DMAVEC_CTRL_CTRL_CTRL26_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL26  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL26
//    <name> [26] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL27_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL27_DMACR __AT (0x200001F0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200001F0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200001F0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200001F0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200001F0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200001F0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200001F0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200001F0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL27_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200001F0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL27_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL27_DMACR = (DMAVEC_CTRL_CTRL_CTRL27_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL27_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL27_DMBLS __AT (0x200001F2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL27_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200001F2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL27_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL27_DMBLS = (DMAVEC_CTRL_CTRL_CTRL27_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL27_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL27_DMACT __AT (0x200001F4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL27_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200001F4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL27_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL27_DMACT = (DMAVEC_CTRL_CTRL_CTRL27_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL27_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL27_DMRLD __AT (0x200001F6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL27_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200001F6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL27_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL27_DMRLD = (DMAVEC_CTRL_CTRL_CTRL27_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL27_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL27_DMSAR __AT (0x200001F8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL27_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001F8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL27_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL27_DMSAR = (DMAVEC_CTRL_CTRL_CTRL27_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL27_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL27_DMDAR __AT (0x200001FC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL27_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001FC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL27_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL27_DMDAR = (DMAVEC_CTRL_CTRL_CTRL27_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL27  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL27
//    <name> [27] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL28_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL28_DMACR __AT (0x20000200);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000200) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000200) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000200) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000200) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000200) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000200) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000200) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL28_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000200) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL28_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL28_DMACR = (DMAVEC_CTRL_CTRL_CTRL28_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL28_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL28_DMBLS __AT (0x20000202);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL28_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000202) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL28_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL28_DMBLS = (DMAVEC_CTRL_CTRL_CTRL28_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL28_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL28_DMACT __AT (0x20000204);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL28_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000204) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL28_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL28_DMACT = (DMAVEC_CTRL_CTRL_CTRL28_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL28_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL28_DMRLD __AT (0x20000206);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL28_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000206) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL28_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL28_DMRLD = (DMAVEC_CTRL_CTRL_CTRL28_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL28_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL28_DMSAR __AT (0x20000208);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL28_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000208) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL28_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL28_DMSAR = (DMAVEC_CTRL_CTRL_CTRL28_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL28_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL28_DMDAR __AT (0x2000020C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL28_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000020C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL28_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL28_DMDAR = (DMAVEC_CTRL_CTRL_CTRL28_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL28  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL28
//    <name> [28] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL29_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL29_DMACR __AT (0x20000210);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000210) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000210) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000210) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000210) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000210) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000210) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000210) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL29_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000210) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL29_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL29_DMACR = (DMAVEC_CTRL_CTRL_CTRL29_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL29_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL29_DMBLS __AT (0x20000212);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL29_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000212) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL29_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL29_DMBLS = (DMAVEC_CTRL_CTRL_CTRL29_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL29_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL29_DMACT __AT (0x20000214);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL29_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000214) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL29_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL29_DMACT = (DMAVEC_CTRL_CTRL_CTRL29_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL29_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL29_DMRLD __AT (0x20000216);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL29_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000216) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL29_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL29_DMRLD = (DMAVEC_CTRL_CTRL_CTRL29_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL29_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL29_DMSAR __AT (0x20000218);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL29_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000218) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL29_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL29_DMSAR = (DMAVEC_CTRL_CTRL_CTRL29_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL29_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL29_DMDAR __AT (0x2000021C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL29_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000021C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL29_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL29_DMDAR = (DMAVEC_CTRL_CTRL_CTRL29_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL29  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL29
//    <name> [29] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL30_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL30_DMACR __AT (0x20000220);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000220) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000220) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000220) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000220) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000220) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000220) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000220) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL30_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000220) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL30_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL30_DMACR = (DMAVEC_CTRL_CTRL_CTRL30_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL30_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL30_DMBLS __AT (0x20000222);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL30_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000222) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL30_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL30_DMBLS = (DMAVEC_CTRL_CTRL_CTRL30_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL30_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL30_DMACT __AT (0x20000224);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL30_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000224) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL30_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL30_DMACT = (DMAVEC_CTRL_CTRL_CTRL30_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL30_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL30_DMRLD __AT (0x20000226);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL30_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000226) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL30_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL30_DMRLD = (DMAVEC_CTRL_CTRL_CTRL30_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL30_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL30_DMSAR __AT (0x20000228);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL30_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000228) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL30_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL30_DMSAR = (DMAVEC_CTRL_CTRL_CTRL30_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL30_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL30_DMDAR __AT (0x2000022C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL30_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000022C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL30_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL30_DMDAR = (DMAVEC_CTRL_CTRL_CTRL30_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL30  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL30
//    <name> [30] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL31_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL31_DMACR __AT (0x20000230);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000230) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000230) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000230) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000230) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000230) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000230) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000230) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL31_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000230) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL31_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL31_DMACR = (DMAVEC_CTRL_CTRL_CTRL31_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL31_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL31_DMBLS __AT (0x20000232);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL31_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000232) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL31_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL31_DMBLS = (DMAVEC_CTRL_CTRL_CTRL31_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL31_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL31_DMACT __AT (0x20000234);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL31_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000234) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL31_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL31_DMACT = (DMAVEC_CTRL_CTRL_CTRL31_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL31_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL31_DMRLD __AT (0x20000236);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL31_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000236) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL31_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL31_DMRLD = (DMAVEC_CTRL_CTRL_CTRL31_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL31_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL31_DMSAR __AT (0x20000238);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL31_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000238) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL31_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL31_DMSAR = (DMAVEC_CTRL_CTRL_CTRL31_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL31_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL31_DMDAR __AT (0x2000023C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL31_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000023C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL31_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL31_DMDAR = (DMAVEC_CTRL_CTRL_CTRL31_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL31  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL31
//    <name> [31] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL32_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL32_DMACR __AT (0x20000240);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000240) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000240) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000240) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000240) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000240) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000240) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000240) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL32_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000240) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL32_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL32_DMACR = (DMAVEC_CTRL_CTRL_CTRL32_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL32_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL32_DMBLS __AT (0x20000242);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL32_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000242) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL32_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL32_DMBLS = (DMAVEC_CTRL_CTRL_CTRL32_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL32_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL32_DMACT __AT (0x20000244);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL32_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000244) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL32_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL32_DMACT = (DMAVEC_CTRL_CTRL_CTRL32_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL32_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL32_DMRLD __AT (0x20000246);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL32_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000246) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL32_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL32_DMRLD = (DMAVEC_CTRL_CTRL_CTRL32_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL32_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL32_DMSAR __AT (0x20000248);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL32_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000248) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL32_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL32_DMSAR = (DMAVEC_CTRL_CTRL_CTRL32_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL32_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL32_DMDAR __AT (0x2000024C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL32_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000024C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL32_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL32_DMDAR = (DMAVEC_CTRL_CTRL_CTRL32_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL32  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL32
//    <name> [32] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL33_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL33_DMACR __AT (0x20000250);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000250) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000250) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000250) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000250) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000250) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000250) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000250) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL33_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000250) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL33_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL33_DMACR = (DMAVEC_CTRL_CTRL_CTRL33_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL33_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL33_DMBLS __AT (0x20000252);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL33_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000252) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL33_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL33_DMBLS = (DMAVEC_CTRL_CTRL_CTRL33_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL33_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL33_DMACT __AT (0x20000254);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL33_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000254) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL33_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL33_DMACT = (DMAVEC_CTRL_CTRL_CTRL33_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL33_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL33_DMRLD __AT (0x20000256);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL33_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000256) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL33_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL33_DMRLD = (DMAVEC_CTRL_CTRL_CTRL33_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL33_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL33_DMSAR __AT (0x20000258);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL33_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000258) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL33_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL33_DMSAR = (DMAVEC_CTRL_CTRL_CTRL33_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL33_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL33_DMDAR __AT (0x2000025C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL33_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000025C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL33_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL33_DMDAR = (DMAVEC_CTRL_CTRL_CTRL33_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL33  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL33
//    <name> [33] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL34_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL34_DMACR __AT (0x20000260);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000260) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000260) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000260) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000260) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000260) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000260) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000260) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL34_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000260) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL34_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL34_DMACR = (DMAVEC_CTRL_CTRL_CTRL34_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL34_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL34_DMBLS __AT (0x20000262);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL34_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000262) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL34_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL34_DMBLS = (DMAVEC_CTRL_CTRL_CTRL34_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL34_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL34_DMACT __AT (0x20000264);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL34_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000264) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL34_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL34_DMACT = (DMAVEC_CTRL_CTRL_CTRL34_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL34_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL34_DMRLD __AT (0x20000266);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL34_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000266) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL34_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL34_DMRLD = (DMAVEC_CTRL_CTRL_CTRL34_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL34_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL34_DMSAR __AT (0x20000268);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL34_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000268) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL34_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL34_DMSAR = (DMAVEC_CTRL_CTRL_CTRL34_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL34_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL34_DMDAR __AT (0x2000026C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL34_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000026C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL34_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL34_DMDAR = (DMAVEC_CTRL_CTRL_CTRL34_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL34  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL34
//    <name> [34] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL35_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL35_DMACR __AT (0x20000270);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000270) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000270) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000270) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000270) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000270) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000270) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000270) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL35_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000270) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL35_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL35_DMACR = (DMAVEC_CTRL_CTRL_CTRL35_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL35_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL35_DMBLS __AT (0x20000272);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL35_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000272) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL35_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL35_DMBLS = (DMAVEC_CTRL_CTRL_CTRL35_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL35_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL35_DMACT __AT (0x20000274);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL35_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000274) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL35_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL35_DMACT = (DMAVEC_CTRL_CTRL_CTRL35_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL35_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL35_DMRLD __AT (0x20000276);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL35_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000276) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL35_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL35_DMRLD = (DMAVEC_CTRL_CTRL_CTRL35_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL35_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL35_DMSAR __AT (0x20000278);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL35_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000278) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL35_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL35_DMSAR = (DMAVEC_CTRL_CTRL_CTRL35_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL35_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL35_DMDAR __AT (0x2000027C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL35_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000027C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL35_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL35_DMDAR = (DMAVEC_CTRL_CTRL_CTRL35_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL35  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL35
//    <name> [35] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL36_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL36_DMACR __AT (0x20000280);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000280) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000280) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000280) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000280) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000280) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000280) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000280) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL36_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000280) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL36_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL36_DMACR = (DMAVEC_CTRL_CTRL_CTRL36_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL36_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL36_DMBLS __AT (0x20000282);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL36_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000282) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL36_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL36_DMBLS = (DMAVEC_CTRL_CTRL_CTRL36_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL36_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL36_DMACT __AT (0x20000284);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL36_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000284) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL36_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL36_DMACT = (DMAVEC_CTRL_CTRL_CTRL36_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL36_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL36_DMRLD __AT (0x20000286);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL36_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000286) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL36_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL36_DMRLD = (DMAVEC_CTRL_CTRL_CTRL36_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL36_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL36_DMSAR __AT (0x20000288);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL36_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000288) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL36_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL36_DMSAR = (DMAVEC_CTRL_CTRL_CTRL36_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL36_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL36_DMDAR __AT (0x2000028C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL36_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000028C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL36_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL36_DMDAR = (DMAVEC_CTRL_CTRL_CTRL36_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL36  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL36
//    <name> [36] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL37_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL37_DMACR __AT (0x20000290);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000290) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000290) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000290) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000290) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000290) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000290) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000290) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL37_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000290) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL37_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL37_DMACR = (DMAVEC_CTRL_CTRL_CTRL37_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL37_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL37_DMBLS __AT (0x20000292);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL37_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000292) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL37_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL37_DMBLS = (DMAVEC_CTRL_CTRL_CTRL37_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL37_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL37_DMACT __AT (0x20000294);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL37_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000294) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL37_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL37_DMACT = (DMAVEC_CTRL_CTRL_CTRL37_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL37_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL37_DMRLD __AT (0x20000296);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL37_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000296) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL37_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL37_DMRLD = (DMAVEC_CTRL_CTRL_CTRL37_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL37_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL37_DMSAR __AT (0x20000298);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL37_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000298) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL37_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL37_DMSAR = (DMAVEC_CTRL_CTRL_CTRL37_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL37_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL37_DMDAR __AT (0x2000029C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL37_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000029C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL37_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL37_DMDAR = (DMAVEC_CTRL_CTRL_CTRL37_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL37  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL37
//    <name> [37] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL38_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL38_DMACR __AT (0x200002A0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200002A0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200002A0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200002A0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200002A0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200002A0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200002A0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200002A0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL38_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200002A0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL38_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL38_DMACR = (DMAVEC_CTRL_CTRL_CTRL38_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL38_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL38_DMBLS __AT (0x200002A2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL38_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200002A2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL38_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL38_DMBLS = (DMAVEC_CTRL_CTRL_CTRL38_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL38_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL38_DMACT __AT (0x200002A4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL38_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200002A4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL38_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL38_DMACT = (DMAVEC_CTRL_CTRL_CTRL38_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL38_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL38_DMRLD __AT (0x200002A6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL38_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200002A6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL38_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL38_DMRLD = (DMAVEC_CTRL_CTRL_CTRL38_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL38_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL38_DMSAR __AT (0x200002A8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL38_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200002A8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL38_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL38_DMSAR = (DMAVEC_CTRL_CTRL_CTRL38_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL38_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL38_DMDAR __AT (0x200002AC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL38_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200002AC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL38_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL38_DMDAR = (DMAVEC_CTRL_CTRL_CTRL38_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL38  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL38
//    <name> [38] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL39_DMACR  ----------------------
// SVD Line: 6664

unsigned short DMAVEC_CTRL_CTRL_CTRL39_DMACR __AT (0x200002B0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_SZ  --------------------------
// SVD Line: 6670

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200002B0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_RPTINT  ------------------------
// SVD Line: 6693

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200002B0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_CHNE  -------------------------
// SVD Line: 6711

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200002B0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_DAMOD  ------------------------
// SVD Line: 6729

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200002B0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_SAMOD  ------------------------
// SVD Line: 6747

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200002B0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_RPTSEL  ------------------------
// SVD Line: 6765

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200002B0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_MODE  -------------------------
// SVD Line: 6783

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200002B0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL39_DMACR  -------------------------
// SVD Line: 6664

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200002B0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL39_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL39_DMACR = (DMAVEC_CTRL_CTRL_CTRL39_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL39_DMBLS  ----------------------
// SVD Line: 6803

unsigned short DMAVEC_CTRL_CTRL_CTRL39_DMBLS __AT (0x200002B2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL39_DMBLS  --------------------------
// SVD Line: 6803

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200002B2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL39_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL39_DMBLS = (DMAVEC_CTRL_CTRL_CTRL39_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL39_DMACT  ----------------------
// SVD Line: 6809

unsigned short DMAVEC_CTRL_CTRL_CTRL39_DMACT __AT (0x200002B4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL39_DMACT  --------------------------
// SVD Line: 6809

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200002B4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL39_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL39_DMACT = (DMAVEC_CTRL_CTRL_CTRL39_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL39_DMRLD  ----------------------
// SVD Line: 6815

unsigned short DMAVEC_CTRL_CTRL_CTRL39_DMRLD __AT (0x200002B6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL39_DMRLD  --------------------------
// SVD Line: 6815

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200002B6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL39_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL39_DMRLD = (DMAVEC_CTRL_CTRL_CTRL39_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL39_DMSAR  ----------------------
// SVD Line: 6821

unsigned int DMAVEC_CTRL_CTRL_CTRL39_DMSAR __AT (0x200002B8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL39_DMSAR  --------------------------
// SVD Line: 6821

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200002B8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL39_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL39_DMSAR = (DMAVEC_CTRL_CTRL_CTRL39_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL39_DMDAR  ----------------------
// SVD Line: 6827

unsigned int DMAVEC_CTRL_CTRL_CTRL39_DMDAR __AT (0x200002BC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL39_DMDAR  --------------------------
// SVD Line: 6827

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200002BC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL39_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL39_DMDAR = (DMAVEC_CTRL_CTRL_CTRL39_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL39  -----------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL39
//    <name> [39] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMDAR </item>
//  </itree>
//  


// ----------------------------  Cluster Array ITree: DMAVEC_CTRL  --------------------------------
// SVD Line: 6658

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL
//    <name> CTRL </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL0 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL1 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL2 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL3 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL4 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL5 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL6 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL7 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL8 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL9 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL10 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL11 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL12 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL13 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL14 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL15 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL16 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL17 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL18 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL19 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL20 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL21 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL22 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL23 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL24 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL25 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL26 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL27 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL28 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL29 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL30 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL31 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL32 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL33 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL34 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL35 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL36 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL37 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL38 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL39 </item>
//  </itree>
//  


// ---------------------------------  Peripheral View: DMAVEC  ------------------------------------
// SVD Line: 6633

//  <view> DMAVEC
//    <name> DMAVEC </name>
//    <item> SFDITEM_REG__DMAVEC_VEC </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL </item>
//  </view>
//  


// ---------------------------  Register Item Address: ELC_ELSELR00  ------------------------------
// SVD Line: 6855

unsigned char ELC_ELSELR00 __AT (0x40043400);



// -------------------------------  Register Item: ELC_ELSELR00  ----------------------------------
// SVD Line: 6855

//  <item> SFDITEM_REG__ELC_ELSELR00
//    <name> ELSELR00 </name>
//    <i> [Bits 7..0] RW (@ 0x40043400) Event output destination select register 00 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR00 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR00 = (ELC_ELSELR00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR01  ------------------------------
// SVD Line: 6863

unsigned char ELC_ELSELR01 __AT (0x40043401);



// -------------------------------  Register Item: ELC_ELSELR01  ----------------------------------
// SVD Line: 6863

//  <item> SFDITEM_REG__ELC_ELSELR01
//    <name> ELSELR01 </name>
//    <i> [Bits 7..0] RW (@ 0x40043401) Event output destination select register 01 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR01 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR01 = (ELC_ELSELR01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR02  ------------------------------
// SVD Line: 6869

unsigned char ELC_ELSELR02 __AT (0x40043402);



// -------------------------------  Register Item: ELC_ELSELR02  ----------------------------------
// SVD Line: 6869

//  <item> SFDITEM_REG__ELC_ELSELR02
//    <name> ELSELR02 </name>
//    <i> [Bits 7..0] RW (@ 0x40043402) Event output destination select register 02 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR02 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR02 = (ELC_ELSELR02 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR03  ------------------------------
// SVD Line: 6875

unsigned char ELC_ELSELR03 __AT (0x40043403);



// -------------------------------  Register Item: ELC_ELSELR03  ----------------------------------
// SVD Line: 6875

//  <item> SFDITEM_REG__ELC_ELSELR03
//    <name> ELSELR03 </name>
//    <i> [Bits 7..0] RW (@ 0x40043403) Event output destination select register 03 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR03 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR03 = (ELC_ELSELR03 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR04  ------------------------------
// SVD Line: 6881

unsigned char ELC_ELSELR04 __AT (0x40043404);



// -------------------------------  Register Item: ELC_ELSELR04  ----------------------------------
// SVD Line: 6881

//  <item> SFDITEM_REG__ELC_ELSELR04
//    <name> ELSELR04 </name>
//    <i> [Bits 7..0] RW (@ 0x40043404) Event output destination select register 04 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR04 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR04 = (ELC_ELSELR04 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR05  ------------------------------
// SVD Line: 6887

unsigned char ELC_ELSELR05 __AT (0x40043405);



// -------------------------------  Register Item: ELC_ELSELR05  ----------------------------------
// SVD Line: 6887

//  <item> SFDITEM_REG__ELC_ELSELR05
//    <name> ELSELR05 </name>
//    <i> [Bits 7..0] RW (@ 0x40043405) Event output destination select register 05 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR05 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR05 = (ELC_ELSELR05 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR06  ------------------------------
// SVD Line: 6893

unsigned char ELC_ELSELR06 __AT (0x40043406);



// -------------------------------  Register Item: ELC_ELSELR06  ----------------------------------
// SVD Line: 6893

//  <item> SFDITEM_REG__ELC_ELSELR06
//    <name> ELSELR06 </name>
//    <i> [Bits 7..0] RW (@ 0x40043406) Event output destination select register 06 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR06 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR06 = (ELC_ELSELR06 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR07  ------------------------------
// SVD Line: 6899

unsigned char ELC_ELSELR07 __AT (0x40043407);



// -------------------------------  Register Item: ELC_ELSELR07  ----------------------------------
// SVD Line: 6899

//  <item> SFDITEM_REG__ELC_ELSELR07
//    <name> ELSELR07 </name>
//    <i> [Bits 7..0] RW (@ 0x40043407) Event output destination select register 07 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR07 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR07 = (ELC_ELSELR07 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR08  ------------------------------
// SVD Line: 6905

unsigned char ELC_ELSELR08 __AT (0x40043408);



// -------------------------------  Register Item: ELC_ELSELR08  ----------------------------------
// SVD Line: 6905

//  <item> SFDITEM_REG__ELC_ELSELR08
//    <name> ELSELR08 </name>
//    <i> [Bits 7..0] RW (@ 0x40043408) Event output destination select register 08 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR08 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR08 = (ELC_ELSELR08 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR09  ------------------------------
// SVD Line: 6911

unsigned char ELC_ELSELR09 __AT (0x40043409);



// -------------------------------  Register Item: ELC_ELSELR09  ----------------------------------
// SVD Line: 6911

//  <item> SFDITEM_REG__ELC_ELSELR09
//    <name> ELSELR09 </name>
//    <i> [Bits 7..0] RW (@ 0x40043409) Event output destination select register 09 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR09 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR09 = (ELC_ELSELR09 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR10  ------------------------------
// SVD Line: 6917

unsigned char ELC_ELSELR10 __AT (0x4004340A);



// -------------------------------  Register Item: ELC_ELSELR10  ----------------------------------
// SVD Line: 6917

//  <item> SFDITEM_REG__ELC_ELSELR10
//    <name> ELSELR10 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340A) Event output destination select register 10 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR10 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR10 = (ELC_ELSELR10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR11  ------------------------------
// SVD Line: 6923

unsigned char ELC_ELSELR11 __AT (0x4004340B);



// -------------------------------  Register Item: ELC_ELSELR11  ----------------------------------
// SVD Line: 6923

//  <item> SFDITEM_REG__ELC_ELSELR11
//    <name> ELSELR11 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340B) Event output destination select register 11 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR11 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR11 = (ELC_ELSELR11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR12  ------------------------------
// SVD Line: 6929

unsigned char ELC_ELSELR12 __AT (0x4004340C);



// -------------------------------  Register Item: ELC_ELSELR12  ----------------------------------
// SVD Line: 6929

//  <item> SFDITEM_REG__ELC_ELSELR12
//    <name> ELSELR12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340C) Event output destination select register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR12 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR12 = (ELC_ELSELR12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR13  ------------------------------
// SVD Line: 6935

unsigned char ELC_ELSELR13 __AT (0x4004340D);



// -------------------------------  Register Item: ELC_ELSELR13  ----------------------------------
// SVD Line: 6935

//  <item> SFDITEM_REG__ELC_ELSELR13
//    <name> ELSELR13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340D) Event output destination select register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR13 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR13 = (ELC_ELSELR13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR14  ------------------------------
// SVD Line: 6941

unsigned char ELC_ELSELR14 __AT (0x4004340E);



// -------------------------------  Register Item: ELC_ELSELR14  ----------------------------------
// SVD Line: 6941

//  <item> SFDITEM_REG__ELC_ELSELR14
//    <name> ELSELR14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340E) Event output destination select register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR14 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR14 = (ELC_ELSELR14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR15  ------------------------------
// SVD Line: 6947

unsigned char ELC_ELSELR15 __AT (0x4004340F);



// -------------------------------  Register Item: ELC_ELSELR15  ----------------------------------
// SVD Line: 6947

//  <item> SFDITEM_REG__ELC_ELSELR15
//    <name> ELSELR15 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340F) Event output destination select register 15 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR15 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR15 = (ELC_ELSELR15 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR16  ------------------------------
// SVD Line: 6953

unsigned char ELC_ELSELR16 __AT (0x40043410);



// -------------------------------  Register Item: ELC_ELSELR16  ----------------------------------
// SVD Line: 6953

//  <item> SFDITEM_REG__ELC_ELSELR16
//    <name> ELSELR16 </name>
//    <i> [Bits 7..0] RW (@ 0x40043410) Event output destination select register 16 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR16 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR16 = (ELC_ELSELR16 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR17  ------------------------------
// SVD Line: 6959

unsigned char ELC_ELSELR17 __AT (0x40043411);



// -------------------------------  Register Item: ELC_ELSELR17  ----------------------------------
// SVD Line: 6959

//  <item> SFDITEM_REG__ELC_ELSELR17
//    <name> ELSELR17 </name>
//    <i> [Bits 7..0] RW (@ 0x40043411) Event output destination select register 17 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR17 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR17 = (ELC_ELSELR17 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR18  ------------------------------
// SVD Line: 6965

unsigned char ELC_ELSELR18 __AT (0x40043412);



// -------------------------------  Register Item: ELC_ELSELR18  ----------------------------------
// SVD Line: 6965

//  <item> SFDITEM_REG__ELC_ELSELR18
//    <name> ELSELR18 </name>
//    <i> [Bits 7..0] RW (@ 0x40043412) Event output destination select register 18 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR18 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR18 = (ELC_ELSELR18 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR19  ------------------------------
// SVD Line: 6971

unsigned char ELC_ELSELR19 __AT (0x40043413);



// -------------------------------  Register Item: ELC_ELSELR19  ----------------------------------
// SVD Line: 6971

//  <item> SFDITEM_REG__ELC_ELSELR19
//    <name> ELSELR19 </name>
//    <i> [Bits 7..0] RW (@ 0x40043413) Event output destination select register 19 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR19 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR19 = (ELC_ELSELR19 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR20  ------------------------------
// SVD Line: 6977

unsigned char ELC_ELSELR20 __AT (0x40043414);



// -------------------------------  Register Item: ELC_ELSELR20  ----------------------------------
// SVD Line: 6977

//  <item> SFDITEM_REG__ELC_ELSELR20
//    <name> ELSELR20 </name>
//    <i> [Bits 7..0] RW (@ 0x40043414) Event output destination select register 20 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR20 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR20 = (ELC_ELSELR20 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR21  ------------------------------
// SVD Line: 6983

unsigned char ELC_ELSELR21 __AT (0x40043415);



// -------------------------------  Register Item: ELC_ELSELR21  ----------------------------------
// SVD Line: 6983

//  <item> SFDITEM_REG__ELC_ELSELR21
//    <name> ELSELR21 </name>
//    <i> [Bits 7..0] RW (@ 0x40043415) Event output destination select register 21 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR21 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR21 = (ELC_ELSELR21 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: ELC  --------------------------------------
// SVD Line: 6839

//  <view> ELC
//    <name> ELC </name>
//    <item> SFDITEM_REG__ELC_ELSELR00 </item>
//    <item> SFDITEM_REG__ELC_ELSELR01 </item>
//    <item> SFDITEM_REG__ELC_ELSELR02 </item>
//    <item> SFDITEM_REG__ELC_ELSELR03 </item>
//    <item> SFDITEM_REG__ELC_ELSELR04 </item>
//    <item> SFDITEM_REG__ELC_ELSELR05 </item>
//    <item> SFDITEM_REG__ELC_ELSELR06 </item>
//    <item> SFDITEM_REG__ELC_ELSELR07 </item>
//    <item> SFDITEM_REG__ELC_ELSELR08 </item>
//    <item> SFDITEM_REG__ELC_ELSELR09 </item>
//    <item> SFDITEM_REG__ELC_ELSELR10 </item>
//    <item> SFDITEM_REG__ELC_ELSELR11 </item>
//    <item> SFDITEM_REG__ELC_ELSELR12 </item>
//    <item> SFDITEM_REG__ELC_ELSELR13 </item>
//    <item> SFDITEM_REG__ELC_ELSELR14 </item>
//    <item> SFDITEM_REG__ELC_ELSELR15 </item>
//    <item> SFDITEM_REG__ELC_ELSELR16 </item>
//    <item> SFDITEM_REG__ELC_ELSELR17 </item>
//    <item> SFDITEM_REG__ELC_ELSELR18 </item>
//    <item> SFDITEM_REG__ELC_ELSELR19 </item>
//    <item> SFDITEM_REG__ELC_ELSELR20 </item>
//    <item> SFDITEM_REG__ELC_ELSELR21 </item>
//  </view>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF0_IFL  ----------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF0_IFL __AT (0x40006000);



// ----------------------------  Register Item: INT_IF_IF_IF0_IFL  --------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF0_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006000) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF0_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF0_IFL = (INT_IF_IF_IF0_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF0_IFH  ----------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF0_IFH __AT (0x40006001);



// ----------------------------  Register Item: INT_IF_IF_IF0_IFH  --------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF0_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006001) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF0_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF0_IFH = (INT_IF_IF_IF0_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF0  ----------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF0
//    <name> [0] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF0_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF0_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF1_IFL  ----------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF1_IFL __AT (0x40006004);



// ----------------------------  Register Item: INT_IF_IF_IF1_IFL  --------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF1_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006004) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF1_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF1_IFL = (INT_IF_IF_IF1_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF1_IFH  ----------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF1_IFH __AT (0x40006005);



// ----------------------------  Register Item: INT_IF_IF_IF1_IFH  --------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF1_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006005) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF1_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF1_IFH = (INT_IF_IF_IF1_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF1  ----------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF1
//    <name> [1] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF1_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF1_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF2_IFL  ----------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF2_IFL __AT (0x40006008);



// ----------------------------  Register Item: INT_IF_IF_IF2_IFL  --------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF2_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006008) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF2_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF2_IFL = (INT_IF_IF_IF2_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF2_IFH  ----------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF2_IFH __AT (0x40006009);



// ----------------------------  Register Item: INT_IF_IF_IF2_IFH  --------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF2_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006009) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF2_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF2_IFH = (INT_IF_IF_IF2_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF2  ----------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF2
//    <name> [2] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF2_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF2_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF3_IFL  ----------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF3_IFL __AT (0x4000600C);



// ----------------------------  Register Item: INT_IF_IF_IF3_IFL  --------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF3_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000600C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF3_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF3_IFL = (INT_IF_IF_IF3_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF3_IFH  ----------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF3_IFH __AT (0x4000600D);



// ----------------------------  Register Item: INT_IF_IF_IF3_IFH  --------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF3_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000600D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF3_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF3_IFH = (INT_IF_IF_IF3_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF3  ----------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF3
//    <name> [3] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF3_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF3_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF4_IFL  ----------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF4_IFL __AT (0x40006010);



// ----------------------------  Register Item: INT_IF_IF_IF4_IFL  --------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF4_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006010) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF4_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF4_IFL = (INT_IF_IF_IF4_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF4_IFH  ----------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF4_IFH __AT (0x40006011);



// ----------------------------  Register Item: INT_IF_IF_IF4_IFH  --------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF4_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006011) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF4_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF4_IFH = (INT_IF_IF_IF4_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF4  ----------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF4
//    <name> [4] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF4_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF4_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF5_IFL  ----------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF5_IFL __AT (0x40006014);



// ----------------------------  Register Item: INT_IF_IF_IF5_IFL  --------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF5_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006014) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF5_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF5_IFL = (INT_IF_IF_IF5_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF5_IFH  ----------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF5_IFH __AT (0x40006015);



// ----------------------------  Register Item: INT_IF_IF_IF5_IFH  --------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF5_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006015) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF5_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF5_IFH = (INT_IF_IF_IF5_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF5  ----------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF5
//    <name> [5] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF5_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF5_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF6_IFL  ----------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF6_IFL __AT (0x40006018);



// ----------------------------  Register Item: INT_IF_IF_IF6_IFL  --------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF6_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006018) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF6_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF6_IFL = (INT_IF_IF_IF6_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF6_IFH  ----------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF6_IFH __AT (0x40006019);



// ----------------------------  Register Item: INT_IF_IF_IF6_IFH  --------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF6_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006019) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF6_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF6_IFH = (INT_IF_IF_IF6_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF6  ----------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF6
//    <name> [6] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF6_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF6_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF7_IFL  ----------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF7_IFL __AT (0x4000601C);



// ----------------------------  Register Item: INT_IF_IF_IF7_IFL  --------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF7_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000601C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF7_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF7_IFL = (INT_IF_IF_IF7_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF7_IFH  ----------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF7_IFH __AT (0x4000601D);



// ----------------------------  Register Item: INT_IF_IF_IF7_IFH  --------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF7_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000601D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF7_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF7_IFH = (INT_IF_IF_IF7_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF7  ----------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF7
//    <name> [7] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF7_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF7_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF8_IFL  ----------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF8_IFL __AT (0x40006020);



// ----------------------------  Register Item: INT_IF_IF_IF8_IFL  --------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF8_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006020) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF8_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF8_IFL = (INT_IF_IF_IF8_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF8_IFH  ----------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF8_IFH __AT (0x40006021);



// ----------------------------  Register Item: INT_IF_IF_IF8_IFH  --------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF8_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006021) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF8_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF8_IFH = (INT_IF_IF_IF8_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF8  ----------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF8
//    <name> [8] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF8_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF8_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF9_IFL  ----------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF9_IFL __AT (0x40006024);



// ----------------------------  Register Item: INT_IF_IF_IF9_IFL  --------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF9_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006024) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF9_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF9_IFL = (INT_IF_IF_IF9_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF9_IFH  ----------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF9_IFH __AT (0x40006025);



// ----------------------------  Register Item: INT_IF_IF_IF9_IFH  --------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF9_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006025) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF9_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF9_IFH = (INT_IF_IF_IF9_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF9  ----------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF9
//    <name> [9] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF9_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF9_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF10_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF10_IFL __AT (0x40006028);



// ----------------------------  Register Item: INT_IF_IF_IF10_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF10_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006028) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF10_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF10_IFL = (INT_IF_IF_IF10_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF10_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF10_IFH __AT (0x40006029);



// ----------------------------  Register Item: INT_IF_IF_IF10_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF10_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006029) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF10_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF10_IFH = (INT_IF_IF_IF10_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF10  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF10
//    <name> [10] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF10_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF10_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF11_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF11_IFL __AT (0x4000602C);



// ----------------------------  Register Item: INT_IF_IF_IF11_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF11_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000602C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF11_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF11_IFL = (INT_IF_IF_IF11_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF11_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF11_IFH __AT (0x4000602D);



// ----------------------------  Register Item: INT_IF_IF_IF11_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF11_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000602D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF11_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF11_IFH = (INT_IF_IF_IF11_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF11  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF11
//    <name> [11] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF11_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF11_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF12_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF12_IFL __AT (0x40006030);



// ----------------------------  Register Item: INT_IF_IF_IF12_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF12_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006030) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF12_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF12_IFL = (INT_IF_IF_IF12_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF12_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF12_IFH __AT (0x40006031);



// ----------------------------  Register Item: INT_IF_IF_IF12_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF12_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006031) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF12_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF12_IFH = (INT_IF_IF_IF12_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF12  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF12
//    <name> [12] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF12_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF12_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF13_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF13_IFL __AT (0x40006034);



// ----------------------------  Register Item: INT_IF_IF_IF13_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF13_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006034) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF13_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF13_IFL = (INT_IF_IF_IF13_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF13_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF13_IFH __AT (0x40006035);



// ----------------------------  Register Item: INT_IF_IF_IF13_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF13_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006035) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF13_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF13_IFH = (INT_IF_IF_IF13_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF13  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF13
//    <name> [13] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF13_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF13_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF14_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF14_IFL __AT (0x40006038);



// ----------------------------  Register Item: INT_IF_IF_IF14_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF14_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006038) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF14_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF14_IFL = (INT_IF_IF_IF14_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF14_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF14_IFH __AT (0x40006039);



// ----------------------------  Register Item: INT_IF_IF_IF14_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF14_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006039) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF14_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF14_IFH = (INT_IF_IF_IF14_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF14  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF14
//    <name> [14] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF14_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF14_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF15_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF15_IFL __AT (0x4000603C);



// ----------------------------  Register Item: INT_IF_IF_IF15_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF15_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000603C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF15_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF15_IFL = (INT_IF_IF_IF15_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF15_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF15_IFH __AT (0x4000603D);



// ----------------------------  Register Item: INT_IF_IF_IF15_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF15_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000603D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF15_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF15_IFH = (INT_IF_IF_IF15_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF15  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF15
//    <name> [15] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF15_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF15_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF16_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF16_IFL __AT (0x40006040);



// ----------------------------  Register Item: INT_IF_IF_IF16_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF16_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006040) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF16_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF16_IFL = (INT_IF_IF_IF16_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF16_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF16_IFH __AT (0x40006041);



// ----------------------------  Register Item: INT_IF_IF_IF16_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF16_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006041) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF16_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF16_IFH = (INT_IF_IF_IF16_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF16  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF16
//    <name> [16] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF16_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF16_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF17_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF17_IFL __AT (0x40006044);



// ----------------------------  Register Item: INT_IF_IF_IF17_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF17_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006044) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF17_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF17_IFL = (INT_IF_IF_IF17_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF17_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF17_IFH __AT (0x40006045);



// ----------------------------  Register Item: INT_IF_IF_IF17_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF17_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006045) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF17_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF17_IFH = (INT_IF_IF_IF17_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF17  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF17
//    <name> [17] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF17_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF17_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF18_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF18_IFL __AT (0x40006048);



// ----------------------------  Register Item: INT_IF_IF_IF18_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF18_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006048) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF18_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF18_IFL = (INT_IF_IF_IF18_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF18_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF18_IFH __AT (0x40006049);



// ----------------------------  Register Item: INT_IF_IF_IF18_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF18_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006049) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF18_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF18_IFH = (INT_IF_IF_IF18_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF18  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF18
//    <name> [18] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF18_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF18_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF19_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF19_IFL __AT (0x4000604C);



// ----------------------------  Register Item: INT_IF_IF_IF19_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF19_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000604C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF19_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF19_IFL = (INT_IF_IF_IF19_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF19_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF19_IFH __AT (0x4000604D);



// ----------------------------  Register Item: INT_IF_IF_IF19_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF19_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000604D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF19_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF19_IFH = (INT_IF_IF_IF19_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF19  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF19
//    <name> [19] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF19_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF19_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF20_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF20_IFL __AT (0x40006050);



// ----------------------------  Register Item: INT_IF_IF_IF20_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF20_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006050) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF20_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF20_IFL = (INT_IF_IF_IF20_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF20_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF20_IFH __AT (0x40006051);



// ----------------------------  Register Item: INT_IF_IF_IF20_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF20_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006051) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF20_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF20_IFH = (INT_IF_IF_IF20_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF20  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF20
//    <name> [20] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF20_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF20_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF21_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF21_IFL __AT (0x40006054);



// ----------------------------  Register Item: INT_IF_IF_IF21_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF21_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006054) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF21_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF21_IFL = (INT_IF_IF_IF21_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF21_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF21_IFH __AT (0x40006055);



// ----------------------------  Register Item: INT_IF_IF_IF21_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF21_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006055) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF21_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF21_IFH = (INT_IF_IF_IF21_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF21  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF21
//    <name> [21] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF21_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF21_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF22_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF22_IFL __AT (0x40006058);



// ----------------------------  Register Item: INT_IF_IF_IF22_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF22_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006058) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF22_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF22_IFL = (INT_IF_IF_IF22_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF22_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF22_IFH __AT (0x40006059);



// ----------------------------  Register Item: INT_IF_IF_IF22_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF22_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006059) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF22_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF22_IFH = (INT_IF_IF_IF22_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF22  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF22
//    <name> [22] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF22_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF22_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF23_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF23_IFL __AT (0x4000605C);



// ----------------------------  Register Item: INT_IF_IF_IF23_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF23_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000605C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF23_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF23_IFL = (INT_IF_IF_IF23_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF23_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF23_IFH __AT (0x4000605D);



// ----------------------------  Register Item: INT_IF_IF_IF23_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF23_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000605D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF23_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF23_IFH = (INT_IF_IF_IF23_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF23  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF23
//    <name> [23] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF23_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF23_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF24_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF24_IFL __AT (0x40006060);



// ----------------------------  Register Item: INT_IF_IF_IF24_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF24_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006060) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF24_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF24_IFL = (INT_IF_IF_IF24_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF24_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF24_IFH __AT (0x40006061);



// ----------------------------  Register Item: INT_IF_IF_IF24_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF24_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006061) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF24_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF24_IFH = (INT_IF_IF_IF24_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF24  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF24
//    <name> [24] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF24_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF24_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF25_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF25_IFL __AT (0x40006064);



// ----------------------------  Register Item: INT_IF_IF_IF25_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF25_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006064) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF25_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF25_IFL = (INT_IF_IF_IF25_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF25_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF25_IFH __AT (0x40006065);



// ----------------------------  Register Item: INT_IF_IF_IF25_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF25_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006065) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF25_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF25_IFH = (INT_IF_IF_IF25_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF25  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF25
//    <name> [25] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF25_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF25_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF26_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF26_IFL __AT (0x40006068);



// ----------------------------  Register Item: INT_IF_IF_IF26_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF26_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006068) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF26_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF26_IFL = (INT_IF_IF_IF26_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF26_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF26_IFH __AT (0x40006069);



// ----------------------------  Register Item: INT_IF_IF_IF26_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF26_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006069) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF26_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF26_IFH = (INT_IF_IF_IF26_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF26  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF26
//    <name> [26] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF26_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF26_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF27_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF27_IFL __AT (0x4000606C);



// ----------------------------  Register Item: INT_IF_IF_IF27_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF27_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000606C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF27_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF27_IFL = (INT_IF_IF_IF27_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF27_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF27_IFH __AT (0x4000606D);



// ----------------------------  Register Item: INT_IF_IF_IF27_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF27_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000606D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF27_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF27_IFH = (INT_IF_IF_IF27_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF27  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF27
//    <name> [27] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF27_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF27_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF28_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF28_IFL __AT (0x40006070);



// ----------------------------  Register Item: INT_IF_IF_IF28_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF28_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006070) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF28_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF28_IFL = (INT_IF_IF_IF28_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF28_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF28_IFH __AT (0x40006071);



// ----------------------------  Register Item: INT_IF_IF_IF28_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF28_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006071) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF28_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF28_IFH = (INT_IF_IF_IF28_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF28  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF28
//    <name> [28] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF28_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF28_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF29_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF29_IFL __AT (0x40006074);



// ----------------------------  Register Item: INT_IF_IF_IF29_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF29_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006074) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF29_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF29_IFL = (INT_IF_IF_IF29_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF29_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF29_IFH __AT (0x40006075);



// ----------------------------  Register Item: INT_IF_IF_IF29_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF29_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006075) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF29_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF29_IFH = (INT_IF_IF_IF29_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF29  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF29
//    <name> [29] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF29_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF29_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF30_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF30_IFL __AT (0x40006078);



// ----------------------------  Register Item: INT_IF_IF_IF30_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF30_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006078) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF30_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF30_IFL = (INT_IF_IF_IF30_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF30_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF30_IFH __AT (0x40006079);



// ----------------------------  Register Item: INT_IF_IF_IF30_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF30_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006079) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF30_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF30_IFH = (INT_IF_IF_IF30_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF30  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF30
//    <name> [30] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF30_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF30_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF31_IFL  ---------------------------
// SVD Line: 7017

unsigned char INT_IF_IF_IF31_IFL __AT (0x4000607C);



// ----------------------------  Register Item: INT_IF_IF_IF31_IFL  -------------------------------
// SVD Line: 7017

//  <item> SFDITEM_REG__INT_IF_IF_IF31_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000607C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF31_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF31_IFL = (INT_IF_IF_IF31_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF31_IFH  ---------------------------
// SVD Line: 7023

unsigned char INT_IF_IF_IF31_IFH __AT (0x4000607D);



// ----------------------------  Register Item: INT_IF_IF_IF31_IFH  -------------------------------
// SVD Line: 7023

//  <item> SFDITEM_REG__INT_IF_IF_IF31_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000607D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF31_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF31_IFH = (INT_IF_IF_IF31_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF31  ---------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF31
//    <name> [31] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF31_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF31_IFH </item>
//  </itree>
//  


// -------------------------------  Cluster Array ITree: INT_IF  ----------------------------------
// SVD Line: 7009

//  <itree> SFDITEM_CLUST__INT_IF
//    <name> IF </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF0 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF1 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF2 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF3 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF4 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF5 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF6 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF7 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF8 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF9 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF10 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF11 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF12 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF13 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF14 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF15 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF16 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF17 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF18 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF19 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF20 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF21 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF22 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF23 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF24 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF25 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF26 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF27 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF28 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF29 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF30 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF31 </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK0_MKL  ----------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK0_MKL __AT (0x40006100);



// ----------------------------  Register Item: INT_MK_MK_MK0_MKL  --------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK0_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006100) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK0_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK0_MKL = (INT_MK_MK_MK0_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK0_MKH  ----------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK0_MKH __AT (0x40006101);



// ----------------------------  Register Item: INT_MK_MK_MK0_MKH  --------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK0_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006101) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK0_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK0_MKH = (INT_MK_MK_MK0_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK0  ----------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK0
//    <name> [0] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK0_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK0_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK1_MKL  ----------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK1_MKL __AT (0x40006104);



// ----------------------------  Register Item: INT_MK_MK_MK1_MKL  --------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK1_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006104) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK1_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK1_MKL = (INT_MK_MK_MK1_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK1_MKH  ----------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK1_MKH __AT (0x40006105);



// ----------------------------  Register Item: INT_MK_MK_MK1_MKH  --------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK1_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006105) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK1_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK1_MKH = (INT_MK_MK_MK1_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK1  ----------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK1
//    <name> [1] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK1_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK1_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK2_MKL  ----------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK2_MKL __AT (0x40006108);



// ----------------------------  Register Item: INT_MK_MK_MK2_MKL  --------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK2_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006108) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK2_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK2_MKL = (INT_MK_MK_MK2_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK2_MKH  ----------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK2_MKH __AT (0x40006109);



// ----------------------------  Register Item: INT_MK_MK_MK2_MKH  --------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK2_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006109) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK2_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK2_MKH = (INT_MK_MK_MK2_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK2  ----------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK2
//    <name> [2] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK2_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK2_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK3_MKL  ----------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK3_MKL __AT (0x4000610C);



// ----------------------------  Register Item: INT_MK_MK_MK3_MKL  --------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK3_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000610C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK3_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK3_MKL = (INT_MK_MK_MK3_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK3_MKH  ----------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK3_MKH __AT (0x4000610D);



// ----------------------------  Register Item: INT_MK_MK_MK3_MKH  --------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK3_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000610D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK3_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK3_MKH = (INT_MK_MK_MK3_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK3  ----------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK3
//    <name> [3] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK3_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK3_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK4_MKL  ----------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK4_MKL __AT (0x40006110);



// ----------------------------  Register Item: INT_MK_MK_MK4_MKL  --------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK4_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006110) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK4_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK4_MKL = (INT_MK_MK_MK4_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK4_MKH  ----------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK4_MKH __AT (0x40006111);



// ----------------------------  Register Item: INT_MK_MK_MK4_MKH  --------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK4_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006111) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK4_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK4_MKH = (INT_MK_MK_MK4_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK4  ----------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK4
//    <name> [4] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK4_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK4_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK5_MKL  ----------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK5_MKL __AT (0x40006114);



// ----------------------------  Register Item: INT_MK_MK_MK5_MKL  --------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK5_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006114) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK5_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK5_MKL = (INT_MK_MK_MK5_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK5_MKH  ----------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK5_MKH __AT (0x40006115);



// ----------------------------  Register Item: INT_MK_MK_MK5_MKH  --------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK5_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006115) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK5_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK5_MKH = (INT_MK_MK_MK5_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK5  ----------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK5
//    <name> [5] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK5_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK5_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK6_MKL  ----------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK6_MKL __AT (0x40006118);



// ----------------------------  Register Item: INT_MK_MK_MK6_MKL  --------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK6_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006118) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK6_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK6_MKL = (INT_MK_MK_MK6_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK6_MKH  ----------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK6_MKH __AT (0x40006119);



// ----------------------------  Register Item: INT_MK_MK_MK6_MKH  --------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK6_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006119) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK6_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK6_MKH = (INT_MK_MK_MK6_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK6  ----------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK6
//    <name> [6] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK6_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK6_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK7_MKL  ----------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK7_MKL __AT (0x4000611C);



// ----------------------------  Register Item: INT_MK_MK_MK7_MKL  --------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK7_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000611C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK7_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK7_MKL = (INT_MK_MK_MK7_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK7_MKH  ----------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK7_MKH __AT (0x4000611D);



// ----------------------------  Register Item: INT_MK_MK_MK7_MKH  --------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK7_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000611D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK7_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK7_MKH = (INT_MK_MK_MK7_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK7  ----------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK7
//    <name> [7] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK7_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK7_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK8_MKL  ----------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK8_MKL __AT (0x40006120);



// ----------------------------  Register Item: INT_MK_MK_MK8_MKL  --------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK8_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006120) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK8_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK8_MKL = (INT_MK_MK_MK8_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK8_MKH  ----------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK8_MKH __AT (0x40006121);



// ----------------------------  Register Item: INT_MK_MK_MK8_MKH  --------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK8_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006121) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK8_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK8_MKH = (INT_MK_MK_MK8_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK8  ----------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK8
//    <name> [8] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK8_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK8_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK9_MKL  ----------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK9_MKL __AT (0x40006124);



// ----------------------------  Register Item: INT_MK_MK_MK9_MKL  --------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK9_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006124) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK9_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK9_MKL = (INT_MK_MK_MK9_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK9_MKH  ----------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK9_MKH __AT (0x40006125);



// ----------------------------  Register Item: INT_MK_MK_MK9_MKH  --------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK9_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006125) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK9_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK9_MKH = (INT_MK_MK_MK9_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK9  ----------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK9
//    <name> [9] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK9_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK9_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK10_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK10_MKL __AT (0x40006128);



// ----------------------------  Register Item: INT_MK_MK_MK10_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK10_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006128) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK10_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK10_MKL = (INT_MK_MK_MK10_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK10_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK10_MKH __AT (0x40006129);



// ----------------------------  Register Item: INT_MK_MK_MK10_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK10_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006129) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK10_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK10_MKH = (INT_MK_MK_MK10_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK10  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK10
//    <name> [10] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK10_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK10_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK11_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK11_MKL __AT (0x4000612C);



// ----------------------------  Register Item: INT_MK_MK_MK11_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK11_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000612C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK11_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK11_MKL = (INT_MK_MK_MK11_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK11_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK11_MKH __AT (0x4000612D);



// ----------------------------  Register Item: INT_MK_MK_MK11_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK11_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000612D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK11_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK11_MKH = (INT_MK_MK_MK11_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK11  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK11
//    <name> [11] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK11_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK11_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK12_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK12_MKL __AT (0x40006130);



// ----------------------------  Register Item: INT_MK_MK_MK12_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK12_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006130) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK12_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK12_MKL = (INT_MK_MK_MK12_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK12_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK12_MKH __AT (0x40006131);



// ----------------------------  Register Item: INT_MK_MK_MK12_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK12_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006131) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK12_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK12_MKH = (INT_MK_MK_MK12_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK12  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK12
//    <name> [12] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK12_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK12_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK13_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK13_MKL __AT (0x40006134);



// ----------------------------  Register Item: INT_MK_MK_MK13_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK13_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006134) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK13_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK13_MKL = (INT_MK_MK_MK13_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK13_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK13_MKH __AT (0x40006135);



// ----------------------------  Register Item: INT_MK_MK_MK13_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK13_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006135) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK13_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK13_MKH = (INT_MK_MK_MK13_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK13  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK13
//    <name> [13] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK13_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK13_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK14_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK14_MKL __AT (0x40006138);



// ----------------------------  Register Item: INT_MK_MK_MK14_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK14_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006138) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK14_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK14_MKL = (INT_MK_MK_MK14_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK14_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK14_MKH __AT (0x40006139);



// ----------------------------  Register Item: INT_MK_MK_MK14_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK14_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006139) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK14_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK14_MKH = (INT_MK_MK_MK14_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK14  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK14
//    <name> [14] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK14_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK14_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK15_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK15_MKL __AT (0x4000613C);



// ----------------------------  Register Item: INT_MK_MK_MK15_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK15_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000613C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK15_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK15_MKL = (INT_MK_MK_MK15_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK15_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK15_MKH __AT (0x4000613D);



// ----------------------------  Register Item: INT_MK_MK_MK15_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK15_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000613D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK15_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK15_MKH = (INT_MK_MK_MK15_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK15  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK15
//    <name> [15] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK15_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK15_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK16_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK16_MKL __AT (0x40006140);



// ----------------------------  Register Item: INT_MK_MK_MK16_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK16_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006140) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK16_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK16_MKL = (INT_MK_MK_MK16_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK16_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK16_MKH __AT (0x40006141);



// ----------------------------  Register Item: INT_MK_MK_MK16_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK16_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006141) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK16_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK16_MKH = (INT_MK_MK_MK16_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK16  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK16
//    <name> [16] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK16_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK16_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK17_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK17_MKL __AT (0x40006144);



// ----------------------------  Register Item: INT_MK_MK_MK17_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK17_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006144) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK17_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK17_MKL = (INT_MK_MK_MK17_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK17_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK17_MKH __AT (0x40006145);



// ----------------------------  Register Item: INT_MK_MK_MK17_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK17_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006145) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK17_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK17_MKH = (INT_MK_MK_MK17_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK17  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK17
//    <name> [17] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK17_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK17_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK18_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK18_MKL __AT (0x40006148);



// ----------------------------  Register Item: INT_MK_MK_MK18_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK18_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006148) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK18_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK18_MKL = (INT_MK_MK_MK18_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK18_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK18_MKH __AT (0x40006149);



// ----------------------------  Register Item: INT_MK_MK_MK18_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK18_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006149) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK18_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK18_MKH = (INT_MK_MK_MK18_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK18  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK18
//    <name> [18] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK18_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK18_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK19_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK19_MKL __AT (0x4000614C);



// ----------------------------  Register Item: INT_MK_MK_MK19_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK19_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000614C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK19_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK19_MKL = (INT_MK_MK_MK19_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK19_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK19_MKH __AT (0x4000614D);



// ----------------------------  Register Item: INT_MK_MK_MK19_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK19_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000614D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK19_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK19_MKH = (INT_MK_MK_MK19_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK19  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK19
//    <name> [19] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK19_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK19_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK20_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK20_MKL __AT (0x40006150);



// ----------------------------  Register Item: INT_MK_MK_MK20_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK20_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006150) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK20_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK20_MKL = (INT_MK_MK_MK20_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK20_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK20_MKH __AT (0x40006151);



// ----------------------------  Register Item: INT_MK_MK_MK20_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK20_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006151) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK20_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK20_MKH = (INT_MK_MK_MK20_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK20  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK20
//    <name> [20] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK20_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK20_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK21_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK21_MKL __AT (0x40006154);



// ----------------------------  Register Item: INT_MK_MK_MK21_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK21_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006154) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK21_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK21_MKL = (INT_MK_MK_MK21_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK21_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK21_MKH __AT (0x40006155);



// ----------------------------  Register Item: INT_MK_MK_MK21_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK21_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006155) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK21_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK21_MKH = (INT_MK_MK_MK21_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK21  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK21
//    <name> [21] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK21_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK21_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK22_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK22_MKL __AT (0x40006158);



// ----------------------------  Register Item: INT_MK_MK_MK22_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK22_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006158) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK22_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK22_MKL = (INT_MK_MK_MK22_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK22_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK22_MKH __AT (0x40006159);



// ----------------------------  Register Item: INT_MK_MK_MK22_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK22_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006159) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK22_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK22_MKH = (INT_MK_MK_MK22_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK22  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK22
//    <name> [22] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK22_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK22_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK23_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK23_MKL __AT (0x4000615C);



// ----------------------------  Register Item: INT_MK_MK_MK23_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK23_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000615C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK23_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK23_MKL = (INT_MK_MK_MK23_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK23_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK23_MKH __AT (0x4000615D);



// ----------------------------  Register Item: INT_MK_MK_MK23_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK23_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000615D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK23_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK23_MKH = (INT_MK_MK_MK23_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK23  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK23
//    <name> [23] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK23_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK23_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK24_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK24_MKL __AT (0x40006160);



// ----------------------------  Register Item: INT_MK_MK_MK24_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK24_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006160) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK24_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK24_MKL = (INT_MK_MK_MK24_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK24_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK24_MKH __AT (0x40006161);



// ----------------------------  Register Item: INT_MK_MK_MK24_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK24_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006161) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK24_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK24_MKH = (INT_MK_MK_MK24_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK24  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK24
//    <name> [24] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK24_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK24_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK25_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK25_MKL __AT (0x40006164);



// ----------------------------  Register Item: INT_MK_MK_MK25_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK25_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006164) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK25_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK25_MKL = (INT_MK_MK_MK25_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK25_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK25_MKH __AT (0x40006165);



// ----------------------------  Register Item: INT_MK_MK_MK25_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK25_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006165) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK25_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK25_MKH = (INT_MK_MK_MK25_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK25  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK25
//    <name> [25] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK25_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK25_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK26_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK26_MKL __AT (0x40006168);



// ----------------------------  Register Item: INT_MK_MK_MK26_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK26_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006168) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK26_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK26_MKL = (INT_MK_MK_MK26_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK26_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK26_MKH __AT (0x40006169);



// ----------------------------  Register Item: INT_MK_MK_MK26_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK26_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006169) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK26_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK26_MKH = (INT_MK_MK_MK26_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK26  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK26
//    <name> [26] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK26_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK26_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK27_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK27_MKL __AT (0x4000616C);



// ----------------------------  Register Item: INT_MK_MK_MK27_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK27_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000616C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK27_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK27_MKL = (INT_MK_MK_MK27_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK27_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK27_MKH __AT (0x4000616D);



// ----------------------------  Register Item: INT_MK_MK_MK27_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK27_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000616D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK27_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK27_MKH = (INT_MK_MK_MK27_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK27  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK27
//    <name> [27] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK27_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK27_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK28_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK28_MKL __AT (0x40006170);



// ----------------------------  Register Item: INT_MK_MK_MK28_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK28_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006170) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK28_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK28_MKL = (INT_MK_MK_MK28_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK28_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK28_MKH __AT (0x40006171);



// ----------------------------  Register Item: INT_MK_MK_MK28_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK28_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006171) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK28_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK28_MKH = (INT_MK_MK_MK28_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK28  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK28
//    <name> [28] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK28_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK28_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK29_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK29_MKL __AT (0x40006174);



// ----------------------------  Register Item: INT_MK_MK_MK29_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK29_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006174) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK29_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK29_MKL = (INT_MK_MK_MK29_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK29_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK29_MKH __AT (0x40006175);



// ----------------------------  Register Item: INT_MK_MK_MK29_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK29_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006175) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK29_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK29_MKH = (INT_MK_MK_MK29_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK29  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK29
//    <name> [29] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK29_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK29_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK30_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK30_MKL __AT (0x40006178);



// ----------------------------  Register Item: INT_MK_MK_MK30_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK30_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006178) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK30_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK30_MKL = (INT_MK_MK_MK30_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK30_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK30_MKH __AT (0x40006179);



// ----------------------------  Register Item: INT_MK_MK_MK30_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK30_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006179) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK30_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK30_MKH = (INT_MK_MK_MK30_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK30  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK30
//    <name> [30] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK30_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK30_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK31_MKL  ---------------------------
// SVD Line: 7039

unsigned char INT_MK_MK_MK31_MKL __AT (0x4000617C);



// ----------------------------  Register Item: INT_MK_MK_MK31_MKL  -------------------------------
// SVD Line: 7039

//  <item> SFDITEM_REG__INT_MK_MK_MK31_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000617C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK31_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK31_MKL = (INT_MK_MK_MK31_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK31_MKH  ---------------------------
// SVD Line: 7045

unsigned char INT_MK_MK_MK31_MKH __AT (0x4000617D);



// ----------------------------  Register Item: INT_MK_MK_MK31_MKH  -------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__INT_MK_MK_MK31_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000617D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK31_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK31_MKH = (INT_MK_MK_MK31_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK31  ---------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK31
//    <name> [31] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK31_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK31_MKH </item>
//  </itree>
//  


// -------------------------------  Cluster Array ITree: INT_MK  ----------------------------------
// SVD Line: 7031

//  <itree> SFDITEM_CLUST__INT_MK
//    <name> MK </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK0 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK1 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK2 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK3 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK4 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK5 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK6 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK7 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK8 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK9 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK10 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK11 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK12 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK13 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK14 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK15 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK16 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK17 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK18 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK19 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK20 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK21 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK22 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK23 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK24 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK25 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK26 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK27 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK28 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK29 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK30 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK31 </item>
//  </itree>
//  


// ----------------------------------  Peripheral View: INT  --------------------------------------
// SVD Line: 6993

//  <view> INT
//    <name> INT </name>
//    <item> SFDITEM_CLUST__INT_IF </item>
//    <item> SFDITEM_CLUST__INT_MK </item>
//  </view>
//  


// ----------------------------  Register Item Address: INTM_EGP0  --------------------------------
// SVD Line: 7145

unsigned char INTM_EGP0 __AT (0x40045B38);



// -------------------------------  Field Item: INTM_EGP0_EGP0  -----------------------------------
// SVD Line: 7153

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP0
//    <name> EGP0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40045B38) EGP0 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.0..0> EGP0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP1  -----------------------------------
// SVD Line: 7159

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP1
//    <name> EGP1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40045B38) EGP1 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.1..1> EGP1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP2  -----------------------------------
// SVD Line: 7165

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP2
//    <name> EGP2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40045B38) EGP2 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.2..2> EGP2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP3  -----------------------------------
// SVD Line: 7171

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP3
//    <name> EGP3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045B38) EGP3 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.3..3> EGP3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP4  -----------------------------------
// SVD Line: 7177

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP4
//    <name> EGP4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40045B38) EGP4 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.4..4> EGP4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP5  -----------------------------------
// SVD Line: 7183

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP5
//    <name> EGP5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40045B38) EGP5 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.5..5> EGP5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP6  -----------------------------------
// SVD Line: 7189

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP6
//    <name> EGP6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40045B38) EGP6 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.6..6> EGP6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP7  -----------------------------------
// SVD Line: 7195

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP7
//    <name> EGP7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40045B38) EGP7 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.7..7> EGP7
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: INTM_EGP0  -----------------------------------
// SVD Line: 7145

//  <rtree> SFDITEM_REG__INTM_EGP0
//    <name> EGP0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045B38) External interrupt rising edge enable register </i>
//    <loc> ( (unsigned char)((INTM_EGP0 >> 0) & 0xFF), ((INTM_EGP0 = (INTM_EGP0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP0 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP1 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP2 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP3 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP4 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP5 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP6 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP7 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: INTM_EGN0  --------------------------------
// SVD Line: 7204

unsigned char INTM_EGN0 __AT (0x40045B39);



// -------------------------------  Field Item: INTM_EGN0_EGN0  -----------------------------------
// SVD Line: 7212

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN0
//    <name> EGN0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40045B39) EGN0 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.0..0> EGN0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN1  -----------------------------------
// SVD Line: 7218

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN1
//    <name> EGN1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40045B39) EGN1 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.1..1> EGN1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN2  -----------------------------------
// SVD Line: 7224

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN2
//    <name> EGN2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40045B39) EGN2 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.2..2> EGN2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN3  -----------------------------------
// SVD Line: 7230

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN3
//    <name> EGN3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045B39) EGN3 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.3..3> EGN3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN4  -----------------------------------
// SVD Line: 7236

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN4
//    <name> EGN4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40045B39) EGN4 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.4..4> EGN4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN5  -----------------------------------
// SVD Line: 7242

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN5
//    <name> EGN5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40045B39) EGN5 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.5..5> EGN5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN6  -----------------------------------
// SVD Line: 7248

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN6
//    <name> EGN6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40045B39) EGN6 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.6..6> EGN6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN7  -----------------------------------
// SVD Line: 7254

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN7
//    <name> EGN7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40045B39) EGN7 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.7..7> EGN7
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: INTM_EGN0  -----------------------------------
// SVD Line: 7204

//  <rtree> SFDITEM_REG__INTM_EGN0
//    <name> EGN0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045B39) External interrupt falling edge enable register </i>
//    <loc> ( (unsigned char)((INTM_EGN0 >> 0) & 0xFF), ((INTM_EGN0 = (INTM_EGN0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN0 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN1 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN2 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN3 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN4 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN5 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN6 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN7 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: INTM_EGP1  --------------------------------
// SVD Line: 7263

unsigned char INTM_EGP1 __AT (0x40045B3A);



// -------------------------------  Field Item: INTM_EGP1_EGP8  -----------------------------------
// SVD Line: 7271

//  <item> SFDITEM_FIELD__INTM_EGP1_EGP8
//    <name> EGP8 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40045B3A) EGP8 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP1 ) </loc>
//      <o.0..0> EGP8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP1_EGP9  -----------------------------------
// SVD Line: 7277

//  <item> SFDITEM_FIELD__INTM_EGP1_EGP9
//    <name> EGP9 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40045B3A) EGP9 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP1 ) </loc>
//      <o.1..1> EGP9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP1_EGP10  ----------------------------------
// SVD Line: 7283

//  <item> SFDITEM_FIELD__INTM_EGP1_EGP10
//    <name> EGP10 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40045B3A) EGP10 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP1 ) </loc>
//      <o.2..2> EGP10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP1_EGP11  ----------------------------------
// SVD Line: 7289

//  <item> SFDITEM_FIELD__INTM_EGP1_EGP11
//    <name> EGP11 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045B3A) EGP11 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP1 ) </loc>
//      <o.3..3> EGP11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: INTM_EGP1  -----------------------------------
// SVD Line: 7263

//  <rtree> SFDITEM_REG__INTM_EGP1
//    <name> EGP1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045B3A) External interrupt rising edge enable register </i>
//    <loc> ( (unsigned char)((INTM_EGP1 >> 0) & 0xFF), ((INTM_EGP1 = (INTM_EGP1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__INTM_EGP1_EGP8 </item>
//    <item> SFDITEM_FIELD__INTM_EGP1_EGP9 </item>
//    <item> SFDITEM_FIELD__INTM_EGP1_EGP10 </item>
//    <item> SFDITEM_FIELD__INTM_EGP1_EGP11 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: INTM_EGN1  --------------------------------
// SVD Line: 7298

unsigned char INTM_EGN1 __AT (0x40045B3B);



// -------------------------------  Field Item: INTM_EGN1_EGN8  -----------------------------------
// SVD Line: 7306

//  <item> SFDITEM_FIELD__INTM_EGN1_EGN8
//    <name> EGN8 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40045B3B) EGN8 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN1 ) </loc>
//      <o.0..0> EGN8
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN1_EGN9  -----------------------------------
// SVD Line: 7312

//  <item> SFDITEM_FIELD__INTM_EGN1_EGN9
//    <name> EGN9 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40045B3B) EGN9 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN1 ) </loc>
//      <o.1..1> EGN9
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN1_EGN10  ----------------------------------
// SVD Line: 7318

//  <item> SFDITEM_FIELD__INTM_EGN1_EGN10
//    <name> EGN10 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40045B3B) EGN10 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN1 ) </loc>
//      <o.2..2> EGN10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN1_EGN11  ----------------------------------
// SVD Line: 7324

//  <item> SFDITEM_FIELD__INTM_EGN1_EGN11
//    <name> EGN11 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045B3B) EGN11 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN1 ) </loc>
//      <o.3..3> EGN11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: INTM_EGN1  -----------------------------------
// SVD Line: 7298

//  <rtree> SFDITEM_REG__INTM_EGN1
//    <name> EGN1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045B3B) External interrupt falling edge enable register </i>
//    <loc> ( (unsigned char)((INTM_EGN1 >> 0) & 0xFF), ((INTM_EGN1 = (INTM_EGN1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__INTM_EGN1_EGN8 </item>
//    <item> SFDITEM_FIELD__INTM_EGN1_EGN9 </item>
//    <item> SFDITEM_FIELD__INTM_EGN1_EGN10 </item>
//    <item> SFDITEM_FIELD__INTM_EGN1_EGN11 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: INTM  -------------------------------------
// SVD Line: 7057

//  <view> INTM
//    <name> INTM </name>
//    <item> SFDITEM_REG__INTM_EGP0 </item>
//    <item> SFDITEM_REG__INTM_EGN0 </item>
//    <item> SFDITEM_REG__INTM_EGP1 </item>
//    <item> SFDITEM_REG__INTM_EGN1 </item>
//  </view>
//  


// -----------------------------  Register Item Address: KEY_KRM  ---------------------------------
// SVD Line: 7359

unsigned char KEY_KRM __AT (0x40044B37);



// ---------------------------------  Register Item: KEY_KRM  -------------------------------------
// SVD Line: 7359

//  <item> SFDITEM_REG__KEY_KRM
//    <name> KRM </name>
//    <i> [Bits 7..0] RW (@ 0x40044B37) Key return mode register </i>
//    <edit> 
//      <loc> ( (unsigned char)((KEY_KRM >> 0) & 0xFFFFFFFF), ((KEY_KRM = (KEY_KRM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: KEY  --------------------------------------
// SVD Line: 7337

//  <view> KEY
//    <name> KEY </name>
//    <item> SFDITEM_REG__KEY_KRM </item>
//  </view>
//  


// ----------------------------  Register Item Address: MISC_NFEN0  -------------------------------
// SVD Line: 7387

unsigned char MISC_NFEN0 __AT (0x40040470);



// -----------------------------  Field Item: MISC_NFEN0_SNFEN00  ---------------------------------
// SVD Line: 7394

//  <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN00
//    <name> SNFEN00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40040470) Enable noise filter of RxD0 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN0 ) </loc>
//      <o.0..0> SNFEN00
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN0_SNFEN10  ---------------------------------
// SVD Line: 7400

//  <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN10
//    <name> SNFEN10 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40040470) Enable noise filter of RxD1 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN0 ) </loc>
//      <o.2..2> SNFEN10
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN0_SNFEN20  ---------------------------------
// SVD Line: 7406

//  <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN20
//    <name> SNFEN20 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40040470) Enable noise filter of RxD2 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN0 ) </loc>
//      <o.4..4> SNFEN20
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: MISC_NFEN0  -----------------------------------
// SVD Line: 7387

//  <rtree> SFDITEM_REG__MISC_NFEN0
//    <name> NFEN0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040470) Noise filter enable register 0 </i>
//    <loc> ( (unsigned char)((MISC_NFEN0 >> 0) & 0xFF), ((MISC_NFEN0 = (MISC_NFEN0 & ~(0x15UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x15) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN00 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN10 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN20 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MISC_NFEN1  -------------------------------
// SVD Line: 7415

unsigned char MISC_NFEN1 __AT (0x40040471);



// -----------------------------  Field Item: MISC_NFEN1_TNFEN00  ---------------------------------
// SVD Line: 7423

//  <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN00
//    <name> TNFEN00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40040471) Enable noise filter of TI00 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN1 ) </loc>
//      <o.0..0> TNFEN00
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN1_TNFEN01  ---------------------------------
// SVD Line: 7429

//  <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN01
//    <name> TNFEN01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40040471) Enable noise filter of TI01 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN1 ) </loc>
//      <o.1..1> TNFEN01
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN1_TNFEN02  ---------------------------------
// SVD Line: 7435

//  <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN02
//    <name> TNFEN02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40040471) Enable noise filter of TI02 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN1 ) </loc>
//      <o.2..2> TNFEN02
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN1_TNFEN03  ---------------------------------
// SVD Line: 7441

//  <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN03
//    <name> TNFEN03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40040471) Enable noise filter of TI03 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN1 ) </loc>
//      <o.3..3> TNFEN03
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: MISC_NFEN1  -----------------------------------
// SVD Line: 7415

//  <rtree> SFDITEM_REG__MISC_NFEN1
//    <name> NFEN1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040471) Noise filter enable register 1 </i>
//    <loc> ( (unsigned char)((MISC_NFEN1 >> 0) & 0xFF), ((MISC_NFEN1 = (MISC_NFEN1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN00 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN01 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN02 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: MISC_ISC  --------------------------------
// SVD Line: 7450

unsigned char MISC_ISC __AT (0x40040473);



// --------------------------------  Field Item: MISC_ISC_ISC0  -----------------------------------
// SVD Line: 7458

//  <item> SFDITEM_FIELD__MISC_ISC_ISC0
//    <name> ISC0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40040473) \nSwitching external interrupt (INTP0) input\n0 : INTP0 = Uses INTP0 pin as an external interrupt\n1 : RXD0 = Uses RXD0 pin as an external interrupt </i>
//    <combo> 
//      <loc> ( (unsigned char) MISC_ISC ) </loc>
//      <o.0..0> ISC0
//        <0=> 0: INTP0 = Uses INTP0 pin as an external interrupt
//        <1=> 1: RXD0 = Uses RXD0 pin as an external interrupt
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: MISC_ISC_ISC1  -----------------------------------
// SVD Line: 7476

//  <item> SFDITEM_FIELD__MISC_ISC_ISC1
//    <name> ISC1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40040473) \nSwitching TI03 input\n0 : TI03 = Uses TI03 pin as an timer input\n1 : RXD0 = Uses RXD0 pin as an timer input </i>
//    <combo> 
//      <loc> ( (unsigned char) MISC_ISC ) </loc>
//      <o.1..1> ISC1
//        <0=> 0: TI03 = Uses TI03 pin as an timer input
//        <1=> 1: RXD0 = Uses RXD0 pin as an timer input
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: MISC_ISC_SSIE00  ----------------------------------
// SVD Line: 7494

//  <item> SFDITEM_FIELD__MISC_ISC_SSIE00
//    <name> SSIE00 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40040473) \nThe slave select input (SS00) of SPI00 is valid\n0 : INVALID = The slave select input (SS00) pin is invalid\n1 : VALID = The slave select input (SS00) pin is valid </i>
//    <combo> 
//      <loc> ( (unsigned char) MISC_ISC ) </loc>
//      <o.7..7> SSIE00
//        <0=> 0: INVALID = The slave select input (SS00) pin is invalid
//        <1=> 1: VALID = The slave select input (SS00) pin is valid
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: MISC_ISC  ------------------------------------
// SVD Line: 7450

//  <rtree> SFDITEM_REG__MISC_ISC
//    <name> ISC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040473) Input switch control register </i>
//    <loc> ( (unsigned char)((MISC_ISC >> 0) & 0xFF), ((MISC_ISC = (MISC_ISC & ~(0x83UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x83) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MISC_ISC_ISC0 </item>
//    <item> SFDITEM_FIELD__MISC_ISC_ISC1 </item>
//    <item> SFDITEM_FIELD__MISC_ISC_SSIE00 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MISC_TIOS0  -------------------------------
// SVD Line: 7515

unsigned char MISC_TIOS0 __AT (0x40040474);



// --------------------------------  Register Item: MISC_TIOS0  -----------------------------------
// SVD Line: 7515

//  <item> SFDITEM_REG__MISC_TIOS0
//    <name> TIOS0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040474) Timer I/O select register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MISC_TIOS0 >> 0) & 0xFFFFFFFF), ((MISC_TIOS0 = (MISC_TIOS0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: MISC_TIOS1  -------------------------------
// SVD Line: 7523

unsigned char MISC_TIOS1 __AT (0x40040475);



// --------------------------------  Register Item: MISC_TIOS1  -----------------------------------
// SVD Line: 7523

//  <item> SFDITEM_REG__MISC_TIOS1
//    <name> TIOS1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040475) Timer I/O select register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MISC_TIOS1 >> 0) & 0xFFFFFFFF), ((MISC_TIOS1 = (MISC_TIOS1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: MISC_RTCCL  -------------------------------
// SVD Line: 7531

unsigned char MISC_RTCCL __AT (0x4004047C);



// --------------------------------  Register Item: MISC_RTCCL  -----------------------------------
// SVD Line: 7531

//  <item> SFDITEM_REG__MISC_RTCCL
//    <name> RTCCL </name>
//    <i> [Bits 7..0] RW (@ 0x4004047C) Real-time clock select register </i>
//    <edit> 
//      <loc> ( (unsigned char)((MISC_RTCCL >> 0) & 0xFFFFFFFF), ((MISC_RTCCL = (MISC_RTCCL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: MISC  -------------------------------------
// SVD Line: 7371

//  <view> MISC
//    <name> MISC </name>
//    <item> SFDITEM_REG__MISC_NFEN0 </item>
//    <item> SFDITEM_REG__MISC_NFEN1 </item>
//    <item> SFDITEM_REG__MISC_ISC </item>
//    <item> SFDITEM_REG__MISC_TIOS0 </item>
//    <item> SFDITEM_REG__MISC_TIOS1 </item>
//    <item> SFDITEM_REG__MISC_RTCCL </item>
//  </view>
//  


// ----------------------------  Register Item Address: FMC_FLSTS  --------------------------------
// SVD Line: 7565

unsigned int FMC_FLSTS __AT (0x40020000);



// --------------------------------  Field Item: FMC_FLSTS_OVF  -----------------------------------
// SVD Line: 7573

//  <item> SFDITEM_FIELD__FMC_FLSTS_OVF
//    <name> OVF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020000) Flash erase or write operaiton finish </i>
//    <check> 
//      <loc> ( (unsigned int) FMC_FLSTS ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FMC_FLSTS_EVF  -----------------------------------
// SVD Line: 7579

//  <item> SFDITEM_FIELD__FMC_FLSTS_EVF
//    <name> EVF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020000) Flash hardware verification error flag </i>
//    <check> 
//      <loc> ( (unsigned int) FMC_FLSTS ) </loc>
//      <o.2..2> EVF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FMC_FLSTS  -----------------------------------
// SVD Line: 7565

//  <rtree> SFDITEM_REG__FMC_FLSTS
//    <name> FLSTS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020000) Flash status register </i>
//    <loc> ( (unsigned int)((FMC_FLSTS >> 0) & 0xFFFFFFFF), ((FMC_FLSTS = (FMC_FLSTS & ~(0x5UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FMC_FLSTS_OVF </item>
//    <item> SFDITEM_FIELD__FMC_FLSTS_EVF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FMC_FLOPMD1  -------------------------------
// SVD Line: 7588

unsigned int FMC_FLOPMD1 __AT (0x40020004);



// -------------------------------  Register Item: FMC_FLOPMD1  -----------------------------------
// SVD Line: 7588

//  <item> SFDITEM_REG__FMC_FLOPMD1
//    <name> FLOPMD1 </name>
//    <i> [Bits 31..0] RW (@ 0x40020004) Flash operation mode register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLOPMD1 >> 0) & 0xFFFFFFFF), ((FMC_FLOPMD1 = (FMC_FLOPMD1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLOPMD2  -------------------------------
// SVD Line: 7596

unsigned int FMC_FLOPMD2 __AT (0x40020008);



// -------------------------------  Register Item: FMC_FLOPMD2  -----------------------------------
// SVD Line: 7596

//  <item> SFDITEM_REG__FMC_FLOPMD2
//    <name> FLOPMD2 </name>
//    <i> [Bits 31..0] RW (@ 0x40020008) Flash operation mode register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLOPMD2 >> 0) & 0xFFFFFFFF), ((FMC_FLOPMD2 = (FMC_FLOPMD2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: FMC_FLERMD  -------------------------------
// SVD Line: 7602

unsigned int FMC_FLERMD __AT (0x4002000C);



// --------------------------------  Register Item: FMC_FLERMD  -----------------------------------
// SVD Line: 7602

//  <item> SFDITEM_REG__FMC_FLERMD
//    <name> FLERMD </name>
//    <i> [Bits 31..0] RW (@ 0x4002000C) Flash erase mode register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLERMD >> 0) & 0xFFFFFFFF), ((FMC_FLERMD = (FMC_FLERMD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLCERCNT  ------------------------------
// SVD Line: 7610

unsigned int FMC_FLCERCNT __AT (0x40020010);



// -------------------------------  Register Item: FMC_FLCERCNT  ----------------------------------
// SVD Line: 7610

//  <item> SFDITEM_REG__FMC_FLCERCNT
//    <name> FLCERCNT </name>
//    <i> [Bits 31..0] RW (@ 0x40020010) Flash chip erase control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLCERCNT >> 0) & 0xFFFFFFFF), ((FMC_FLCERCNT = (FMC_FLCERCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLSERCNT  ------------------------------
// SVD Line: 7617

unsigned int FMC_FLSERCNT __AT (0x40020014);



// -------------------------------  Register Item: FMC_FLSERCNT  ----------------------------------
// SVD Line: 7617

//  <item> SFDITEM_REG__FMC_FLSERCNT
//    <name> FLSERCNT </name>
//    <i> [Bits 31..0] RW (@ 0x40020014) Flash sector erase control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLSERCNT >> 0) & 0xFFFFFFFF), ((FMC_FLSERCNT = (FMC_FLSERCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLPROCNT  ------------------------------
// SVD Line: 7624

unsigned int FMC_FLPROCNT __AT (0x4002001C);



// -------------------------------  Register Item: FMC_FLPROCNT  ----------------------------------
// SVD Line: 7624

//  <item> SFDITEM_REG__FMC_FLPROCNT
//    <name> FLPROCNT </name>
//    <i> [Bits 31..0] RW (@ 0x4002001C) Flash program (write) control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLPROCNT >> 0) & 0xFFFFFFFF), ((FMC_FLPROCNT = (FMC_FLPROCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: FMC_FLPROT  -------------------------------
// SVD Line: 7631

unsigned int FMC_FLPROT __AT (0x40020020);



// --------------------------------  Register Item: FMC_FLPROT  -----------------------------------
// SVD Line: 7631

//  <item> SFDITEM_REG__FMC_FLPROT
//    <name> FLPROT </name>
//    <i> [Bits 31..0] RW (@ 0x40020020) Flash protect control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLPROT >> 0) & 0xFFFFFFFF), ((FMC_FLPROT = (FMC_FLPROT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: FMC  --------------------------------------
// SVD Line: 7543

//  <view> FMC
//    <name> FMC </name>
//    <item> SFDITEM_REG__FMC_FLSTS </item>
//    <item> SFDITEM_REG__FMC_FLOPMD1 </item>
//    <item> SFDITEM_REG__FMC_FLOPMD2 </item>
//    <item> SFDITEM_REG__FMC_FLERMD </item>
//    <item> SFDITEM_REG__FMC_FLCERCNT </item>
//    <item> SFDITEM_REG__FMC_FLSERCNT </item>
//    <item> SFDITEM_REG__FMC_FLPROCNT </item>
//    <item> SFDITEM_REG__FMC_FLPROT </item>
//  </view>
//  


// ---------------------------  Register Item Address: SAF_CRC0CTL  -------------------------------
// SVD Line: 7659

unsigned char SAF_CRC0CTL __AT (0x40021810);



// -----------------------------  Field Item: SAF_CRC0CTL_CRC0EN  ---------------------------------
// SVD Line: 7668

//  <item> SFDITEM_FIELD__SAF_CRC0CTL_CRC0EN
//    <name> CRC0EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40021810) Control of high-speed CRC operation </i>
//    <check> 
//      <loc> ( (unsigned char) SAF_CRC0CTL ) </loc>
//      <o.7..7> CRC0EN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SAF_CRC0CTL_FEA  ----------------------------------
// SVD Line: 7674

//  <item> SFDITEM_FIELD__SAF_CRC0CTL_FEA
//    <name> FEA </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40021810) High-speed CRC operation range </i>
//    <edit> 
//      <loc> ( (unsigned char)((SAF_CRC0CTL >> 0) & 0x7F), ((SAF_CRC0CTL = (SAF_CRC0CTL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SAF_CRC0CTL  ----------------------------------
// SVD Line: 7659

//  <rtree> SFDITEM_REG__SAF_CRC0CTL
//    <name> CRC0CTL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40021810) Flash memory CRC control register </i>
//    <loc> ( (unsigned char)((SAF_CRC0CTL >> 0) & 0xFF), ((SAF_CRC0CTL = (SAF_CRC0CTL & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAF_CRC0CTL_CRC0EN </item>
//    <item> SFDITEM_FIELD__SAF_CRC0CTL_FEA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SAF_PGCRCL  -------------------------------
// SVD Line: 7683

unsigned short SAF_PGCRCL __AT (0x40021812);



// --------------------------------  Register Item: SAF_PGCRCL  -----------------------------------
// SVD Line: 7683

//  <item> SFDITEM_REG__SAF_PGCRCL
//    <name> PGCRCL </name>
//    <i> [Bits 15..0] RW (@ 0x40021812) Flash memory CRC operation result register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SAF_PGCRCL >> 0) & 0xFFFFFFFF), ((SAF_PGCRCL = (SAF_PGCRCL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SAF_CRCIN  --------------------------------
// SVD Line: 7692

unsigned char SAF_CRCIN __AT (0x400433AC);



// --------------------------------  Register Item: SAF_CRCIN  ------------------------------------
// SVD Line: 7692

//  <item> SFDITEM_REG__SAF_CRCIN
//    <name> CRCIN </name>
//    <i> [Bits 7..0] RW (@ 0x400433AC) CRC input register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SAF_CRCIN >> 0) & 0xFFFFFFFF), ((SAF_CRCIN = (SAF_CRCIN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: SAF_CRCD  --------------------------------
// SVD Line: 7701

unsigned short SAF_CRCD __AT (0x400432FA);



// ---------------------------------  Register Item: SAF_CRCD  ------------------------------------
// SVD Line: 7701

//  <item> SFDITEM_REG__SAF_CRCD
//    <name> CRCD </name>
//    <i> [Bits 15..0] RW (@ 0x400432FA) CRC data register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SAF_CRCD >> 0) & 0xFFFFFFFF), ((SAF_CRCD = (SAF_CRCD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SAF_RPECTL  -------------------------------
// SVD Line: 7710

unsigned char SAF_RPECTL __AT (0x40020425);



// -------------------------------  Field Item: SAF_RPECTL_RPEF  ----------------------------------
// SVD Line: 7721

//  <item> SFDITEM_FIELD__SAF_RPECTL_RPEF
//    <name> RPEF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020425) \nParity error status flag\n0 : NoError = No parity error has occurred\n1 : Error = Parity error has occurred </i>
//    <combo> 
//      <loc> ( (unsigned char) SAF_RPECTL ) </loc>
//      <o.0..0> RPEF
//        <0=> 0: NoError = No parity error has occurred
//        <1=> 1: Error = Parity error has occurred
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SAF_RPECTL_RPERDIS  ---------------------------------
// SVD Line: 7741

//  <item> SFDITEM_FIELD__SAF_RPECTL_RPERDIS
//    <name> RPERDIS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020425) \nDisable RAM parity error reset\n0 : Enable = Enable parity error reset\n1 : Disable = Disable parity error reset </i>
//    <combo> 
//      <loc> ( (unsigned char) SAF_RPECTL ) </loc>
//      <o.7..7> RPERDIS
//        <0=> 0: Enable = Enable parity error reset
//        <1=> 1: Disable = Disable parity error reset
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: SAF_RPECTL  -----------------------------------
// SVD Line: 7710

//  <rtree> SFDITEM_REG__SAF_RPECTL
//    <name> RPECTL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020425) RAM parity error control register </i>
//    <loc> ( (unsigned char)((SAF_RPECTL >> 0) & 0xFF), ((SAF_RPECTL = (SAF_RPECTL & ~(0x81UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x81) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAF_RPECTL_RPEF </item>
//    <item> SFDITEM_FIELD__SAF_RPECTL_RPERDIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SAF_SFRGD  --------------------------------
// SVD Line: 7763

unsigned short SAF_SFRGD __AT (0x40040478);



// --------------------------------  Register Item: SAF_SFRGD  ------------------------------------
// SVD Line: 7763

//  <item> SFDITEM_REG__SAF_SFRGD
//    <name> SFRGD </name>
//    <i> [Bits 15..0] RW (@ 0x40040478) SFR guard control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SAF_SFRGD >> 0) & 0xFFFFFFFF), ((SAF_SFRGD = (SAF_SFRGD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: SAF  --------------------------------------
// SVD Line: 7643

//  <view> SAF
//    <name> SAF </name>
//    <item> SFDITEM_REG__SAF_CRC0CTL </item>
//    <item> SFDITEM_REG__SAF_PGCRCL </item>
//    <item> SFDITEM_REG__SAF_CRCIN </item>
//    <item> SFDITEM_REG__SAF_CRCD </item>
//    <item> SFDITEM_REG__SAF_RPECTL </item>
//    <item> SFDITEM_REG__SAF_SFRGD </item>
//  </view>
//  


// -----------------------------  Register Item Address: CRC_CRCD  --------------------------------
// SVD Line: 7791

unsigned short CRC_CRCD __AT (0x400432FA);



// ---------------------------------  Register Item: CRC_CRCD  ------------------------------------
// SVD Line: 7791

//  <item> SFDITEM_REG__CRC_CRCD
//    <name> CRCD </name>
//    <i> [Bits 15..0] RW (@ 0x400432FA) CRC data register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CRC_CRCD >> 0) & 0xFFFFFFFF), ((CRC_CRCD = (CRC_CRCD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CRC_CRCIN  --------------------------------
// SVD Line: 7800

unsigned char CRC_CRCIN __AT (0x400433AC);



// --------------------------------  Register Item: CRC_CRCIN  ------------------------------------
// SVD Line: 7800

//  <item> SFDITEM_REG__CRC_CRCIN
//    <name> CRCIN </name>
//    <i> [Bits 7..0] RW (@ 0x400433AC) CRC input register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRC_CRCIN >> 0) & 0xFFFFFFFF), ((CRC_CRCIN = (CRC_CRCIN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: CRC  --------------------------------------
// SVD Line: 7775

//  <view> CRC
//    <name> CRC </name>
//    <item> SFDITEM_REG__CRC_CRCD </item>
//    <item> SFDITEM_REG__CRC_CRCIN </item>
//  </view>
//  


// ----------------------------  Register Item Address: DBG_DBGSTR  -------------------------------
// SVD Line: 7829

unsigned int DBG_DBGSTR __AT (0x4001B000);



// ---------------------------  Field Item: DBG_DBGSTR_CDBGPWRUPACK  ------------------------------
// SVD Line: 7837

//  <item> SFDITEM_FIELD__DBG_DBGSTR_CDBGPWRUPACK
//    <name> CDBGPWRUPACK </name>
//    <r> 
//    <i> [Bit 29] RO (@ 0x4001B000) DBG Power Up Acknowledgement </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTR ) </loc>
//      <o.29..29> CDBGPWRUPACK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DBG_DBGSTR_CDBGPWRUPREQ  ------------------------------
// SVD Line: 7843

//  <item> SFDITEM_FIELD__DBG_DBGSTR_CDBGPWRUPREQ
//    <name> CDBGPWRUPREQ </name>
//    <r> 
//    <i> [Bit 28] RO (@ 0x4001B000) DBG Power Up Request </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTR ) </loc>
//      <o.28..28> CDBGPWRUPREQ
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DBG_DBGSTR  -----------------------------------
// SVD Line: 7829

//  <rtree> SFDITEM_REG__DBG_DBGSTR
//    <name> DBGSTR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001B000) Debug status register </i>
//    <loc> ( (unsigned int)((DBG_DBGSTR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DBG_DBGSTR_CDBGPWRUPACK </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTR_CDBGPWRUPREQ </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DBG_DBGSTOPCR  ------------------------------
// SVD Line: 7851

unsigned int DBG_DBGSTOPCR __AT (0x4001B004);



// -----------------------------  Field Item: DBG_DBGSTOPCR_SWDIS  --------------------------------
// SVD Line: 7859

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_SWDIS
//    <name> SWDIS </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4001B004) SWD Disable </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.24..24> SWDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DBG_DBGSTOPCR_RPERMSK  -------------------------------
// SVD Line: 7865

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_RPERMSK
//    <name> RPERMSK </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4001B004) Mask RAM parity error in debug mode </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.16..16> RPERMSK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DBG_DBGSTOPCR_RESMSK  --------------------------------
// SVD Line: 7871

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_RESMSK
//    <name> RESMSK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001B004) Mask internal reset in debug mode </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.2..2> RESMSK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DBG_DBGSTOPCR_FRZEN1  --------------------------------
// SVD Line: 7877

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_FRZEN1
//    <name> FRZEN1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001B004) Stop Communation family macros when cpu halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.1..1> FRZEN1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DBG_DBGSTOPCR_FRZEN0  --------------------------------
// SVD Line: 7883

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_FRZEN0
//    <name> FRZEN0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B004) Stop Timer family macros when cpu halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.0..0> FRZEN0
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: DBG_DBGSTOPCR  ---------------------------------
// SVD Line: 7851

//  <rtree> SFDITEM_REG__DBG_DBGSTOPCR
//    <name> DBGSTOPCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B004) Debug Stop Control register </i>
//    <loc> ( (unsigned int)((DBG_DBGSTOPCR >> 0) & 0xFFFFFFFF), ((DBG_DBGSTOPCR = (DBG_DBGSTOPCR & ~(0x1010007UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1010007) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_SWDIS </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_RPERMSK </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_RESMSK </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_FRZEN1 </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_FRZEN0 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: DBG  --------------------------------------
// SVD Line: 7813

//  <view> DBG
//    <name> DBG </name>
//    <item> SFDITEM_REG__DBG_DBGSTR </item>
//    <item> SFDITEM_REG__DBG_DBGSTOPCR </item>
//  </view>
//  


// ---------------------------  Register Item Address: CAN0_CGMCTRL  ------------------------------
// SVD Line: 7935

unsigned short CAN0_CGMCTRL __AT (0x40045400);



// -------------------------------  Register Item: CAN0_CGMCTRL  ----------------------------------
// SVD Line: 7935

//  <item> SFDITEM_REG__CAN0_CGMCTRL
//    <name> CGMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x40045400) CAN global module control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CGMCTRL >> 0) & 0xFFFFFFFF), ((CAN0_CGMCTRL = (CAN0_CGMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CAN0_CGMCS  -------------------------------
// SVD Line: 7944

unsigned char CAN0_CGMCS __AT (0x40045402);



// --------------------------------  Register Item: CAN0_CGMCS  -----------------------------------
// SVD Line: 7944

//  <item> SFDITEM_REG__CAN0_CGMCS
//    <name> CGMCS </name>
//    <i> [Bits 7..0] RW (@ 0x40045402) CAN global module clock select register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0_CGMCS >> 0) & 0xFFFFFFFF), ((CAN0_CGMCS = (CAN0_CGMCS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: CAN0_CGMABT  -------------------------------
// SVD Line: 7953

unsigned short CAN0_CGMABT __AT (0x40045406);



// -------------------------------  Register Item: CAN0_CGMABT  -----------------------------------
// SVD Line: 7953

//  <item> SFDITEM_REG__CAN0_CGMABT
//    <name> CGMABT </name>
//    <i> [Bits 15..0] RW (@ 0x40045406) CAN global automatic block transmission control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CGMABT >> 0) & 0xFFFFFFFF), ((CAN0_CGMABT = (CAN0_CGMABT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: CAN0_CGMABTD  ------------------------------
// SVD Line: 7962

unsigned char CAN0_CGMABTD __AT (0x40045408);



// -------------------------------  Register Item: CAN0_CGMABTD  ----------------------------------
// SVD Line: 7962

//  <item> SFDITEM_REG__CAN0_CGMABTD
//    <name> CGMABTD </name>
//    <i> [Bits 7..0] RW (@ 0x40045408) CAN global automatic block transmission delay setting register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0_CGMABTD >> 0) & 0xFFFFFFFF), ((CAN0_CGMABTD = (CAN0_CGMABTD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0_CMASK1_CMASK1_CMASK1L  -----------------------
// SVD Line: 7971

unsigned short CAN0_CMASK1_CMASK1_CMASK1L __AT (0x40045440);



// ------------------------  Register Item: CAN0_CMASK1_CMASK1_CMASK1L  ---------------------------
// SVD Line: 7971

//  <item> SFDITEM_REG__CAN0_CMASK1_CMASK1_CMASK1L
//    <name> CMASK1L </name>
//    <i> [Bits 15..0] RW (@ 0x40045440) CAN module mask 1 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CMASK1_CMASK1_CMASK1L >> 0) & 0xFFFFFFFF), ((CAN0_CMASK1_CMASK1_CMASK1L = (CAN0_CMASK1_CMASK1_CMASK1L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0_CMASK1_CMASK1_CMASK1H  -----------------------
// SVD Line: 7971

unsigned short CAN0_CMASK1_CMASK1_CMASK1H __AT (0x40045442);



// ------------------------  Register Item: CAN0_CMASK1_CMASK1_CMASK1H  ---------------------------
// SVD Line: 7971

//  <item> SFDITEM_REG__CAN0_CMASK1_CMASK1_CMASK1H
//    <name> CMASK1H </name>
//    <i> [Bits 15..0] RW (@ 0x40045442) CAN module mask 1 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CMASK1_CMASK1_CMASK1H >> 0) & 0xFFFFFFFF), ((CAN0_CMASK1_CMASK1_CMASK1H = (CAN0_CMASK1_CMASK1_CMASK1H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0_CMASK2_CMASK2_CMASK2L  -----------------------
// SVD Line: 7982

unsigned short CAN0_CMASK2_CMASK2_CMASK2L __AT (0x40045444);



// ------------------------  Register Item: CAN0_CMASK2_CMASK2_CMASK2L  ---------------------------
// SVD Line: 7982

//  <item> SFDITEM_REG__CAN0_CMASK2_CMASK2_CMASK2L
//    <name> CMASK2L </name>
//    <i> [Bits 15..0] RW (@ 0x40045444) CAN module mask 2 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CMASK2_CMASK2_CMASK2L >> 0) & 0xFFFFFFFF), ((CAN0_CMASK2_CMASK2_CMASK2L = (CAN0_CMASK2_CMASK2_CMASK2L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0_CMASK2_CMASK2_CMASK2H  -----------------------
// SVD Line: 7982

unsigned short CAN0_CMASK2_CMASK2_CMASK2H __AT (0x40045446);



// ------------------------  Register Item: CAN0_CMASK2_CMASK2_CMASK2H  ---------------------------
// SVD Line: 7982

//  <item> SFDITEM_REG__CAN0_CMASK2_CMASK2_CMASK2H
//    <name> CMASK2H </name>
//    <i> [Bits 15..0] RW (@ 0x40045446) CAN module mask 2 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CMASK2_CMASK2_CMASK2H >> 0) & 0xFFFFFFFF), ((CAN0_CMASK2_CMASK2_CMASK2H = (CAN0_CMASK2_CMASK2_CMASK2H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0_CMASK3_CMASK3_CMASK3L  -----------------------
// SVD Line: 7993

unsigned short CAN0_CMASK3_CMASK3_CMASK3L __AT (0x40045448);



// ------------------------  Register Item: CAN0_CMASK3_CMASK3_CMASK3L  ---------------------------
// SVD Line: 7993

//  <item> SFDITEM_REG__CAN0_CMASK3_CMASK3_CMASK3L
//    <name> CMASK3L </name>
//    <i> [Bits 15..0] RW (@ 0x40045448) CAN module mask 3 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CMASK3_CMASK3_CMASK3L >> 0) & 0xFFFFFFFF), ((CAN0_CMASK3_CMASK3_CMASK3L = (CAN0_CMASK3_CMASK3_CMASK3L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0_CMASK3_CMASK3_CMASK3H  -----------------------
// SVD Line: 7993

unsigned short CAN0_CMASK3_CMASK3_CMASK3H __AT (0x4004544A);



// ------------------------  Register Item: CAN0_CMASK3_CMASK3_CMASK3H  ---------------------------
// SVD Line: 7993

//  <item> SFDITEM_REG__CAN0_CMASK3_CMASK3_CMASK3H
//    <name> CMASK3H </name>
//    <i> [Bits 15..0] RW (@ 0x4004544A) CAN module mask 3 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CMASK3_CMASK3_CMASK3H >> 0) & 0xFFFFFFFF), ((CAN0_CMASK3_CMASK3_CMASK3H = (CAN0_CMASK3_CMASK3_CMASK3H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0_CMASK4_CMASK4_CMASK4L  -----------------------
// SVD Line: 8004

unsigned short CAN0_CMASK4_CMASK4_CMASK4L __AT (0x4004544C);



// ------------------------  Register Item: CAN0_CMASK4_CMASK4_CMASK4L  ---------------------------
// SVD Line: 8004

//  <item> SFDITEM_REG__CAN0_CMASK4_CMASK4_CMASK4L
//    <name> CMASK4L </name>
//    <i> [Bits 15..0] RW (@ 0x4004544C) CAN module mask 4 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CMASK4_CMASK4_CMASK4L >> 0) & 0xFFFFFFFF), ((CAN0_CMASK4_CMASK4_CMASK4L = (CAN0_CMASK4_CMASK4_CMASK4L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0_CMASK4_CMASK4_CMASK4H  -----------------------
// SVD Line: 8004

unsigned short CAN0_CMASK4_CMASK4_CMASK4H __AT (0x4004544E);



// ------------------------  Register Item: CAN0_CMASK4_CMASK4_CMASK4H  ---------------------------
// SVD Line: 8004

//  <item> SFDITEM_REG__CAN0_CMASK4_CMASK4_CMASK4H
//    <name> CMASK4H </name>
//    <i> [Bits 15..0] RW (@ 0x4004544E) CAN module mask 4 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CMASK4_CMASK4_CMASK4H >> 0) & 0xFFFFFFFF), ((CAN0_CMASK4_CMASK4_CMASK4H = (CAN0_CMASK4_CMASK4_CMASK4H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CAN0_CCTRL  -------------------------------
// SVD Line: 8015

unsigned short CAN0_CCTRL __AT (0x40045450);



// --------------------------------  Register Item: CAN0_CCTRL  -----------------------------------
// SVD Line: 8015

//  <item> SFDITEM_REG__CAN0_CCTRL
//    <name> CCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x40045450) CAN module control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CCTRL >> 0) & 0xFFFFFFFF), ((CAN0_CCTRL = (CAN0_CCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CAN0_CLEC  --------------------------------
// SVD Line: 8024

unsigned char CAN0_CLEC __AT (0x40045452);



// --------------------------------  Register Item: CAN0_CLEC  ------------------------------------
// SVD Line: 8024

//  <item> SFDITEM_REG__CAN0_CLEC
//    <name> CLEC </name>
//    <i> [Bits 7..0] RW (@ 0x40045452) CAN module last error code register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0_CLEC >> 0) & 0xFFFFFFFF), ((CAN0_CLEC = (CAN0_CLEC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CAN0_CINFO  -------------------------------
// SVD Line: 8033

unsigned char CAN0_CINFO __AT (0x40045453);



// --------------------------------  Register Item: CAN0_CINFO  -----------------------------------
// SVD Line: 8033

//  <item> SFDITEM_REG__CAN0_CINFO
//    <name> CINFO </name>
//    <i> [Bits 7..0] RO (@ 0x40045453) CAN module information register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0_CINFO >> 0) & 0xFFFFFFFF), ((CAN0_CINFO = (CAN0_CINFO & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CAN0_CERC  --------------------------------
// SVD Line: 8043

unsigned short CAN0_CERC __AT (0x40045454);



// --------------------------------  Register Item: CAN0_CERC  ------------------------------------
// SVD Line: 8043

//  <item> SFDITEM_REG__CAN0_CERC
//    <name> CERC </name>
//    <i> [Bits 15..0] RO (@ 0x40045454) CAN module error counter register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CERC >> 0) & 0xFFFFFFFF), ((CAN0_CERC = (CAN0_CERC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: CAN0_CIE  --------------------------------
// SVD Line: 8053

unsigned short CAN0_CIE __AT (0x40045456);



// ---------------------------------  Register Item: CAN0_CIE  ------------------------------------
// SVD Line: 8053

//  <item> SFDITEM_REG__CAN0_CIE
//    <name> CIE </name>
//    <i> [Bits 15..0] RW (@ 0x40045456) CAN module interrupt enable register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CIE >> 0) & 0xFFFFFFFF), ((CAN0_CIE = (CAN0_CIE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CAN0_CINTS  -------------------------------
// SVD Line: 8062

unsigned short CAN0_CINTS __AT (0x40045458);



// --------------------------------  Register Item: CAN0_CINTS  -----------------------------------
// SVD Line: 8062

//  <item> SFDITEM_REG__CAN0_CINTS
//    <name> CINTS </name>
//    <i> [Bits 15..0] RW (@ 0x40045458) CAN module interrupt status register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CINTS >> 0) & 0xFFFFFFFF), ((CAN0_CINTS = (CAN0_CINTS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CAN0_CBRP  --------------------------------
// SVD Line: 8071

unsigned char CAN0_CBRP __AT (0x4004545A);



// --------------------------------  Register Item: CAN0_CBRP  ------------------------------------
// SVD Line: 8071

//  <item> SFDITEM_REG__CAN0_CBRP
//    <name> CBRP </name>
//    <i> [Bits 7..0] RW (@ 0x4004545A) CAN module bit rate prescaler register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0_CBRP >> 0) & 0xFFFFFFFF), ((CAN0_CBRP = (CAN0_CBRP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CAN0_CBTR  --------------------------------
// SVD Line: 8080

unsigned short CAN0_CBTR __AT (0x4004545C);



// --------------------------------  Register Item: CAN0_CBTR  ------------------------------------
// SVD Line: 8080

//  <item> SFDITEM_REG__CAN0_CBTR
//    <name> CBTR </name>
//    <i> [Bits 15..0] RW (@ 0x4004545C) CAN module bit rate register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CBTR >> 0) & 0xFFFFFFFF), ((CAN0_CBTR = (CAN0_CBTR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CAN0_CLIPT  -------------------------------
// SVD Line: 8089

unsigned char CAN0_CLIPT __AT (0x4004545E);



// --------------------------------  Register Item: CAN0_CLIPT  -----------------------------------
// SVD Line: 8089

//  <item> SFDITEM_REG__CAN0_CLIPT
//    <name> CLIPT </name>
//    <i> [Bits 7..0] RO (@ 0x4004545E) CAN module last in-pointer register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0_CLIPT >> 0) & 0xFFFFFFFF), ((CAN0_CLIPT = (CAN0_CLIPT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CAN0_CRGPT  -------------------------------
// SVD Line: 8099

unsigned short CAN0_CRGPT __AT (0x40045460);



// --------------------------------  Register Item: CAN0_CRGPT  -----------------------------------
// SVD Line: 8099

//  <item> SFDITEM_REG__CAN0_CRGPT
//    <name> CRGPT </name>
//    <i> [Bits 15..0] RW (@ 0x40045460) CAN module receive history list register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CRGPT >> 0) & 0xFFFFFFFF), ((CAN0_CRGPT = (CAN0_CRGPT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CAN0_CLOPT  -------------------------------
// SVD Line: 8108

unsigned char CAN0_CLOPT __AT (0x40045462);



// --------------------------------  Register Item: CAN0_CLOPT  -----------------------------------
// SVD Line: 8108

//  <item> SFDITEM_REG__CAN0_CLOPT
//    <name> CLOPT </name>
//    <i> [Bits 7..0] RO (@ 0x40045462) CAN module last out-pointer register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0_CLOPT >> 0) & 0xFFFFFFFF), ((CAN0_CLOPT = (CAN0_CLOPT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CAN0_CTGPT  -------------------------------
// SVD Line: 8118

unsigned short CAN0_CTGPT __AT (0x40045464);



// --------------------------------  Register Item: CAN0_CTGPT  -----------------------------------
// SVD Line: 8118

//  <item> SFDITEM_REG__CAN0_CTGPT
//    <name> CTGPT </name>
//    <i> [Bits 15..0] RW (@ 0x40045464) CAN module transmit history list register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CTGPT >> 0) & 0xFFFFFFFF), ((CAN0_CTGPT = (CAN0_CTGPT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: CAN0_CTS  --------------------------------
// SVD Line: 8127

unsigned short CAN0_CTS __AT (0x40045466);



// ---------------------------------  Register Item: CAN0_CTS  ------------------------------------
// SVD Line: 8127

//  <item> SFDITEM_REG__CAN0_CTS
//    <name> CTS </name>
//    <i> [Bits 15..0] RW (@ 0x40045466) CAN module time stamp register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0_CTS >> 0) & 0xFFFFFFFF), ((CAN0_CTS = (CAN0_CTS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: CAN0  -------------------------------------
// SVD Line: 7895

//  <view> CAN0
//    <name> CAN0 </name>
//    <item> SFDITEM_REG__CAN0_CGMCTRL </item>
//    <item> SFDITEM_REG__CAN0_CGMCS </item>
//    <item> SFDITEM_REG__CAN0_CGMABT </item>
//    <item> SFDITEM_REG__CAN0_CGMABTD </item>
//    <item> SFDITEM_REG__CAN0_CMASK1_CMASK1_CMASK1L </item>
//    <item> SFDITEM_REG__CAN0_CMASK1_CMASK1_CMASK1H </item>
//    <item> SFDITEM_REG__CAN0_CMASK2_CMASK2_CMASK2L </item>
//    <item> SFDITEM_REG__CAN0_CMASK2_CMASK2_CMASK2H </item>
//    <item> SFDITEM_REG__CAN0_CMASK3_CMASK3_CMASK3L </item>
//    <item> SFDITEM_REG__CAN0_CMASK3_CMASK3_CMASK3H </item>
//    <item> SFDITEM_REG__CAN0_CMASK4_CMASK4_CMASK4L </item>
//    <item> SFDITEM_REG__CAN0_CMASK4_CMASK4_CMASK4H </item>
//    <item> SFDITEM_REG__CAN0_CCTRL </item>
//    <item> SFDITEM_REG__CAN0_CLEC </item>
//    <item> SFDITEM_REG__CAN0_CINFO </item>
//    <item> SFDITEM_REG__CAN0_CERC </item>
//    <item> SFDITEM_REG__CAN0_CIE </item>
//    <item> SFDITEM_REG__CAN0_CINTS </item>
//    <item> SFDITEM_REG__CAN0_CBRP </item>
//    <item> SFDITEM_REG__CAN0_CBTR </item>
//    <item> SFDITEM_REG__CAN0_CLIPT </item>
//    <item> SFDITEM_REG__CAN0_CRGPT </item>
//    <item> SFDITEM_REG__CAN0_CLOPT </item>
//    <item> SFDITEM_REG__CAN0_CTGPT </item>
//    <item> SFDITEM_REG__CAN0_CTS </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG00_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG00_CMDB_CMDB_CMDB01 __AT (0x40045500);



// ------------------------  Register Item: CAN0MSG00_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x40045500) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG00_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMDB_CMDB_CMDB01 = (CAN0MSG00_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG00_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG00_CMDB_CMDB_CMDB23 __AT (0x40045502);



// ------------------------  Register Item: CAN0MSG00_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x40045502) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG00_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMDB_CMDB_CMDB23 = (CAN0MSG00_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG00_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG00_CMDB_CMDB_CMDB45 __AT (0x40045504);



// ------------------------  Register Item: CAN0MSG00_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x40045504) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG00_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMDB_CMDB_CMDB45 = (CAN0MSG00_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG00_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG00_CMDB_CMDB_CMDB67 __AT (0x40045506);



// ------------------------  Register Item: CAN0MSG00_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x40045506) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG00_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMDB_CMDB_CMDB67 = (CAN0MSG00_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG00_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG00_CMDB_CMDB_CMDB0 __AT (0x40045500);



// ------------------------  Register Item: CAN0MSG00_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x40045500) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG00_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMDB_CMDB_CMDB0 = (CAN0MSG00_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG00_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG00_CMDB_CMDB_CMDB1 __AT (0x40045501);



// ------------------------  Register Item: CAN0MSG00_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x40045501) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG00_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMDB_CMDB_CMDB1 = (CAN0MSG00_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG00_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG00_CMDB_CMDB_CMDB2 __AT (0x40045502);



// ------------------------  Register Item: CAN0MSG00_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x40045502) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG00_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMDB_CMDB_CMDB2 = (CAN0MSG00_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG00_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG00_CMDB_CMDB_CMDB3 __AT (0x40045503);



// ------------------------  Register Item: CAN0MSG00_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x40045503) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG00_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMDB_CMDB_CMDB3 = (CAN0MSG00_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG00_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG00_CMDB_CMDB_CMDB4 __AT (0x40045504);



// ------------------------  Register Item: CAN0MSG00_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x40045504) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG00_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMDB_CMDB_CMDB4 = (CAN0MSG00_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG00_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG00_CMDB_CMDB_CMDB5 __AT (0x40045505);



// ------------------------  Register Item: CAN0MSG00_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x40045505) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG00_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMDB_CMDB_CMDB5 = (CAN0MSG00_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG00_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG00_CMDB_CMDB_CMDB6 __AT (0x40045506);



// ------------------------  Register Item: CAN0MSG00_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x40045506) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG00_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMDB_CMDB_CMDB6 = (CAN0MSG00_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG00_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG00_CMDB_CMDB_CMDB7 __AT (0x40045507);



// ------------------------  Register Item: CAN0MSG00_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x40045507) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG00_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMDB_CMDB_CMDB7 = (CAN0MSG00_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG00_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG00_CMDLC __AT (0x40045508);



// -----------------------------  Register Item: CAN0MSG00_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG00_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x40045508) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG00_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMDLC = (CAN0MSG00_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG00_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG00_CMCONF __AT (0x40045509);



// -----------------------------  Register Item: CAN0MSG00_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG00_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x40045509) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG00_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMCONF = (CAN0MSG00_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG00_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG00_CMIDL __AT (0x4004550A);



// -----------------------------  Register Item: CAN0MSG00_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG00_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x4004550A) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG00_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMIDL = (CAN0MSG00_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG00_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG00_CMIDH __AT (0x4004550C);



// -----------------------------  Register Item: CAN0MSG00_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG00_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x4004550C) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG00_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMIDH = (CAN0MSG00_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG00_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG00_CMCTRL __AT (0x4004550E);



// -----------------------------  Register Item: CAN0MSG00_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG00_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x4004550E) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG00_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG00_CMCTRL = (CAN0MSG00_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG00  -----------------------------------
// SVD Line: 8140

//  <view> CAN0MSG00
//    <name> CAN0MSG00 </name>
//    <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG00_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG01_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG01_CMDB_CMDB_CMDB01 __AT (0x40045510);



// ------------------------  Register Item: CAN0MSG01_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x40045510) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG01_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMDB_CMDB_CMDB01 = (CAN0MSG01_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG01_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG01_CMDB_CMDB_CMDB23 __AT (0x40045512);



// ------------------------  Register Item: CAN0MSG01_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x40045512) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG01_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMDB_CMDB_CMDB23 = (CAN0MSG01_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG01_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG01_CMDB_CMDB_CMDB45 __AT (0x40045514);



// ------------------------  Register Item: CAN0MSG01_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x40045514) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG01_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMDB_CMDB_CMDB45 = (CAN0MSG01_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG01_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG01_CMDB_CMDB_CMDB67 __AT (0x40045516);



// ------------------------  Register Item: CAN0MSG01_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x40045516) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG01_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMDB_CMDB_CMDB67 = (CAN0MSG01_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG01_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG01_CMDB_CMDB_CMDB0 __AT (0x40045510);



// ------------------------  Register Item: CAN0MSG01_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x40045510) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG01_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMDB_CMDB_CMDB0 = (CAN0MSG01_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG01_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG01_CMDB_CMDB_CMDB1 __AT (0x40045511);



// ------------------------  Register Item: CAN0MSG01_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x40045511) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG01_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMDB_CMDB_CMDB1 = (CAN0MSG01_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG01_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG01_CMDB_CMDB_CMDB2 __AT (0x40045512);



// ------------------------  Register Item: CAN0MSG01_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x40045512) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG01_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMDB_CMDB_CMDB2 = (CAN0MSG01_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG01_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG01_CMDB_CMDB_CMDB3 __AT (0x40045513);



// ------------------------  Register Item: CAN0MSG01_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x40045513) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG01_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMDB_CMDB_CMDB3 = (CAN0MSG01_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG01_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG01_CMDB_CMDB_CMDB4 __AT (0x40045514);



// ------------------------  Register Item: CAN0MSG01_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x40045514) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG01_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMDB_CMDB_CMDB4 = (CAN0MSG01_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG01_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG01_CMDB_CMDB_CMDB5 __AT (0x40045515);



// ------------------------  Register Item: CAN0MSG01_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x40045515) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG01_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMDB_CMDB_CMDB5 = (CAN0MSG01_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG01_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG01_CMDB_CMDB_CMDB6 __AT (0x40045516);



// ------------------------  Register Item: CAN0MSG01_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x40045516) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG01_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMDB_CMDB_CMDB6 = (CAN0MSG01_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG01_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG01_CMDB_CMDB_CMDB7 __AT (0x40045517);



// ------------------------  Register Item: CAN0MSG01_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x40045517) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG01_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMDB_CMDB_CMDB7 = (CAN0MSG01_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG01_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG01_CMDLC __AT (0x40045518);



// -----------------------------  Register Item: CAN0MSG01_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG01_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x40045518) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG01_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMDLC = (CAN0MSG01_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG01_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG01_CMCONF __AT (0x40045519);



// -----------------------------  Register Item: CAN0MSG01_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG01_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x40045519) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG01_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMCONF = (CAN0MSG01_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG01_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG01_CMIDL __AT (0x4004551A);



// -----------------------------  Register Item: CAN0MSG01_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG01_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x4004551A) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG01_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMIDL = (CAN0MSG01_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG01_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG01_CMIDH __AT (0x4004551C);



// -----------------------------  Register Item: CAN0MSG01_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG01_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x4004551C) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG01_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMIDH = (CAN0MSG01_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG01_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG01_CMCTRL __AT (0x4004551E);



// -----------------------------  Register Item: CAN0MSG01_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG01_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x4004551E) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG01_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG01_CMCTRL = (CAN0MSG01_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG01  -----------------------------------
// SVD Line: 8260

//  <view> CAN0MSG01
//    <name> CAN0MSG01 </name>
//    <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG01_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG02_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG02_CMDB_CMDB_CMDB01 __AT (0x40045520);



// ------------------------  Register Item: CAN0MSG02_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x40045520) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG02_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMDB_CMDB_CMDB01 = (CAN0MSG02_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG02_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG02_CMDB_CMDB_CMDB23 __AT (0x40045522);



// ------------------------  Register Item: CAN0MSG02_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x40045522) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG02_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMDB_CMDB_CMDB23 = (CAN0MSG02_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG02_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG02_CMDB_CMDB_CMDB45 __AT (0x40045524);



// ------------------------  Register Item: CAN0MSG02_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x40045524) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG02_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMDB_CMDB_CMDB45 = (CAN0MSG02_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG02_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG02_CMDB_CMDB_CMDB67 __AT (0x40045526);



// ------------------------  Register Item: CAN0MSG02_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x40045526) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG02_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMDB_CMDB_CMDB67 = (CAN0MSG02_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG02_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG02_CMDB_CMDB_CMDB0 __AT (0x40045520);



// ------------------------  Register Item: CAN0MSG02_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x40045520) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG02_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMDB_CMDB_CMDB0 = (CAN0MSG02_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG02_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG02_CMDB_CMDB_CMDB1 __AT (0x40045521);



// ------------------------  Register Item: CAN0MSG02_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x40045521) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG02_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMDB_CMDB_CMDB1 = (CAN0MSG02_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG02_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG02_CMDB_CMDB_CMDB2 __AT (0x40045522);



// ------------------------  Register Item: CAN0MSG02_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x40045522) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG02_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMDB_CMDB_CMDB2 = (CAN0MSG02_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG02_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG02_CMDB_CMDB_CMDB3 __AT (0x40045523);



// ------------------------  Register Item: CAN0MSG02_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x40045523) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG02_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMDB_CMDB_CMDB3 = (CAN0MSG02_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG02_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG02_CMDB_CMDB_CMDB4 __AT (0x40045524);



// ------------------------  Register Item: CAN0MSG02_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x40045524) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG02_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMDB_CMDB_CMDB4 = (CAN0MSG02_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG02_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG02_CMDB_CMDB_CMDB5 __AT (0x40045525);



// ------------------------  Register Item: CAN0MSG02_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x40045525) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG02_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMDB_CMDB_CMDB5 = (CAN0MSG02_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG02_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG02_CMDB_CMDB_CMDB6 __AT (0x40045526);



// ------------------------  Register Item: CAN0MSG02_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x40045526) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG02_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMDB_CMDB_CMDB6 = (CAN0MSG02_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG02_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG02_CMDB_CMDB_CMDB7 __AT (0x40045527);



// ------------------------  Register Item: CAN0MSG02_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x40045527) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG02_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMDB_CMDB_CMDB7 = (CAN0MSG02_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG02_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG02_CMDLC __AT (0x40045528);



// -----------------------------  Register Item: CAN0MSG02_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG02_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x40045528) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG02_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMDLC = (CAN0MSG02_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG02_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG02_CMCONF __AT (0x40045529);



// -----------------------------  Register Item: CAN0MSG02_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG02_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x40045529) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG02_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMCONF = (CAN0MSG02_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG02_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG02_CMIDL __AT (0x4004552A);



// -----------------------------  Register Item: CAN0MSG02_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG02_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x4004552A) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG02_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMIDL = (CAN0MSG02_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG02_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG02_CMIDH __AT (0x4004552C);



// -----------------------------  Register Item: CAN0MSG02_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG02_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x4004552C) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG02_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMIDH = (CAN0MSG02_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG02_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG02_CMCTRL __AT (0x4004552E);



// -----------------------------  Register Item: CAN0MSG02_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG02_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x4004552E) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG02_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG02_CMCTRL = (CAN0MSG02_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG02  -----------------------------------
// SVD Line: 8267

//  <view> CAN0MSG02
//    <name> CAN0MSG02 </name>
//    <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG02_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG03_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG03_CMDB_CMDB_CMDB01 __AT (0x40045530);



// ------------------------  Register Item: CAN0MSG03_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x40045530) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG03_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMDB_CMDB_CMDB01 = (CAN0MSG03_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG03_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG03_CMDB_CMDB_CMDB23 __AT (0x40045532);



// ------------------------  Register Item: CAN0MSG03_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x40045532) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG03_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMDB_CMDB_CMDB23 = (CAN0MSG03_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG03_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG03_CMDB_CMDB_CMDB45 __AT (0x40045534);



// ------------------------  Register Item: CAN0MSG03_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x40045534) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG03_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMDB_CMDB_CMDB45 = (CAN0MSG03_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG03_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG03_CMDB_CMDB_CMDB67 __AT (0x40045536);



// ------------------------  Register Item: CAN0MSG03_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x40045536) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG03_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMDB_CMDB_CMDB67 = (CAN0MSG03_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG03_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG03_CMDB_CMDB_CMDB0 __AT (0x40045530);



// ------------------------  Register Item: CAN0MSG03_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x40045530) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG03_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMDB_CMDB_CMDB0 = (CAN0MSG03_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG03_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG03_CMDB_CMDB_CMDB1 __AT (0x40045531);



// ------------------------  Register Item: CAN0MSG03_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x40045531) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG03_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMDB_CMDB_CMDB1 = (CAN0MSG03_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG03_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG03_CMDB_CMDB_CMDB2 __AT (0x40045532);



// ------------------------  Register Item: CAN0MSG03_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x40045532) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG03_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMDB_CMDB_CMDB2 = (CAN0MSG03_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG03_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG03_CMDB_CMDB_CMDB3 __AT (0x40045533);



// ------------------------  Register Item: CAN0MSG03_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x40045533) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG03_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMDB_CMDB_CMDB3 = (CAN0MSG03_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG03_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG03_CMDB_CMDB_CMDB4 __AT (0x40045534);



// ------------------------  Register Item: CAN0MSG03_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x40045534) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG03_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMDB_CMDB_CMDB4 = (CAN0MSG03_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG03_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG03_CMDB_CMDB_CMDB5 __AT (0x40045535);



// ------------------------  Register Item: CAN0MSG03_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x40045535) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG03_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMDB_CMDB_CMDB5 = (CAN0MSG03_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG03_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG03_CMDB_CMDB_CMDB6 __AT (0x40045536);



// ------------------------  Register Item: CAN0MSG03_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x40045536) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG03_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMDB_CMDB_CMDB6 = (CAN0MSG03_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG03_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG03_CMDB_CMDB_CMDB7 __AT (0x40045537);



// ------------------------  Register Item: CAN0MSG03_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x40045537) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG03_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMDB_CMDB_CMDB7 = (CAN0MSG03_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG03_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG03_CMDLC __AT (0x40045538);



// -----------------------------  Register Item: CAN0MSG03_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG03_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x40045538) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG03_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMDLC = (CAN0MSG03_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG03_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG03_CMCONF __AT (0x40045539);



// -----------------------------  Register Item: CAN0MSG03_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG03_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x40045539) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG03_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMCONF = (CAN0MSG03_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG03_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG03_CMIDL __AT (0x4004553A);



// -----------------------------  Register Item: CAN0MSG03_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG03_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x4004553A) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG03_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMIDL = (CAN0MSG03_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG03_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG03_CMIDH __AT (0x4004553C);



// -----------------------------  Register Item: CAN0MSG03_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG03_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x4004553C) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG03_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMIDH = (CAN0MSG03_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG03_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG03_CMCTRL __AT (0x4004553E);



// -----------------------------  Register Item: CAN0MSG03_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG03_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x4004553E) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG03_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG03_CMCTRL = (CAN0MSG03_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG03  -----------------------------------
// SVD Line: 8274

//  <view> CAN0MSG03
//    <name> CAN0MSG03 </name>
//    <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG03_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG04_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG04_CMDB_CMDB_CMDB01 __AT (0x40045540);



// ------------------------  Register Item: CAN0MSG04_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x40045540) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG04_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMDB_CMDB_CMDB01 = (CAN0MSG04_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG04_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG04_CMDB_CMDB_CMDB23 __AT (0x40045542);



// ------------------------  Register Item: CAN0MSG04_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x40045542) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG04_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMDB_CMDB_CMDB23 = (CAN0MSG04_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG04_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG04_CMDB_CMDB_CMDB45 __AT (0x40045544);



// ------------------------  Register Item: CAN0MSG04_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x40045544) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG04_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMDB_CMDB_CMDB45 = (CAN0MSG04_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG04_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG04_CMDB_CMDB_CMDB67 __AT (0x40045546);



// ------------------------  Register Item: CAN0MSG04_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x40045546) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG04_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMDB_CMDB_CMDB67 = (CAN0MSG04_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG04_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG04_CMDB_CMDB_CMDB0 __AT (0x40045540);



// ------------------------  Register Item: CAN0MSG04_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x40045540) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG04_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMDB_CMDB_CMDB0 = (CAN0MSG04_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG04_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG04_CMDB_CMDB_CMDB1 __AT (0x40045541);



// ------------------------  Register Item: CAN0MSG04_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x40045541) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG04_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMDB_CMDB_CMDB1 = (CAN0MSG04_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG04_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG04_CMDB_CMDB_CMDB2 __AT (0x40045542);



// ------------------------  Register Item: CAN0MSG04_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x40045542) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG04_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMDB_CMDB_CMDB2 = (CAN0MSG04_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG04_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG04_CMDB_CMDB_CMDB3 __AT (0x40045543);



// ------------------------  Register Item: CAN0MSG04_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x40045543) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG04_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMDB_CMDB_CMDB3 = (CAN0MSG04_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG04_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG04_CMDB_CMDB_CMDB4 __AT (0x40045544);



// ------------------------  Register Item: CAN0MSG04_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x40045544) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG04_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMDB_CMDB_CMDB4 = (CAN0MSG04_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG04_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG04_CMDB_CMDB_CMDB5 __AT (0x40045545);



// ------------------------  Register Item: CAN0MSG04_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x40045545) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG04_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMDB_CMDB_CMDB5 = (CAN0MSG04_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG04_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG04_CMDB_CMDB_CMDB6 __AT (0x40045546);



// ------------------------  Register Item: CAN0MSG04_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x40045546) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG04_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMDB_CMDB_CMDB6 = (CAN0MSG04_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG04_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG04_CMDB_CMDB_CMDB7 __AT (0x40045547);



// ------------------------  Register Item: CAN0MSG04_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x40045547) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG04_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMDB_CMDB_CMDB7 = (CAN0MSG04_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG04_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG04_CMDLC __AT (0x40045548);



// -----------------------------  Register Item: CAN0MSG04_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG04_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x40045548) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG04_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMDLC = (CAN0MSG04_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG04_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG04_CMCONF __AT (0x40045549);



// -----------------------------  Register Item: CAN0MSG04_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG04_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x40045549) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG04_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMCONF = (CAN0MSG04_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG04_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG04_CMIDL __AT (0x4004554A);



// -----------------------------  Register Item: CAN0MSG04_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG04_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x4004554A) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG04_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMIDL = (CAN0MSG04_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG04_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG04_CMIDH __AT (0x4004554C);



// -----------------------------  Register Item: CAN0MSG04_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG04_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x4004554C) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG04_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMIDH = (CAN0MSG04_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG04_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG04_CMCTRL __AT (0x4004554E);



// -----------------------------  Register Item: CAN0MSG04_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG04_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x4004554E) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG04_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG04_CMCTRL = (CAN0MSG04_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG04  -----------------------------------
// SVD Line: 8281

//  <view> CAN0MSG04
//    <name> CAN0MSG04 </name>
//    <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG04_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG05_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG05_CMDB_CMDB_CMDB01 __AT (0x40045550);



// ------------------------  Register Item: CAN0MSG05_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x40045550) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG05_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMDB_CMDB_CMDB01 = (CAN0MSG05_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG05_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG05_CMDB_CMDB_CMDB23 __AT (0x40045552);



// ------------------------  Register Item: CAN0MSG05_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x40045552) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG05_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMDB_CMDB_CMDB23 = (CAN0MSG05_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG05_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG05_CMDB_CMDB_CMDB45 __AT (0x40045554);



// ------------------------  Register Item: CAN0MSG05_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x40045554) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG05_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMDB_CMDB_CMDB45 = (CAN0MSG05_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG05_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG05_CMDB_CMDB_CMDB67 __AT (0x40045556);



// ------------------------  Register Item: CAN0MSG05_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x40045556) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG05_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMDB_CMDB_CMDB67 = (CAN0MSG05_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG05_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG05_CMDB_CMDB_CMDB0 __AT (0x40045550);



// ------------------------  Register Item: CAN0MSG05_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x40045550) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG05_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMDB_CMDB_CMDB0 = (CAN0MSG05_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG05_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG05_CMDB_CMDB_CMDB1 __AT (0x40045551);



// ------------------------  Register Item: CAN0MSG05_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x40045551) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG05_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMDB_CMDB_CMDB1 = (CAN0MSG05_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG05_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG05_CMDB_CMDB_CMDB2 __AT (0x40045552);



// ------------------------  Register Item: CAN0MSG05_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x40045552) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG05_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMDB_CMDB_CMDB2 = (CAN0MSG05_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG05_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG05_CMDB_CMDB_CMDB3 __AT (0x40045553);



// ------------------------  Register Item: CAN0MSG05_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x40045553) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG05_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMDB_CMDB_CMDB3 = (CAN0MSG05_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG05_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG05_CMDB_CMDB_CMDB4 __AT (0x40045554);



// ------------------------  Register Item: CAN0MSG05_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x40045554) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG05_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMDB_CMDB_CMDB4 = (CAN0MSG05_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG05_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG05_CMDB_CMDB_CMDB5 __AT (0x40045555);



// ------------------------  Register Item: CAN0MSG05_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x40045555) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG05_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMDB_CMDB_CMDB5 = (CAN0MSG05_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG05_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG05_CMDB_CMDB_CMDB6 __AT (0x40045556);



// ------------------------  Register Item: CAN0MSG05_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x40045556) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG05_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMDB_CMDB_CMDB6 = (CAN0MSG05_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG05_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG05_CMDB_CMDB_CMDB7 __AT (0x40045557);



// ------------------------  Register Item: CAN0MSG05_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x40045557) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG05_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMDB_CMDB_CMDB7 = (CAN0MSG05_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG05_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG05_CMDLC __AT (0x40045558);



// -----------------------------  Register Item: CAN0MSG05_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG05_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x40045558) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG05_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMDLC = (CAN0MSG05_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG05_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG05_CMCONF __AT (0x40045559);



// -----------------------------  Register Item: CAN0MSG05_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG05_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x40045559) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG05_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMCONF = (CAN0MSG05_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG05_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG05_CMIDL __AT (0x4004555A);



// -----------------------------  Register Item: CAN0MSG05_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG05_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x4004555A) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG05_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMIDL = (CAN0MSG05_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG05_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG05_CMIDH __AT (0x4004555C);



// -----------------------------  Register Item: CAN0MSG05_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG05_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x4004555C) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG05_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMIDH = (CAN0MSG05_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG05_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG05_CMCTRL __AT (0x4004555E);



// -----------------------------  Register Item: CAN0MSG05_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG05_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x4004555E) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG05_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG05_CMCTRL = (CAN0MSG05_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG05  -----------------------------------
// SVD Line: 8288

//  <view> CAN0MSG05
//    <name> CAN0MSG05 </name>
//    <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG05_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG06_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG06_CMDB_CMDB_CMDB01 __AT (0x40045560);



// ------------------------  Register Item: CAN0MSG06_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x40045560) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG06_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMDB_CMDB_CMDB01 = (CAN0MSG06_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG06_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG06_CMDB_CMDB_CMDB23 __AT (0x40045562);



// ------------------------  Register Item: CAN0MSG06_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x40045562) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG06_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMDB_CMDB_CMDB23 = (CAN0MSG06_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG06_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG06_CMDB_CMDB_CMDB45 __AT (0x40045564);



// ------------------------  Register Item: CAN0MSG06_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x40045564) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG06_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMDB_CMDB_CMDB45 = (CAN0MSG06_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG06_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG06_CMDB_CMDB_CMDB67 __AT (0x40045566);



// ------------------------  Register Item: CAN0MSG06_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x40045566) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG06_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMDB_CMDB_CMDB67 = (CAN0MSG06_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG06_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG06_CMDB_CMDB_CMDB0 __AT (0x40045560);



// ------------------------  Register Item: CAN0MSG06_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x40045560) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG06_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMDB_CMDB_CMDB0 = (CAN0MSG06_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG06_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG06_CMDB_CMDB_CMDB1 __AT (0x40045561);



// ------------------------  Register Item: CAN0MSG06_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x40045561) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG06_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMDB_CMDB_CMDB1 = (CAN0MSG06_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG06_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG06_CMDB_CMDB_CMDB2 __AT (0x40045562);



// ------------------------  Register Item: CAN0MSG06_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x40045562) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG06_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMDB_CMDB_CMDB2 = (CAN0MSG06_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG06_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG06_CMDB_CMDB_CMDB3 __AT (0x40045563);



// ------------------------  Register Item: CAN0MSG06_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x40045563) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG06_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMDB_CMDB_CMDB3 = (CAN0MSG06_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG06_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG06_CMDB_CMDB_CMDB4 __AT (0x40045564);



// ------------------------  Register Item: CAN0MSG06_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x40045564) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG06_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMDB_CMDB_CMDB4 = (CAN0MSG06_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG06_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG06_CMDB_CMDB_CMDB5 __AT (0x40045565);



// ------------------------  Register Item: CAN0MSG06_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x40045565) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG06_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMDB_CMDB_CMDB5 = (CAN0MSG06_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG06_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG06_CMDB_CMDB_CMDB6 __AT (0x40045566);



// ------------------------  Register Item: CAN0MSG06_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x40045566) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG06_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMDB_CMDB_CMDB6 = (CAN0MSG06_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG06_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG06_CMDB_CMDB_CMDB7 __AT (0x40045567);



// ------------------------  Register Item: CAN0MSG06_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x40045567) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG06_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMDB_CMDB_CMDB7 = (CAN0MSG06_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG06_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG06_CMDLC __AT (0x40045568);



// -----------------------------  Register Item: CAN0MSG06_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG06_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x40045568) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG06_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMDLC = (CAN0MSG06_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG06_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG06_CMCONF __AT (0x40045569);



// -----------------------------  Register Item: CAN0MSG06_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG06_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x40045569) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG06_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMCONF = (CAN0MSG06_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG06_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG06_CMIDL __AT (0x4004556A);



// -----------------------------  Register Item: CAN0MSG06_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG06_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x4004556A) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG06_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMIDL = (CAN0MSG06_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG06_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG06_CMIDH __AT (0x4004556C);



// -----------------------------  Register Item: CAN0MSG06_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG06_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x4004556C) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG06_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMIDH = (CAN0MSG06_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG06_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG06_CMCTRL __AT (0x4004556E);



// -----------------------------  Register Item: CAN0MSG06_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG06_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x4004556E) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG06_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG06_CMCTRL = (CAN0MSG06_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG06  -----------------------------------
// SVD Line: 8295

//  <view> CAN0MSG06
//    <name> CAN0MSG06 </name>
//    <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG06_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG07_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG07_CMDB_CMDB_CMDB01 __AT (0x40045570);



// ------------------------  Register Item: CAN0MSG07_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x40045570) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG07_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMDB_CMDB_CMDB01 = (CAN0MSG07_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG07_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG07_CMDB_CMDB_CMDB23 __AT (0x40045572);



// ------------------------  Register Item: CAN0MSG07_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x40045572) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG07_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMDB_CMDB_CMDB23 = (CAN0MSG07_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG07_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG07_CMDB_CMDB_CMDB45 __AT (0x40045574);



// ------------------------  Register Item: CAN0MSG07_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x40045574) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG07_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMDB_CMDB_CMDB45 = (CAN0MSG07_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG07_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG07_CMDB_CMDB_CMDB67 __AT (0x40045576);



// ------------------------  Register Item: CAN0MSG07_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x40045576) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG07_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMDB_CMDB_CMDB67 = (CAN0MSG07_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG07_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG07_CMDB_CMDB_CMDB0 __AT (0x40045570);



// ------------------------  Register Item: CAN0MSG07_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x40045570) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG07_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMDB_CMDB_CMDB0 = (CAN0MSG07_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG07_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG07_CMDB_CMDB_CMDB1 __AT (0x40045571);



// ------------------------  Register Item: CAN0MSG07_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x40045571) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG07_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMDB_CMDB_CMDB1 = (CAN0MSG07_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG07_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG07_CMDB_CMDB_CMDB2 __AT (0x40045572);



// ------------------------  Register Item: CAN0MSG07_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x40045572) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG07_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMDB_CMDB_CMDB2 = (CAN0MSG07_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG07_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG07_CMDB_CMDB_CMDB3 __AT (0x40045573);



// ------------------------  Register Item: CAN0MSG07_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x40045573) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG07_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMDB_CMDB_CMDB3 = (CAN0MSG07_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG07_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG07_CMDB_CMDB_CMDB4 __AT (0x40045574);



// ------------------------  Register Item: CAN0MSG07_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x40045574) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG07_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMDB_CMDB_CMDB4 = (CAN0MSG07_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG07_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG07_CMDB_CMDB_CMDB5 __AT (0x40045575);



// ------------------------  Register Item: CAN0MSG07_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x40045575) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG07_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMDB_CMDB_CMDB5 = (CAN0MSG07_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG07_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG07_CMDB_CMDB_CMDB6 __AT (0x40045576);



// ------------------------  Register Item: CAN0MSG07_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x40045576) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG07_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMDB_CMDB_CMDB6 = (CAN0MSG07_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG07_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG07_CMDB_CMDB_CMDB7 __AT (0x40045577);



// ------------------------  Register Item: CAN0MSG07_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x40045577) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG07_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMDB_CMDB_CMDB7 = (CAN0MSG07_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG07_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG07_CMDLC __AT (0x40045578);



// -----------------------------  Register Item: CAN0MSG07_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG07_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x40045578) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG07_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMDLC = (CAN0MSG07_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG07_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG07_CMCONF __AT (0x40045579);



// -----------------------------  Register Item: CAN0MSG07_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG07_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x40045579) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG07_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMCONF = (CAN0MSG07_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG07_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG07_CMIDL __AT (0x4004557A);



// -----------------------------  Register Item: CAN0MSG07_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG07_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x4004557A) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG07_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMIDL = (CAN0MSG07_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG07_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG07_CMIDH __AT (0x4004557C);



// -----------------------------  Register Item: CAN0MSG07_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG07_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x4004557C) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG07_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMIDH = (CAN0MSG07_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG07_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG07_CMCTRL __AT (0x4004557E);



// -----------------------------  Register Item: CAN0MSG07_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG07_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x4004557E) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG07_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG07_CMCTRL = (CAN0MSG07_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG07  -----------------------------------
// SVD Line: 8302

//  <view> CAN0MSG07
//    <name> CAN0MSG07 </name>
//    <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG07_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG08_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG08_CMDB_CMDB_CMDB01 __AT (0x40045580);



// ------------------------  Register Item: CAN0MSG08_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x40045580) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG08_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMDB_CMDB_CMDB01 = (CAN0MSG08_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG08_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG08_CMDB_CMDB_CMDB23 __AT (0x40045582);



// ------------------------  Register Item: CAN0MSG08_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x40045582) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG08_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMDB_CMDB_CMDB23 = (CAN0MSG08_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG08_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG08_CMDB_CMDB_CMDB45 __AT (0x40045584);



// ------------------------  Register Item: CAN0MSG08_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x40045584) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG08_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMDB_CMDB_CMDB45 = (CAN0MSG08_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG08_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG08_CMDB_CMDB_CMDB67 __AT (0x40045586);



// ------------------------  Register Item: CAN0MSG08_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x40045586) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG08_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMDB_CMDB_CMDB67 = (CAN0MSG08_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG08_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG08_CMDB_CMDB_CMDB0 __AT (0x40045580);



// ------------------------  Register Item: CAN0MSG08_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x40045580) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG08_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMDB_CMDB_CMDB0 = (CAN0MSG08_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG08_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG08_CMDB_CMDB_CMDB1 __AT (0x40045581);



// ------------------------  Register Item: CAN0MSG08_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x40045581) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG08_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMDB_CMDB_CMDB1 = (CAN0MSG08_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG08_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG08_CMDB_CMDB_CMDB2 __AT (0x40045582);



// ------------------------  Register Item: CAN0MSG08_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x40045582) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG08_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMDB_CMDB_CMDB2 = (CAN0MSG08_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG08_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG08_CMDB_CMDB_CMDB3 __AT (0x40045583);



// ------------------------  Register Item: CAN0MSG08_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x40045583) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG08_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMDB_CMDB_CMDB3 = (CAN0MSG08_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG08_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG08_CMDB_CMDB_CMDB4 __AT (0x40045584);



// ------------------------  Register Item: CAN0MSG08_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x40045584) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG08_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMDB_CMDB_CMDB4 = (CAN0MSG08_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG08_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG08_CMDB_CMDB_CMDB5 __AT (0x40045585);



// ------------------------  Register Item: CAN0MSG08_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x40045585) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG08_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMDB_CMDB_CMDB5 = (CAN0MSG08_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG08_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG08_CMDB_CMDB_CMDB6 __AT (0x40045586);



// ------------------------  Register Item: CAN0MSG08_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x40045586) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG08_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMDB_CMDB_CMDB6 = (CAN0MSG08_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG08_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG08_CMDB_CMDB_CMDB7 __AT (0x40045587);



// ------------------------  Register Item: CAN0MSG08_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x40045587) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG08_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMDB_CMDB_CMDB7 = (CAN0MSG08_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG08_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG08_CMDLC __AT (0x40045588);



// -----------------------------  Register Item: CAN0MSG08_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG08_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x40045588) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG08_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMDLC = (CAN0MSG08_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG08_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG08_CMCONF __AT (0x40045589);



// -----------------------------  Register Item: CAN0MSG08_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG08_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x40045589) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG08_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMCONF = (CAN0MSG08_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG08_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG08_CMIDL __AT (0x4004558A);



// -----------------------------  Register Item: CAN0MSG08_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG08_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x4004558A) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG08_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMIDL = (CAN0MSG08_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG08_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG08_CMIDH __AT (0x4004558C);



// -----------------------------  Register Item: CAN0MSG08_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG08_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x4004558C) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG08_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMIDH = (CAN0MSG08_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG08_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG08_CMCTRL __AT (0x4004558E);



// -----------------------------  Register Item: CAN0MSG08_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG08_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x4004558E) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG08_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG08_CMCTRL = (CAN0MSG08_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG08  -----------------------------------
// SVD Line: 8309

//  <view> CAN0MSG08
//    <name> CAN0MSG08 </name>
//    <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG08_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG09_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG09_CMDB_CMDB_CMDB01 __AT (0x40045590);



// ------------------------  Register Item: CAN0MSG09_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x40045590) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG09_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMDB_CMDB_CMDB01 = (CAN0MSG09_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG09_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG09_CMDB_CMDB_CMDB23 __AT (0x40045592);



// ------------------------  Register Item: CAN0MSG09_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x40045592) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG09_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMDB_CMDB_CMDB23 = (CAN0MSG09_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG09_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG09_CMDB_CMDB_CMDB45 __AT (0x40045594);



// ------------------------  Register Item: CAN0MSG09_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x40045594) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG09_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMDB_CMDB_CMDB45 = (CAN0MSG09_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG09_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG09_CMDB_CMDB_CMDB67 __AT (0x40045596);



// ------------------------  Register Item: CAN0MSG09_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x40045596) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG09_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMDB_CMDB_CMDB67 = (CAN0MSG09_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG09_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG09_CMDB_CMDB_CMDB0 __AT (0x40045590);



// ------------------------  Register Item: CAN0MSG09_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x40045590) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG09_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMDB_CMDB_CMDB0 = (CAN0MSG09_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG09_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG09_CMDB_CMDB_CMDB1 __AT (0x40045591);



// ------------------------  Register Item: CAN0MSG09_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x40045591) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG09_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMDB_CMDB_CMDB1 = (CAN0MSG09_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG09_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG09_CMDB_CMDB_CMDB2 __AT (0x40045592);



// ------------------------  Register Item: CAN0MSG09_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x40045592) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG09_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMDB_CMDB_CMDB2 = (CAN0MSG09_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG09_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG09_CMDB_CMDB_CMDB3 __AT (0x40045593);



// ------------------------  Register Item: CAN0MSG09_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x40045593) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG09_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMDB_CMDB_CMDB3 = (CAN0MSG09_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG09_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG09_CMDB_CMDB_CMDB4 __AT (0x40045594);



// ------------------------  Register Item: CAN0MSG09_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x40045594) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG09_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMDB_CMDB_CMDB4 = (CAN0MSG09_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG09_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG09_CMDB_CMDB_CMDB5 __AT (0x40045595);



// ------------------------  Register Item: CAN0MSG09_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x40045595) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG09_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMDB_CMDB_CMDB5 = (CAN0MSG09_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG09_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG09_CMDB_CMDB_CMDB6 __AT (0x40045596);



// ------------------------  Register Item: CAN0MSG09_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x40045596) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG09_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMDB_CMDB_CMDB6 = (CAN0MSG09_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG09_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG09_CMDB_CMDB_CMDB7 __AT (0x40045597);



// ------------------------  Register Item: CAN0MSG09_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x40045597) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG09_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMDB_CMDB_CMDB7 = (CAN0MSG09_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG09_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG09_CMDLC __AT (0x40045598);



// -----------------------------  Register Item: CAN0MSG09_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG09_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x40045598) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG09_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMDLC = (CAN0MSG09_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG09_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG09_CMCONF __AT (0x40045599);



// -----------------------------  Register Item: CAN0MSG09_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG09_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x40045599) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG09_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMCONF = (CAN0MSG09_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG09_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG09_CMIDL __AT (0x4004559A);



// -----------------------------  Register Item: CAN0MSG09_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG09_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x4004559A) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG09_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMIDL = (CAN0MSG09_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG09_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG09_CMIDH __AT (0x4004559C);



// -----------------------------  Register Item: CAN0MSG09_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG09_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x4004559C) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG09_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMIDH = (CAN0MSG09_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG09_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG09_CMCTRL __AT (0x4004559E);



// -----------------------------  Register Item: CAN0MSG09_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG09_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x4004559E) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG09_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG09_CMCTRL = (CAN0MSG09_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG09  -----------------------------------
// SVD Line: 8316

//  <view> CAN0MSG09
//    <name> CAN0MSG09 </name>
//    <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG09_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG10_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG10_CMDB_CMDB_CMDB01 __AT (0x400455A0);



// ------------------------  Register Item: CAN0MSG10_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x400455A0) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG10_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMDB_CMDB_CMDB01 = (CAN0MSG10_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG10_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG10_CMDB_CMDB_CMDB23 __AT (0x400455A2);



// ------------------------  Register Item: CAN0MSG10_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x400455A2) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG10_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMDB_CMDB_CMDB23 = (CAN0MSG10_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG10_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG10_CMDB_CMDB_CMDB45 __AT (0x400455A4);



// ------------------------  Register Item: CAN0MSG10_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x400455A4) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG10_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMDB_CMDB_CMDB45 = (CAN0MSG10_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG10_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG10_CMDB_CMDB_CMDB67 __AT (0x400455A6);



// ------------------------  Register Item: CAN0MSG10_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x400455A6) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG10_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMDB_CMDB_CMDB67 = (CAN0MSG10_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG10_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG10_CMDB_CMDB_CMDB0 __AT (0x400455A0);



// ------------------------  Register Item: CAN0MSG10_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x400455A0) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG10_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMDB_CMDB_CMDB0 = (CAN0MSG10_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG10_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG10_CMDB_CMDB_CMDB1 __AT (0x400455A1);



// ------------------------  Register Item: CAN0MSG10_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x400455A1) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG10_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMDB_CMDB_CMDB1 = (CAN0MSG10_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG10_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG10_CMDB_CMDB_CMDB2 __AT (0x400455A2);



// ------------------------  Register Item: CAN0MSG10_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x400455A2) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG10_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMDB_CMDB_CMDB2 = (CAN0MSG10_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG10_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG10_CMDB_CMDB_CMDB3 __AT (0x400455A3);



// ------------------------  Register Item: CAN0MSG10_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x400455A3) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG10_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMDB_CMDB_CMDB3 = (CAN0MSG10_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG10_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG10_CMDB_CMDB_CMDB4 __AT (0x400455A4);



// ------------------------  Register Item: CAN0MSG10_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x400455A4) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG10_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMDB_CMDB_CMDB4 = (CAN0MSG10_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG10_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG10_CMDB_CMDB_CMDB5 __AT (0x400455A5);



// ------------------------  Register Item: CAN0MSG10_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x400455A5) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG10_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMDB_CMDB_CMDB5 = (CAN0MSG10_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG10_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG10_CMDB_CMDB_CMDB6 __AT (0x400455A6);



// ------------------------  Register Item: CAN0MSG10_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x400455A6) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG10_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMDB_CMDB_CMDB6 = (CAN0MSG10_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG10_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG10_CMDB_CMDB_CMDB7 __AT (0x400455A7);



// ------------------------  Register Item: CAN0MSG10_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x400455A7) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG10_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMDB_CMDB_CMDB7 = (CAN0MSG10_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG10_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG10_CMDLC __AT (0x400455A8);



// -----------------------------  Register Item: CAN0MSG10_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG10_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x400455A8) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG10_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMDLC = (CAN0MSG10_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG10_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG10_CMCONF __AT (0x400455A9);



// -----------------------------  Register Item: CAN0MSG10_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG10_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x400455A9) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG10_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMCONF = (CAN0MSG10_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG10_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG10_CMIDL __AT (0x400455AA);



// -----------------------------  Register Item: CAN0MSG10_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG10_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x400455AA) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG10_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMIDL = (CAN0MSG10_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG10_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG10_CMIDH __AT (0x400455AC);



// -----------------------------  Register Item: CAN0MSG10_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG10_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x400455AC) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG10_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMIDH = (CAN0MSG10_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG10_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG10_CMCTRL __AT (0x400455AE);



// -----------------------------  Register Item: CAN0MSG10_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG10_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x400455AE) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG10_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG10_CMCTRL = (CAN0MSG10_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG10  -----------------------------------
// SVD Line: 8323

//  <view> CAN0MSG10
//    <name> CAN0MSG10 </name>
//    <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG10_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG11_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG11_CMDB_CMDB_CMDB01 __AT (0x400455B0);



// ------------------------  Register Item: CAN0MSG11_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x400455B0) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG11_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMDB_CMDB_CMDB01 = (CAN0MSG11_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG11_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG11_CMDB_CMDB_CMDB23 __AT (0x400455B2);



// ------------------------  Register Item: CAN0MSG11_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x400455B2) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG11_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMDB_CMDB_CMDB23 = (CAN0MSG11_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG11_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG11_CMDB_CMDB_CMDB45 __AT (0x400455B4);



// ------------------------  Register Item: CAN0MSG11_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x400455B4) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG11_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMDB_CMDB_CMDB45 = (CAN0MSG11_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG11_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG11_CMDB_CMDB_CMDB67 __AT (0x400455B6);



// ------------------------  Register Item: CAN0MSG11_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x400455B6) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG11_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMDB_CMDB_CMDB67 = (CAN0MSG11_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG11_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG11_CMDB_CMDB_CMDB0 __AT (0x400455B0);



// ------------------------  Register Item: CAN0MSG11_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x400455B0) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG11_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMDB_CMDB_CMDB0 = (CAN0MSG11_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG11_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG11_CMDB_CMDB_CMDB1 __AT (0x400455B1);



// ------------------------  Register Item: CAN0MSG11_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x400455B1) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG11_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMDB_CMDB_CMDB1 = (CAN0MSG11_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG11_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG11_CMDB_CMDB_CMDB2 __AT (0x400455B2);



// ------------------------  Register Item: CAN0MSG11_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x400455B2) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG11_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMDB_CMDB_CMDB2 = (CAN0MSG11_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG11_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG11_CMDB_CMDB_CMDB3 __AT (0x400455B3);



// ------------------------  Register Item: CAN0MSG11_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x400455B3) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG11_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMDB_CMDB_CMDB3 = (CAN0MSG11_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG11_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG11_CMDB_CMDB_CMDB4 __AT (0x400455B4);



// ------------------------  Register Item: CAN0MSG11_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x400455B4) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG11_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMDB_CMDB_CMDB4 = (CAN0MSG11_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG11_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG11_CMDB_CMDB_CMDB5 __AT (0x400455B5);



// ------------------------  Register Item: CAN0MSG11_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x400455B5) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG11_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMDB_CMDB_CMDB5 = (CAN0MSG11_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG11_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG11_CMDB_CMDB_CMDB6 __AT (0x400455B6);



// ------------------------  Register Item: CAN0MSG11_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x400455B6) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG11_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMDB_CMDB_CMDB6 = (CAN0MSG11_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG11_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG11_CMDB_CMDB_CMDB7 __AT (0x400455B7);



// ------------------------  Register Item: CAN0MSG11_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x400455B7) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG11_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMDB_CMDB_CMDB7 = (CAN0MSG11_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG11_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG11_CMDLC __AT (0x400455B8);



// -----------------------------  Register Item: CAN0MSG11_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG11_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x400455B8) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG11_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMDLC = (CAN0MSG11_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG11_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG11_CMCONF __AT (0x400455B9);



// -----------------------------  Register Item: CAN0MSG11_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG11_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x400455B9) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG11_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMCONF = (CAN0MSG11_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG11_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG11_CMIDL __AT (0x400455BA);



// -----------------------------  Register Item: CAN0MSG11_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG11_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x400455BA) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG11_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMIDL = (CAN0MSG11_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG11_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG11_CMIDH __AT (0x400455BC);



// -----------------------------  Register Item: CAN0MSG11_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG11_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x400455BC) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG11_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMIDH = (CAN0MSG11_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG11_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG11_CMCTRL __AT (0x400455BE);



// -----------------------------  Register Item: CAN0MSG11_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG11_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x400455BE) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG11_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG11_CMCTRL = (CAN0MSG11_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG11  -----------------------------------
// SVD Line: 8330

//  <view> CAN0MSG11
//    <name> CAN0MSG11 </name>
//    <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG11_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG12_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG12_CMDB_CMDB_CMDB01 __AT (0x400455C0);



// ------------------------  Register Item: CAN0MSG12_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x400455C0) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG12_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMDB_CMDB_CMDB01 = (CAN0MSG12_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG12_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG12_CMDB_CMDB_CMDB23 __AT (0x400455C2);



// ------------------------  Register Item: CAN0MSG12_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x400455C2) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG12_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMDB_CMDB_CMDB23 = (CAN0MSG12_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG12_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG12_CMDB_CMDB_CMDB45 __AT (0x400455C4);



// ------------------------  Register Item: CAN0MSG12_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x400455C4) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG12_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMDB_CMDB_CMDB45 = (CAN0MSG12_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG12_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG12_CMDB_CMDB_CMDB67 __AT (0x400455C6);



// ------------------------  Register Item: CAN0MSG12_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x400455C6) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG12_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMDB_CMDB_CMDB67 = (CAN0MSG12_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG12_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG12_CMDB_CMDB_CMDB0 __AT (0x400455C0);



// ------------------------  Register Item: CAN0MSG12_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x400455C0) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG12_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMDB_CMDB_CMDB0 = (CAN0MSG12_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG12_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG12_CMDB_CMDB_CMDB1 __AT (0x400455C1);



// ------------------------  Register Item: CAN0MSG12_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x400455C1) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG12_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMDB_CMDB_CMDB1 = (CAN0MSG12_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG12_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG12_CMDB_CMDB_CMDB2 __AT (0x400455C2);



// ------------------------  Register Item: CAN0MSG12_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x400455C2) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG12_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMDB_CMDB_CMDB2 = (CAN0MSG12_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG12_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG12_CMDB_CMDB_CMDB3 __AT (0x400455C3);



// ------------------------  Register Item: CAN0MSG12_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x400455C3) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG12_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMDB_CMDB_CMDB3 = (CAN0MSG12_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG12_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG12_CMDB_CMDB_CMDB4 __AT (0x400455C4);



// ------------------------  Register Item: CAN0MSG12_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x400455C4) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG12_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMDB_CMDB_CMDB4 = (CAN0MSG12_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG12_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG12_CMDB_CMDB_CMDB5 __AT (0x400455C5);



// ------------------------  Register Item: CAN0MSG12_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x400455C5) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG12_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMDB_CMDB_CMDB5 = (CAN0MSG12_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG12_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG12_CMDB_CMDB_CMDB6 __AT (0x400455C6);



// ------------------------  Register Item: CAN0MSG12_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x400455C6) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG12_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMDB_CMDB_CMDB6 = (CAN0MSG12_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG12_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG12_CMDB_CMDB_CMDB7 __AT (0x400455C7);



// ------------------------  Register Item: CAN0MSG12_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x400455C7) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG12_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMDB_CMDB_CMDB7 = (CAN0MSG12_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG12_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG12_CMDLC __AT (0x400455C8);



// -----------------------------  Register Item: CAN0MSG12_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG12_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x400455C8) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG12_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMDLC = (CAN0MSG12_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG12_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG12_CMCONF __AT (0x400455C9);



// -----------------------------  Register Item: CAN0MSG12_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG12_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x400455C9) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG12_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMCONF = (CAN0MSG12_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG12_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG12_CMIDL __AT (0x400455CA);



// -----------------------------  Register Item: CAN0MSG12_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG12_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x400455CA) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG12_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMIDL = (CAN0MSG12_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG12_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG12_CMIDH __AT (0x400455CC);



// -----------------------------  Register Item: CAN0MSG12_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG12_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x400455CC) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG12_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMIDH = (CAN0MSG12_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG12_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG12_CMCTRL __AT (0x400455CE);



// -----------------------------  Register Item: CAN0MSG12_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG12_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x400455CE) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG12_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG12_CMCTRL = (CAN0MSG12_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG12  -----------------------------------
// SVD Line: 8337

//  <view> CAN0MSG12
//    <name> CAN0MSG12 </name>
//    <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG12_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG13_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG13_CMDB_CMDB_CMDB01 __AT (0x400455D0);



// ------------------------  Register Item: CAN0MSG13_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x400455D0) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG13_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMDB_CMDB_CMDB01 = (CAN0MSG13_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG13_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG13_CMDB_CMDB_CMDB23 __AT (0x400455D2);



// ------------------------  Register Item: CAN0MSG13_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x400455D2) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG13_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMDB_CMDB_CMDB23 = (CAN0MSG13_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG13_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG13_CMDB_CMDB_CMDB45 __AT (0x400455D4);



// ------------------------  Register Item: CAN0MSG13_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x400455D4) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG13_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMDB_CMDB_CMDB45 = (CAN0MSG13_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG13_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG13_CMDB_CMDB_CMDB67 __AT (0x400455D6);



// ------------------------  Register Item: CAN0MSG13_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x400455D6) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG13_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMDB_CMDB_CMDB67 = (CAN0MSG13_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG13_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG13_CMDB_CMDB_CMDB0 __AT (0x400455D0);



// ------------------------  Register Item: CAN0MSG13_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x400455D0) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG13_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMDB_CMDB_CMDB0 = (CAN0MSG13_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG13_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG13_CMDB_CMDB_CMDB1 __AT (0x400455D1);



// ------------------------  Register Item: CAN0MSG13_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x400455D1) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG13_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMDB_CMDB_CMDB1 = (CAN0MSG13_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG13_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG13_CMDB_CMDB_CMDB2 __AT (0x400455D2);



// ------------------------  Register Item: CAN0MSG13_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x400455D2) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG13_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMDB_CMDB_CMDB2 = (CAN0MSG13_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG13_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG13_CMDB_CMDB_CMDB3 __AT (0x400455D3);



// ------------------------  Register Item: CAN0MSG13_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x400455D3) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG13_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMDB_CMDB_CMDB3 = (CAN0MSG13_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG13_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG13_CMDB_CMDB_CMDB4 __AT (0x400455D4);



// ------------------------  Register Item: CAN0MSG13_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x400455D4) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG13_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMDB_CMDB_CMDB4 = (CAN0MSG13_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG13_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG13_CMDB_CMDB_CMDB5 __AT (0x400455D5);



// ------------------------  Register Item: CAN0MSG13_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x400455D5) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG13_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMDB_CMDB_CMDB5 = (CAN0MSG13_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG13_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG13_CMDB_CMDB_CMDB6 __AT (0x400455D6);



// ------------------------  Register Item: CAN0MSG13_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x400455D6) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG13_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMDB_CMDB_CMDB6 = (CAN0MSG13_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG13_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG13_CMDB_CMDB_CMDB7 __AT (0x400455D7);



// ------------------------  Register Item: CAN0MSG13_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x400455D7) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG13_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMDB_CMDB_CMDB7 = (CAN0MSG13_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG13_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG13_CMDLC __AT (0x400455D8);



// -----------------------------  Register Item: CAN0MSG13_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG13_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x400455D8) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG13_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMDLC = (CAN0MSG13_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG13_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG13_CMCONF __AT (0x400455D9);



// -----------------------------  Register Item: CAN0MSG13_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG13_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x400455D9) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG13_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMCONF = (CAN0MSG13_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG13_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG13_CMIDL __AT (0x400455DA);



// -----------------------------  Register Item: CAN0MSG13_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG13_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x400455DA) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG13_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMIDL = (CAN0MSG13_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG13_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG13_CMIDH __AT (0x400455DC);



// -----------------------------  Register Item: CAN0MSG13_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG13_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x400455DC) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG13_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMIDH = (CAN0MSG13_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG13_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG13_CMCTRL __AT (0x400455DE);



// -----------------------------  Register Item: CAN0MSG13_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG13_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x400455DE) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG13_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG13_CMCTRL = (CAN0MSG13_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG13  -----------------------------------
// SVD Line: 8344

//  <view> CAN0MSG13
//    <name> CAN0MSG13 </name>
//    <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG13_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG14_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG14_CMDB_CMDB_CMDB01 __AT (0x400455E0);



// ------------------------  Register Item: CAN0MSG14_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x400455E0) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG14_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMDB_CMDB_CMDB01 = (CAN0MSG14_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG14_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG14_CMDB_CMDB_CMDB23 __AT (0x400455E2);



// ------------------------  Register Item: CAN0MSG14_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x400455E2) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG14_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMDB_CMDB_CMDB23 = (CAN0MSG14_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG14_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG14_CMDB_CMDB_CMDB45 __AT (0x400455E4);



// ------------------------  Register Item: CAN0MSG14_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x400455E4) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG14_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMDB_CMDB_CMDB45 = (CAN0MSG14_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG14_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG14_CMDB_CMDB_CMDB67 __AT (0x400455E6);



// ------------------------  Register Item: CAN0MSG14_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x400455E6) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG14_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMDB_CMDB_CMDB67 = (CAN0MSG14_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG14_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG14_CMDB_CMDB_CMDB0 __AT (0x400455E0);



// ------------------------  Register Item: CAN0MSG14_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x400455E0) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG14_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMDB_CMDB_CMDB0 = (CAN0MSG14_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG14_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG14_CMDB_CMDB_CMDB1 __AT (0x400455E1);



// ------------------------  Register Item: CAN0MSG14_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x400455E1) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG14_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMDB_CMDB_CMDB1 = (CAN0MSG14_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG14_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG14_CMDB_CMDB_CMDB2 __AT (0x400455E2);



// ------------------------  Register Item: CAN0MSG14_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x400455E2) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG14_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMDB_CMDB_CMDB2 = (CAN0MSG14_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG14_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG14_CMDB_CMDB_CMDB3 __AT (0x400455E3);



// ------------------------  Register Item: CAN0MSG14_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x400455E3) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG14_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMDB_CMDB_CMDB3 = (CAN0MSG14_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG14_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG14_CMDB_CMDB_CMDB4 __AT (0x400455E4);



// ------------------------  Register Item: CAN0MSG14_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x400455E4) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG14_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMDB_CMDB_CMDB4 = (CAN0MSG14_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG14_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG14_CMDB_CMDB_CMDB5 __AT (0x400455E5);



// ------------------------  Register Item: CAN0MSG14_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x400455E5) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG14_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMDB_CMDB_CMDB5 = (CAN0MSG14_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG14_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG14_CMDB_CMDB_CMDB6 __AT (0x400455E6);



// ------------------------  Register Item: CAN0MSG14_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x400455E6) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG14_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMDB_CMDB_CMDB6 = (CAN0MSG14_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG14_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG14_CMDB_CMDB_CMDB7 __AT (0x400455E7);



// ------------------------  Register Item: CAN0MSG14_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x400455E7) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG14_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMDB_CMDB_CMDB7 = (CAN0MSG14_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG14_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG14_CMDLC __AT (0x400455E8);



// -----------------------------  Register Item: CAN0MSG14_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG14_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x400455E8) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG14_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMDLC = (CAN0MSG14_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG14_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG14_CMCONF __AT (0x400455E9);



// -----------------------------  Register Item: CAN0MSG14_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG14_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x400455E9) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG14_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMCONF = (CAN0MSG14_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG14_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG14_CMIDL __AT (0x400455EA);



// -----------------------------  Register Item: CAN0MSG14_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG14_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x400455EA) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG14_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMIDL = (CAN0MSG14_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG14_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG14_CMIDH __AT (0x400455EC);



// -----------------------------  Register Item: CAN0MSG14_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG14_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x400455EC) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG14_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMIDH = (CAN0MSG14_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG14_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG14_CMCTRL __AT (0x400455EE);



// -----------------------------  Register Item: CAN0MSG14_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG14_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x400455EE) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG14_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG14_CMCTRL = (CAN0MSG14_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG14  -----------------------------------
// SVD Line: 8351

//  <view> CAN0MSG14
//    <name> CAN0MSG14 </name>
//    <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG14_CMCTRL </item>
//  </view>
//  


// --------------------  Register Item Address: CAN0MSG15_CMDB_CMDB_CMDB01  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG15_CMDB_CMDB_CMDB01 __AT (0x400455F0);



// ------------------------  Register Item: CAN0MSG15_CMDB_CMDB_CMDB01  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB01
//    <name> CMDB01 </name>
//    <i> [Bits 15..0] RW (@ 0x400455F0) CAN message data byte 01 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG15_CMDB_CMDB_CMDB01 >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMDB_CMDB_CMDB01 = (CAN0MSG15_CMDB_CMDB_CMDB01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG15_CMDB_CMDB_CMDB23  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG15_CMDB_CMDB_CMDB23 __AT (0x400455F2);



// ------------------------  Register Item: CAN0MSG15_CMDB_CMDB_CMDB23  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB23
//    <name> CMDB23 </name>
//    <i> [Bits 15..0] RW (@ 0x400455F2) CAN message data byte 23 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG15_CMDB_CMDB_CMDB23 >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMDB_CMDB_CMDB23 = (CAN0MSG15_CMDB_CMDB_CMDB23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG15_CMDB_CMDB_CMDB45  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG15_CMDB_CMDB_CMDB45 __AT (0x400455F4);



// ------------------------  Register Item: CAN0MSG15_CMDB_CMDB_CMDB45  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB45
//    <name> CMDB45 </name>
//    <i> [Bits 15..0] RW (@ 0x400455F4) CAN message data byte 45 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG15_CMDB_CMDB_CMDB45 >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMDB_CMDB_CMDB45 = (CAN0MSG15_CMDB_CMDB_CMDB45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG15_CMDB_CMDB_CMDB67  -----------------------
// SVD Line: 8156

unsigned short CAN0MSG15_CMDB_CMDB_CMDB67 __AT (0x400455F6);



// ------------------------  Register Item: CAN0MSG15_CMDB_CMDB_CMDB67  ---------------------------
// SVD Line: 8156

//  <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB67
//    <name> CMDB67 </name>
//    <i> [Bits 15..0] RW (@ 0x400455F6) CAN message data byte 67 register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG15_CMDB_CMDB_CMDB67 >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMDB_CMDB_CMDB67 = (CAN0MSG15_CMDB_CMDB_CMDB67 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG15_CMDB_CMDB_CMDB0  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG15_CMDB_CMDB_CMDB0 __AT (0x400455F0);



// ------------------------  Register Item: CAN0MSG15_CMDB_CMDB_CMDB0  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB0
//    <name> CMDB0 </name>
//    <i> [Bits 7..0] RW (@ 0x400455F0) CAN message data byte 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG15_CMDB_CMDB_CMDB0 >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMDB_CMDB_CMDB0 = (CAN0MSG15_CMDB_CMDB_CMDB0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG15_CMDB_CMDB_CMDB1  ------------------------
// SVD Line: 8168

unsigned char CAN0MSG15_CMDB_CMDB_CMDB1 __AT (0x400455F1);



// ------------------------  Register Item: CAN0MSG15_CMDB_CMDB_CMDB1  ----------------------------
// SVD Line: 8168

//  <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB1
//    <name> CMDB1 </name>
//    <i> [Bits 7..0] RW (@ 0x400455F1) CAN message data byte 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG15_CMDB_CMDB_CMDB1 >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMDB_CMDB_CMDB1 = (CAN0MSG15_CMDB_CMDB_CMDB1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG15_CMDB_CMDB_CMDB2  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG15_CMDB_CMDB_CMDB2 __AT (0x400455F2);



// ------------------------  Register Item: CAN0MSG15_CMDB_CMDB_CMDB2  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB2
//    <name> CMDB2 </name>
//    <i> [Bits 7..0] RW (@ 0x400455F2) CAN message data byte 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG15_CMDB_CMDB_CMDB2 >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMDB_CMDB_CMDB2 = (CAN0MSG15_CMDB_CMDB_CMDB2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG15_CMDB_CMDB_CMDB3  ------------------------
// SVD Line: 8179

unsigned char CAN0MSG15_CMDB_CMDB_CMDB3 __AT (0x400455F3);



// ------------------------  Register Item: CAN0MSG15_CMDB_CMDB_CMDB3  ----------------------------
// SVD Line: 8179

//  <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB3
//    <name> CMDB3 </name>
//    <i> [Bits 7..0] RW (@ 0x400455F3) CAN message data byte 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG15_CMDB_CMDB_CMDB3 >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMDB_CMDB_CMDB3 = (CAN0MSG15_CMDB_CMDB_CMDB3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG15_CMDB_CMDB_CMDB4  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG15_CMDB_CMDB_CMDB4 __AT (0x400455F4);



// ------------------------  Register Item: CAN0MSG15_CMDB_CMDB_CMDB4  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB4
//    <name> CMDB4 </name>
//    <i> [Bits 7..0] RW (@ 0x400455F4) CAN message data byte 4 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG15_CMDB_CMDB_CMDB4 >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMDB_CMDB_CMDB4 = (CAN0MSG15_CMDB_CMDB_CMDB4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG15_CMDB_CMDB_CMDB5  ------------------------
// SVD Line: 8190

unsigned char CAN0MSG15_CMDB_CMDB_CMDB5 __AT (0x400455F5);



// ------------------------  Register Item: CAN0MSG15_CMDB_CMDB_CMDB5  ----------------------------
// SVD Line: 8190

//  <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB5
//    <name> CMDB5 </name>
//    <i> [Bits 7..0] RW (@ 0x400455F5) CAN message data byte 5 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG15_CMDB_CMDB_CMDB5 >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMDB_CMDB_CMDB5 = (CAN0MSG15_CMDB_CMDB_CMDB5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG15_CMDB_CMDB_CMDB6  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG15_CMDB_CMDB_CMDB6 __AT (0x400455F6);



// ------------------------  Register Item: CAN0MSG15_CMDB_CMDB_CMDB6  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB6
//    <name> CMDB6 </name>
//    <i> [Bits 7..0] RW (@ 0x400455F6) CAN message data byte 6 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG15_CMDB_CMDB_CMDB6 >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMDB_CMDB_CMDB6 = (CAN0MSG15_CMDB_CMDB_CMDB6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: CAN0MSG15_CMDB_CMDB_CMDB7  ------------------------
// SVD Line: 8201

unsigned char CAN0MSG15_CMDB_CMDB_CMDB7 __AT (0x400455F7);



// ------------------------  Register Item: CAN0MSG15_CMDB_CMDB_CMDB7  ----------------------------
// SVD Line: 8201

//  <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB7
//    <name> CMDB7 </name>
//    <i> [Bits 7..0] RW (@ 0x400455F7) CAN message data byte 7 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG15_CMDB_CMDB_CMDB7 >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMDB_CMDB_CMDB7 = (CAN0MSG15_CMDB_CMDB_CMDB7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG15_CMDLC  -----------------------------
// SVD Line: 8212

unsigned char CAN0MSG15_CMDLC __AT (0x400455F8);



// -----------------------------  Register Item: CAN0MSG15_CMDLC  ---------------------------------
// SVD Line: 8212

//  <item> SFDITEM_REG__CAN0MSG15_CMDLC
//    <name> CMDLC </name>
//    <i> [Bits 7..0] RW (@ 0x400455F8) CAN message data length register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG15_CMDLC >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMDLC = (CAN0MSG15_CMDLC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG15_CMCONF  ----------------------------
// SVD Line: 8221

unsigned char CAN0MSG15_CMCONF __AT (0x400455F9);



// -----------------------------  Register Item: CAN0MSG15_CMCONF  --------------------------------
// SVD Line: 8221

//  <item> SFDITEM_REG__CAN0MSG15_CMCONF
//    <name> CMCONF </name>
//    <i> [Bits 7..0] RW (@ 0x400455F9) CAN message configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN0MSG15_CMCONF >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMCONF = (CAN0MSG15_CMCONF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG15_CMIDL  -----------------------------
// SVD Line: 8230

unsigned short CAN0MSG15_CMIDL __AT (0x400455FA);



// -----------------------------  Register Item: CAN0MSG15_CMIDL  ---------------------------------
// SVD Line: 8230

//  <item> SFDITEM_REG__CAN0MSG15_CMIDL
//    <name> CMIDL </name>
//    <i> [Bits 15..0] RW (@ 0x400455FA) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG15_CMIDL >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMIDL = (CAN0MSG15_CMIDL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG15_CMIDH  -----------------------------
// SVD Line: 8239

unsigned short CAN0MSG15_CMIDH __AT (0x400455FC);



// -----------------------------  Register Item: CAN0MSG15_CMIDH  ---------------------------------
// SVD Line: 8239

//  <item> SFDITEM_REG__CAN0MSG15_CMIDH
//    <name> CMIDH </name>
//    <i> [Bits 15..0] RW (@ 0x400455FC) CAN message ID register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG15_CMIDH >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMIDH = (CAN0MSG15_CMIDH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: CAN0MSG15_CMCTRL  ----------------------------
// SVD Line: 8248

unsigned short CAN0MSG15_CMCTRL __AT (0x400455FE);



// -----------------------------  Register Item: CAN0MSG15_CMCTRL  --------------------------------
// SVD Line: 8248

//  <item> SFDITEM_REG__CAN0MSG15_CMCTRL
//    <name> CMCTRL </name>
//    <i> [Bits 15..0] RW (@ 0x400455FE) CAN message control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN0MSG15_CMCTRL >> 0) & 0xFFFFFFFF), ((CAN0MSG15_CMCTRL = (CAN0MSG15_CMCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: CAN0MSG15  -----------------------------------
// SVD Line: 8358

//  <view> CAN0MSG15
//    <name> CAN0MSG15 </name>
//    <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB01 </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB23 </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB45 </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB67 </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB0 </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB1 </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB2 </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB3 </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB4 </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB5 </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB6 </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMDB_CMDB_CMDB7 </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMDLC </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMCONF </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMIDL </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMIDH </item>
//    <item> SFDITEM_REG__CAN0MSG15_CMCTRL </item>
//  </view>
//  


// ----------------------------  Register Item Address: BGR_VBG85  --------------------------------
// SVD Line: 8381

unsigned short BGR_VBG85 __AT (0x00500660);



// --------------------------------  Register Item: BGR_VBG85  ------------------------------------
// SVD Line: 8381

//  <item> SFDITEM_REG__BGR_VBG85
//    <name> VBG85 </name>
//    <i> [Bits 15..0] RO (@ 0x00500660) The A/D conversion value of VBGR at 85 degrees and 3.0V reference voltage </i>
//    <edit> 
//      <loc> ( (unsigned short)((BGR_VBG85 >> 0) & 0xFFFFFFFF), ((BGR_VBG85 = (BGR_VBG85 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: BGR_VBG25  --------------------------------
// SVD Line: 8388

unsigned short BGR_VBG25 __AT (0x00500664);



// --------------------------------  Register Item: BGR_VBG25  ------------------------------------
// SVD Line: 8388

//  <item> SFDITEM_REG__BGR_VBG25
//    <name> VBG25 </name>
//    <i> [Bits 15..0] RO (@ 0x00500664) The A/D conversion value of VBGR at 25 degrees and 3.0V reference voltage </i>
//    <edit> 
//      <loc> ( (unsigned short)((BGR_VBG25 >> 0) & 0xFFFFFFFF), ((BGR_VBG25 = (BGR_VBG25 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: BGR  --------------------------------------
// SVD Line: 8365

//  <view> BGR
//    <name> BGR </name>
//    <item> SFDITEM_REG__BGR_VBG85 </item>
//    <item> SFDITEM_REG__BGR_VBG25 </item>
//  </view>
//  


// ----------------------------  Register Item Address: TSN_TSN85  --------------------------------
// SVD Line: 8414

unsigned short TSN_TSN85 __AT (0x00500668);



// --------------------------------  Register Item: TSN_TSN85  ------------------------------------
// SVD Line: 8414

//  <item> SFDITEM_REG__TSN_TSN85
//    <name> TSN85 </name>
//    <i> [Bits 15..0] RO (@ 0x00500668) The A/D conversion value of Temperature Sensor at 85 degrees and 3.0V reference voltage </i>
//    <edit> 
//      <loc> ( (unsigned short)((TSN_TSN85 >> 0) & 0xFFFFFFFF), ((TSN_TSN85 = (TSN_TSN85 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TSN_TSN25  --------------------------------
// SVD Line: 8422

unsigned short TSN_TSN25 __AT (0x0050066C);



// --------------------------------  Register Item: TSN_TSN25  ------------------------------------
// SVD Line: 8422

//  <item> SFDITEM_REG__TSN_TSN25
//    <name> TSN25 </name>
//    <i> [Bits 15..0] RO (@ 0x0050066C) The A/D conversion value of Temperature Sensor at 25 degrees and 3.0V reference voltage </i>
//    <edit> 
//      <loc> ( (unsigned short)((TSN_TSN25 >> 0) & 0xFFFFFFFF), ((TSN_TSN25 = (TSN_TSN25 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: TSN  --------------------------------------
// SVD Line: 8398

//  <view> TSN
//    <name> TSN </name>
//    <item> SFDITEM_REG__TSN_TSN85 </item>
//    <item> SFDITEM_REG__TSN_TSN25 </item>
//  </view>
//  


// -------------------------  Register Item Address: UID_UID_UID_UID0  ----------------------------
// SVD Line: 8449

unsigned int UID_UID_UID_UID0 __AT (0x0050084C);



// -----------------------------  Register Item: UID_UID_UID_UID0  --------------------------------
// SVD Line: 8449

//  <item> SFDITEM_REG__UID_UID_UID_UID0
//    <name> UID0 </name>
//    <i> [Bits 31..0] RO (@ 0x0050084C) UID word 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UID_UID_UID_UID0 >> 0) & 0xFFFFFFFF), ((UID_UID_UID_UID0 = (UID_UID_UID_UID0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: UID_UID_UID_UID1  ----------------------------
// SVD Line: 8449

unsigned int UID_UID_UID_UID1 __AT (0x00500850);



// -----------------------------  Register Item: UID_UID_UID_UID1  --------------------------------
// SVD Line: 8449

//  <item> SFDITEM_REG__UID_UID_UID_UID1
//    <name> UID1 </name>
//    <i> [Bits 31..0] RO (@ 0x00500850) UID word 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UID_UID_UID_UID1 >> 0) & 0xFFFFFFFF), ((UID_UID_UID_UID1 = (UID_UID_UID_UID1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: UID_UID_UID_UID2  ----------------------------
// SVD Line: 8449

unsigned int UID_UID_UID_UID2 __AT (0x00500854);



// -----------------------------  Register Item: UID_UID_UID_UID2  --------------------------------
// SVD Line: 8449

//  <item> SFDITEM_REG__UID_UID_UID_UID2
//    <name> UID2 </name>
//    <i> [Bits 31..0] RO (@ 0x00500854) UID word 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UID_UID_UID_UID2 >> 0) & 0xFFFFFFFF), ((UID_UID_UID_UID2 = (UID_UID_UID_UID2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: UID_UID_UID_UID3  ----------------------------
// SVD Line: 8449

unsigned int UID_UID_UID_UID3 __AT (0x00500858);



// -----------------------------  Register Item: UID_UID_UID_UID3  --------------------------------
// SVD Line: 8449

//  <item> SFDITEM_REG__UID_UID_UID_UID3
//    <name> UID3 </name>
//    <i> [Bits 31..0] RO (@ 0x00500858) UID word 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UID_UID_UID_UID3 >> 0) & 0xFFFFFFFF), ((UID_UID_UID_UID3 = (UID_UID_UID_UID3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: UID  --------------------------------------
// SVD Line: 8433

//  <view> UID
//    <name> UID </name>
//    <item> SFDITEM_REG__UID_UID_UID_UID0 </item>
//    <item> SFDITEM_REG__UID_UID_UID_UID1 </item>
//    <item> SFDITEM_REG__UID_UID_UID_UID2 </item>
//    <item> SFDITEM_REG__UID_UID_UID_UID3 </item>
//  </view>
//  


// -----------------------------   IRQ Num definition: BAT32A237  ---------------------------------
// SVD Line: 36



// ------------------------------------------------------------------------------------------------
// -----                              Interrupt Number Definition                             -----
// ------------------------------------------------------------------------------------------------



// ------------------------  ARM Cortex-M0+ Specific Interrupt Numbers  ---------------------------

//  <qitem> Reset_IRQ
//    <name> Reset </name>
//    <i> Reset Vector, invoked on Power up and warm reset </i>
//    <loc> 1 </loc>
//  </qitem>
//  
//  <qitem> NonMaskableInt_IRQ
//    <name> NonMaskableInt </name>
//    <i> Non maskable Interrupt, cannot be stopped or preempted </i>
//    <loc> 2 </loc>
//  </qitem>
//  
//  <qitem> HardFault_IRQ
//    <name> HardFault </name>
//    <i> Hard Fault, all classes of Fault </i>
//    <loc> 3 </loc>
//  </qitem>
//  
//  <qitem> SVCall_IRQ
//    <name> SVCall </name>
//    <i> System Service Call via SVC instruction </i>
//    <loc> 11 </loc>
//  </qitem>
//  
//  <qitem> PendSV_IRQ
//    <name> PendSV </name>
//    <i> Pendable request for system service </i>
//    <loc> 14 </loc>
//  </qitem>
//  
//  <qitem> SysTick_IRQ
//    <name> SysTick </name>
//    <i> System Tick Timer </i>
//    <loc> 15 </loc>
//  </qitem>
//  


// --------------------------  BAT32A237 Specific Interrupt Numbers  ------------------------------

//  <qitem> LVI_IRQ
//    <name> LVI </name>
//    <i> Low Voltage detection interrupt </i>
//    <loc> 16 </loc>
//  </qitem>
//  
//  <qitem> INTP0_IRQ
//    <name> INTP0 </name>
//    <i> INTP0 External interrupt request input is valid </i>
//    <loc> 17 </loc>
//  </qitem>
//  
//  <qitem> INTP1_IRQ
//    <name> INTP1 </name>
//    <i> INTP1 External interrupt request input is valid </i>
//    <loc> 18 </loc>
//  </qitem>
//  
//  <qitem> INTP2_IRQ
//    <name> INTP2 </name>
//    <i> INTP2 External interrupt request input is valid </i>
//    <loc> 19 </loc>
//  </qitem>
//  
//  <qitem> INTP3_IRQ
//    <name> INTP3 </name>
//    <i> INTP3 External interrupt request input is valid </i>
//    <loc> 20 </loc>
//  </qitem>
//  
//  <qitem> INTP4_IRQ
//    <name> INTP4 </name>
//    <i> INTP4 External interrupt request input is valid </i>
//    <loc> 21 </loc>
//  </qitem>
//  
//  <qitem> INTP5_IRQ
//    <name> INTP5 </name>
//    <i> INTP5 External interrupt request input is valid </i>
//    <loc> 22 </loc>
//  </qitem>
//  
//  <qitem> ST2_IRQ
//    <name> ST2 </name>
//    <i> UART2 transmission transfer end or buffer empty </i>
//    <loc> 23 </loc>
//  </qitem>
//  
//  <qitem> SR2_IRQ
//    <name> SR2 </name>
//    <i> UART2 rerception transfer </i>
//    <loc> 24 </loc>
//  </qitem>
//  
//  <qitem> SRE2_IRQ
//    <name> SRE2 </name>
//    <i> UART2 rerception communication error occurrence </i>
//    <loc> 25 </loc>
//  </qitem>
//  
//  <qitem> ST0_IRQ
//    <name> ST0 </name>
//    <i> UART0 transmission transfer end or buffer empty </i>
//    <loc> 26 </loc>
//  </qitem>
//  
//  <qitem> SR0_IRQ
//    <name> SR0 </name>
//    <i> UART0 rerception transfer </i>
//    <loc> 27 </loc>
//  </qitem>
//  
//  <qitem> SRE0_IRQ
//    <name> SRE0 </name>
//    <i> UART0 rerception communication error occurrence </i>
//    <loc> 28 </loc>
//  </qitem>
//  
//  <qitem> ST1_IRQ
//    <name> ST1 </name>
//    <i> UART1 transmission transfer end or buffer empty </i>
//    <loc> 29 </loc>
//  </qitem>
//  
//  <qitem> SR1_IRQ
//    <name> SR1 </name>
//    <i> UART1 rerception transfer </i>
//    <loc> 30 </loc>
//  </qitem>
//  
//  <qitem> SRE1_IRQ
//    <name> SRE1 </name>
//    <i> UART1 rerception communication error occurrence </i>
//    <loc> 31 </loc>
//  </qitem>
//  
//  <qitem> IICA_IRQ
//    <name> IICA </name>
//    <i> IICA interrupt request </i>
//    <loc> 32 </loc>
//  </qitem>
//  
//  <qitem> TM00_IRQ
//    <name> TM00 </name>
//    <i> TM4 channel 0 interrupt request </i>
//    <loc> 33 </loc>
//  </qitem>
//  
//  <qitem> TM01_IRQ
//    <name> TM01 </name>
//    <i> TM4 channel 1 interrupt request </i>
//    <loc> 34 </loc>
//  </qitem>
//  
//  <qitem> TM02_IRQ
//    <name> TM02 </name>
//    <i> TM4 channel 2 interrupt request </i>
//    <loc> 35 </loc>
//  </qitem>
//  
//  <qitem> TM03_IRQ
//    <name> TM03 </name>
//    <i> TM4 channel 3 interrupt request </i>
//    <loc> 36 </loc>
//  </qitem>
//  
//  <qitem> ADC_IRQ
//    <name> ADC </name>
//    <i> ADC interrupt request </i>
//    <loc> 37 </loc>
//  </qitem>
//  
//  <qitem> RTC_IRQ
//    <name> RTC </name>
//    <i> Real-Time Clock interrupt request </i>
//    <loc> 38 </loc>
//  </qitem>
//  
//  <qitem> KEY_IRQ
//    <name> KEY </name>
//    <i> KEY return interrupt request </i>
//    <loc> 39 </loc>
//  </qitem>
//  
//  <qitem> CMP0_IRQ
//    <name> CMP0 </name>
//    <i> CMP0 interrupt request </i>
//    <loc> 40 </loc>
//  </qitem>
//  
//  <qitem> CMP1_IRQ
//    <name> CMP1 </name>
//    <i> CMP1 interrupt request </i>
//    <loc> 41 </loc>
//  </qitem>
//  
//  <qitem> TMA_IRQ
//    <name> TMA </name>
//    <i> TMA interrupt request </i>
//    <loc> 42 </loc>
//  </qitem>
//  
//  <qitem> TMM0_IRQ
//    <name> TMM0 </name>
//    <i> TMM channel 0 interrupt request </i>
//    <loc> 43 </loc>
//  </qitem>
//  
//  <qitem> TMM1_IRQ
//    <name> TMM1 </name>
//    <i> TMM channel 1 interrupt request </i>
//    <loc> 44 </loc>
//  </qitem>
//  
//  <qitem> TMB_IRQ
//    <name> TMB </name>
//    <i> TMB interrupt request </i>
//    <loc> 45 </loc>
//  </qitem>
//  
//  <qitem> TMC_IRQ
//    <name> TMC </name>
//    <i> TMC interrupt request </i>
//    <loc> 46 </loc>
//  </qitem>
//  
//  <qitem> FMC_IRQ
//    <name> FMC </name>
//    <i> Flash erase or write finish </i>
//    <loc> 47 </loc>
//  </qitem>
//  
//  <irqtable> BAT32A237_IRQTable
//    <name> BAT32A237 Interrupt Table </name>
//    <nvicPrioBits> 2 </nvicPrioBits>
//    <qitem> Reset_IRQ </qitem>
//    <qitem> NonMaskableInt_IRQ </qitem>
//    <qitem> HardFault_IRQ </qitem>
//    <qitem> SVCall_IRQ </qitem>
//    <qitem> PendSV_IRQ </qitem>
//    <qitem> SysTick_IRQ </qitem>
//    <qitem> LVI_IRQ </qitem>
//    <qitem> INTP0_IRQ </qitem>
//    <qitem> INTP1_IRQ </qitem>
//    <qitem> INTP2_IRQ </qitem>
//    <qitem> INTP3_IRQ </qitem>
//    <qitem> INTP4_IRQ </qitem>
//    <qitem> INTP5_IRQ </qitem>
//    <qitem> ST2_IRQ </qitem>
//    <qitem> SR2_IRQ </qitem>
//    <qitem> SRE2_IRQ </qitem>
//    <qitem> ST0_IRQ </qitem>
//    <qitem> SR0_IRQ </qitem>
//    <qitem> SRE0_IRQ </qitem>
//    <qitem> ST1_IRQ </qitem>
//    <qitem> SR1_IRQ </qitem>
//    <qitem> SRE1_IRQ </qitem>
//    <qitem> IICA_IRQ </qitem>
//    <qitem> TM00_IRQ </qitem>
//    <qitem> TM01_IRQ </qitem>
//    <qitem> TM02_IRQ </qitem>
//    <qitem> TM03_IRQ </qitem>
//    <qitem> ADC_IRQ </qitem>
//    <qitem> RTC_IRQ </qitem>
//    <qitem> KEY_IRQ </qitem>
//    <qitem> CMP0_IRQ </qitem>
//    <qitem> CMP1_IRQ </qitem>
//    <qitem> TMA_IRQ </qitem>
//    <qitem> TMM0_IRQ </qitem>
//    <qitem> TMM1_IRQ </qitem>
//    <qitem> TMB_IRQ </qitem>
//    <qitem> TMC_IRQ </qitem>
//    <qitem> FMC_IRQ </qitem>
//  </irqtable>


// ------------------------------------   Menu: BAT32A237  ----------------------------------------
// SVD Line: 36



// ------------------------------  Peripheral Menu: 'BAT32A237'  ----------------------------------



// ------------------------------------------------------------------------------------------------
// -----                                       Main Menu                                      -----
// ------------------------------------------------------------------------------------------------

//  <b> ADC
//    <m> ADC </m>
//  </b>
//  
//  <b> BGR
//    <m> BGR </m>
//  </b>
//  
//  <b> CAN0
//    <m> CAN0 </m>
//    <m> CAN0MSG00 </m>
//    <m> CAN0MSG01 </m>
//    <m> CAN0MSG02 </m>
//    <m> CAN0MSG03 </m>
//    <m> CAN0MSG04 </m>
//    <m> CAN0MSG05 </m>
//    <m> CAN0MSG06 </m>
//    <m> CAN0MSG07 </m>
//    <m> CAN0MSG08 </m>
//    <m> CAN0MSG09 </m>
//    <m> CAN0MSG10 </m>
//    <m> CAN0MSG11 </m>
//    <m> CAN0MSG12 </m>
//    <m> CAN0MSG13 </m>
//    <m> CAN0MSG14 </m>
//    <m> CAN0MSG15 </m>
//  </b>
//  
//  <b> CLK
//    <m> CGC </m>
//  </b>
//  
//  <b> CMP
//    <m> CMP </m>
//  </b>
//  
//  <b> CRC
//    <m> CRC </m>
//  </b>
//  
//  <b> DAC
//    <m> DAC </m>
//  </b>
//  
//  <b> DBG
//    <m> DBG </m>
//  </b>
//  
//  <b> DIV
//    <m> DIV </m>
//  </b>
//  
//  <b> DMA
//    <m> DMA </m>
//  </b>
//  
//  <b> DMAVEC
//    <m> DMAVEC </m>
//  </b>
//  
//  <b> ELC
//    <m> ELC </m>
//  </b>
//  
//  <b> FMC
//    <m> FMC </m>
//  </b>
//  
//  <b> IICA
//    <m> IICA </m>
//  </b>
//  
//  <b> INT
//    <m> INT </m>
//  </b>
//  
//  <b> INTM
//    <m> INTM </m>
//  </b>
//  
//  <b> IRDA
//    <m> IRDA </m>
//  </b>
//  
//  <b> KEY
//    <m> KEY </m>
//  </b>
//  
//  <b> LVD
//    <m> LVD </m>
//  </b>
//  
//  <b> MISC
//    <m> MISC </m>
//  </b>
//  
//  <b> MTB
//    <m> MTB </m>
//  </b>
//  
//  <b> PCBZ
//    <m> PCBZ </m>
//  </b>
//  
//  <b> PGA
//    <m> PGA </m>
//  </b>
//  
//  <b> PORT
//    <m> PORT </m>
//  </b>
//  
//  <b> RST
//    <m> RST </m>
//  </b>
//  
//  <b> RTC
//    <m> RTC </m>
//  </b>
//  
//  <b> SAF
//    <m> SAF </m>
//  </b>
//  
//  <b> SCI0
//    <m> SCI0 </m>
//  </b>
//  
//  <b> SCI1
//    <m> SCI1 </m>
//  </b>
//  
//  <b> TM40
//    <m> TM40 </m>
//  </b>
//  
//  <b> TMA
//    <m> TMA </m>
//  </b>
//  
//  <b> TMB
//    <m> TMB </m>
//  </b>
//  
//  <b> TMC
//    <m> TMC </m>
//  </b>
//  
//  <b> TMM
//    <m> TMM </m>
//  </b>
//  
//  <b> TSN
//    <m> TSN </m>
//  </b>
//  
//  <b> UID
//    <m> UID </m>
//  </b>
//  
//  <b> WDT
//    <m> WDT </m>
//  </b>
//  
